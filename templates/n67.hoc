/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */
//Defining granule cell

	begintemplate GranuleCell67

// Original name on neuroMorpho.org 817884.CNG.swc

ndend1=34

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 33 dend[i] all.append()


	gcldend  = new SectionList()
		dend[15] gcldend.append()
		dend[0] gcldend.append()


	pdend  = new SectionList()
		
		for i=6, 7  dend[i] pdend.append()
		dend[12] pdend.append()
		dend[16] pdend.append()
		dend[18] pdend.append()
		for i=23, 24  dend[i] pdend.append()
		dend[27] pdend.append()
		


	mdend  = new SectionList()
		dend[1] mdend.append()
		dend[3] mdend.append()		  
		dend[8] mdend.append()
		dend[19] mdend.append()		  
		dend[28] mdend.append()
		dend[31] mdend.append()		  
		

	ddend  = new SectionList()
		
		dend[2] ddend.append()
		for i=4, 5 dend[i] ddend.append()
		for i=9, 11 dend[i] ddend.append()
		for i=13, 14 dend[i] ddend.append()
		dend[17] ddend.append()
		for i=20, 22 dend[i] ddend.append()
		for i=25, 26 dend[i] ddend.append()
		for i=29, 30 dend[i] ddend.append()
		for i=32, 33 dend[i] ddend.append()
		

}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }


  connect dend(0), soma(1)
  for i = 1, 2 connect dend[i](0), dend[i-1](1)
  connect dend[3](0), dend[1](1)
  for i = 4, 5 connect dend[i](0), dend[3](1)
  connect dend[6](0), dend(1)
  for i = 7, 9 connect dend[i](0), dend[i-1](1)
  connect dend[10](0), dend[8](1)
  connect dend[11](0), dend[7](1)
  connect dend[12](0), dend[6](1)
  for i = 13, 14 connect dend[i](0), dend[12](1)
  connect dend[15](0), soma(0)
  for i = 16, 17 connect dend[i](0), dend[i-1](1)
  connect dend[18](0), dend[16](1)
  for i = 19, 20 connect dend[i](0), dend[i-1](1)
  connect dend[21](0), dend[19](1)
  connect dend[22](0), dend[18](1)
  connect dend[23](0), dend[15](1)
  for i = 24, 25 connect dend[i](0), dend[i-1](1)
  connect dend[26](0), dend[24](1)
  connect dend[27](0), dend[23](1)
  for i = 28, 29 connect dend[i](0), dend[i-1](1)
  connect dend[30](0), dend[28](1)
  connect dend[31](0), dend[27](1)
  for i = 32, 33 connect dend[i](0), dend[31](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 7.10792)
	pt3dadd(-0.79, 17.35, -0.88, 4.05)
  }
  dend {pt3dclear()
	pt3dadd(-0.79, 17.35, -0.88, 4.05)
	pt3dadd(1.32, 23.2, -1.9, 4.05)
	pt3dadd(1.93, 28.61, -5.06, 4.05)
	pt3dadd(3.78, 33.34, -7.22, 4.05)
	pt3dadd(4.31, 34.46, -7.22, 4.05)
  }
  dend[1] {pt3dclear()
	pt3dadd(4.31, 34.46, -7.22, 4.05)
	pt3dadd(7.49, 36.94, -10.1, 2.25)
	pt3dadd(14.64, 37.84, -12.69, 2.25)
	pt3dadd(19.14, 38.54, -16.1, 2.25)
	pt3dadd(23.91, 40.57, -18.91, 2.25)
	pt3dadd(28.77, 42.43, -21.02, 2.25)
	pt3dadd(33.53, 44.91, -21.9, 2.25)
	pt3dadd(38.56, 48.06, -23.68, 2.25)
	pt3dadd(44.65, 52.11, -23.68, 2.25)
	pt3dadd(48.63, 55.04, -23.72, 2.25)
	pt3dadd(53.24, 58.38, -25.03, 2.25)
	pt3dadd(59.33, 61.76, -25.15, 2.25)
	pt3dadd(64.36, 64.46, -26.84, 2.25)
	pt3dadd(68.59, 66.71, -26.84, 2.25)
	pt3dadd(73.36, 69.87, -28.21, 2.25)
	pt3dadd(73.14, 73.63, -28.32, 2.25)
	pt3dadd(72.87, 78.59, -27.85, 2.25)
	pt3dadd(74.19, 85.37, -30.95, 2.25)
	pt3dadd(76.84, 92.35, -32.84, 2.25)
	pt3dadd(78.32, 97.58, -35.42, 2.25)
	pt3dadd(79.12, 101.41, -35.42, 2.25)
	pt3dadd(79.65, 103.66, -35.19, 2.7)
  }
  dend[2] {pt3dclear()
	pt3dadd(79.65, 103.66, -35.19, 2.7)
	pt3dadd(81.24, 108.39, -38.01, 1.8)
	pt3dadd(82.56, 112, -39.53, 1.8)
	pt3dadd(84.45, 119.23, -39.44, 1.8)
	pt3dadd(85.25, 126.44, -39.04, 1.8)
	pt3dadd(86.57, 132.07, -39.04, 1.8)
	pt3dadd(88.59, 141.49, -39.04, 1.8)
	pt3dadd(88.59, 147.34, -39.04, 1.8)
	pt3dadd(88.85, 156.8, -39.29, 1.8)
	pt3dadd(89, 165.79, -39.5, 1.8)
	pt3dadd(90.32, 174.35, -39.5, 1.8)
	pt3dadd(90.06, 181.33, -39.5, 1.8)
	pt3dadd(88.35, 187.96, -37.9, 1.8)
	pt3dadd(89.14, 200.57, -40.3, 1.8)
	pt3dadd(89.34, 210.76, -39.98, 1.8)
	pt3dadd(89.34, 221.12, -42.58, 1.8)
	pt3dadd(90.13, 229.11, -42.58, 1.8)
	pt3dadd(91.19, 238.35, -45, 1.8)
	pt3dadd(91.19, 249.38, -46.66, 1.8)
	pt3dadd(91.2, 258.41, -44.73, 1.8)
	pt3dadd(92.79, 267.87, -46.66, 1.8)
	pt3dadd(92.01, 276.59, -48.17, 1.8)
	pt3dadd(90.95, 284.92, -50.01, 1.8)
	pt3dadd(91.21, 294.16, -51.99, 1.8)
	pt3dadd(91.14, 300.28, -54.76, 1.8)
	pt3dadd(94.31, 306.36, -55.04, 1.8)
	pt3dadd(99.87, 313.57, -56.31, 1.8)
	pt3dadd(106.88, 320.83, -55.74, 1.8)
  }
  dend[3] {pt3dclear()
	pt3dadd(79.65, 103.66, -35.19, 2.7)
	pt3dadd(79.86, 112.56, -34.27, 2.25)
	pt3dadd(79.86, 116.17, -34.27, 2.25)
  }
  dend[4] {pt3dclear()
	pt3dadd(79.86, 116.17, -34.27, 2.25)
	pt3dadd(81.45, 123.6, -34.67, 1.8)
	pt3dadd(81.4, 130.81, -33.97, 1.8)
	pt3dadd(82.72, 138.24, -33.94, 1.8)
	pt3dadd(83.25, 143.65, -33.94, 1.8)
	pt3dadd(84.26, 152.39, -33.94, 1.8)
	pt3dadd(85.32, 157.79, -33.94, 1.8)
	pt3dadd(86.64, 166.35, -34.94, 1.8)
	pt3dadd(87.79, 176.74, -34.94, 1.8)
	pt3dadd(89.38, 183.27, -34.94, 1.8)
	pt3dadd(92.56, 193.41, -36.28, 1.8)
	pt3dadd(92.86, 204.21, -36.34, 1.8)
	pt3dadd(94.72, 215.25, -37.56, 1.8)
	pt3dadd(96.92, 223.99, -38.43, 1.8)
	pt3dadd(98.51, 231.87, -38.43, 1.8)
	pt3dadd(98.77, 240.2, -37.8, 1.8)
	pt3dadd(96.88, 253.49, -36.94, 1.8)
	pt3dadd(97.15, 264.98, -33, 1.8)
	pt3dadd(95.81, 268.35, -32.66, 1.8)
	pt3dadd(95.02, 278.49, -32.66, 1.8)
	pt3dadd(96.08, 291.78, -30.16, 1.8)
	pt3dadd(95.21, 304.87, -30.16, 1.8)
	pt3dadd(94.68, 309.6, -30.16, 1.8)
	pt3dadd(96.53, 315, -33.26, 1.8)
	pt3dadd(94.42, 317.68, -35.83, 1.8)
	pt3dadd(89.12, 317.68, -35.83, 1.8)
  }
  dend[5] {pt3dclear()
	pt3dadd(79.86, 116.17, -34.27, 2.25)
	pt3dadd(78.21, 125.56, -31.75, 2.25)
	pt3dadd(77.95, 136.83, -27.22, 1.8)
	pt3dadd(76.68, 143.76, -26.89, 1.8)
	pt3dadd(77.21, 157.05, -22.88, 1.8)
	pt3dadd(77.73, 164.66, -22.18, 1.8)
	pt3dadd(81.17, 175.02, -20.84, 1.8)
	pt3dadd(82.5, 179.98, -20.84, 1.8)
	pt3dadd(83.99, 192.39, -17.54, 1.8)
	pt3dadd(85.31, 203.65, -16.29, 1.8)
	pt3dadd(85.6, 218.24, -13.3, 1.8)
	pt3dadd(85.6, 229.96, -9.77, 1.8)
	pt3dadd(84.94, 246.92, -8.48, 1.8)
	pt3dadd(83.62, 261.11, -5.4, 1.8)
	pt3dadd(79.63, 270.69, -0.14, 1.8)
	pt3dadd(75.92, 275.87, 3.46, 1.8)
	pt3dadd(74.33, 277.9, 3.46, 1.8)
	pt3dadd(72.48, 279.7, 3.46, 1.8)
	pt3dadd(70.81, 286.61, 3.46, 1.8)
	pt3dadd(69.75, 291.34, 4.28, 1.8)
	pt3dadd(67.9, 293.37, 4.66, 1.8)
  }
  dend[6] {pt3dclear()
	pt3dadd(4.31, 34.46, -7.22, 4.05)
	pt3dadd(2.99, 38.29, -7.03, 2.7)
	pt3dadd(2.46, 41.9, -7.03, 2.7)
	pt3dadd(2.19, 43.25, -8.47, 2.7)
  }
  dend[7] {pt3dclear()
	pt3dadd(2.19, 43.25, -8.47, 2.7)
	pt3dadd(3.52, 47.3, -9.36, 2.25)
	pt3dadd(2.99, 53.16, -13.72, 2.25)
	pt3dadd(1.93, 59.69, -17.03, 2.25)
	pt3dadd(-0.54, 66.55, -19.28, 2.7)
	pt3dadd(-3.18, 76.91, -19.28, 2.7)
	pt3dadd(-3.98, 83.89, -21.14, 2.7)
	pt3dadd(-5.36, 94.33, -18.25, 2.7)
	pt3dadd(-5.89, 102.89, -18.13, 2.25)
	pt3dadd(-9.13, 113.4, -17.1, 2.7)
	pt3dadd(-10.72, 120.84, -16.87, 2.7)
	pt3dadd(-11.61, 122.62, -16.87, 2.7)
  }
  dend[8] {pt3dclear()
	pt3dadd(-11.61, 122.62, -16.87, 2.7)
	pt3dadd(-10.82, 129.83, -16.82, 2.25)
	pt3dadd(-10.82, 137.03, -16.82, 2.25)
	pt3dadd(-11.08, 144.02, -19.56, 2.25)
	pt3dadd(-12.81, 150.75, -20.54, 2.25)
	pt3dadd(-13.34, 154.58, -22.53, 2.25)
	pt3dadd(-14.39, 160.43, -21.7, 2.25)
	pt3dadd(-14.39, 162.24, -23.32, 2.25)
  }
  dend[9] {pt3dclear()
	pt3dadd(-14.39, 162.24, -23.32, 2.25)
	pt3dadd(-13.97, 168.7, -23.88, 2.25)
	pt3dadd(-13.44, 173.88, -29.84, 2.25)
	pt3dadd(-13.7, 183.57, -37.46, 2.25)
	pt3dadd(-11.96, 188.55, -38.93, 2.25)
	pt3dadd(-13.02, 192.83, -44.98, 2.25)
	pt3dadd(-12.76, 197.78, -49.12, 2.25)
	pt3dadd(-13.82, 201.16, -51.81, 2.25)
	pt3dadd(-13.82, 205.22, -52.49, 2.25)
	pt3dadd(-16.46, 212.85, -59.11, 2.25)
	pt3dadd(-15.41, 221.18, -63.64, 2.25)
	pt3dadd(-15.67, 229.52, -71.58, 1.8)
	pt3dadd(-15.75, 236.82, -76.06, 1.8)
	pt3dadd(-14.43, 243.13, -80.21, 1.8)
	pt3dadd(-14.96, 247.64, -85.41, 1.8)
	pt3dadd(-12.63, 251.87, -88.62, 1.8)
	pt3dadd(-13.96, 256.38, -92.28, 1.8)
	pt3dadd(-5.22, 269.89, -103, 1.8)
	pt3dadd(-10.91, 284.21, -110.48, 1.8)
	pt3dadd(-11.71, 290.99, -112.87, 1.8)
  }
  dend[10] {pt3dclear()
	pt3dadd(-14.39, 162.24, -23.32, 2.25)
	pt3dadd(-19.12, 172.05, -23.32, 2.25)
	pt3dadd(-21.5, 178.81, -23.32, 1.8)
	pt3dadd(-26.8, 188.5, -24.58, 1.8)
	pt3dadd(-32.58, 195.82, -22.82, 1.8)
	pt3dadd(-37.34, 204.38, -24.34, 1.8)
	pt3dadd(-39.73, 213.39, -24.82, 1.8)
	pt3dadd(-43.72, 224.65, -23.72, 1.8)
	pt3dadd(-46.64, 238.62, -17.99, 1.8)
	pt3dadd(-49.55, 249.23, -17.99, 1.8)
	pt3dadd(-50.08, 259.59, -18.95, 1.8)
	pt3dadd(-52.86, 271.53, -19.72, 1.8)
	pt3dadd(-56.57, 279.41, -15.52, 1.8)
	pt3dadd(-54.7, 291.13, -10.56, 1.8)
	pt3dadd(-54.29, 293.27, -10.76, 1.8)
  }
  dend[11] {pt3dclear()
	pt3dadd(-11.61, 122.62, -16.87, 2.7)
	pt3dadd(-17.44, 127.95, -18.1, 2.25)
	pt3dadd(-26.18, 136.96, -18.1, 2.25)
	pt3dadd(-32.01, 143.27, -19.37, 2.25)
	pt3dadd(-39.31, 147.95, -17.86, 1.8)
	pt3dadd(-43.81, 154.48, -20.21, 1.8)
	pt3dadd(-47.79, 160.56, -22.42, 1.8)
	pt3dadd(-50.93, 166.45, -23.51, 1.8)
	pt3dadd(-54.64, 178.16, -25.76, 1.8)
	pt3dadd(-56.49, 186.95, -32.86, 1.8)
	pt3dadd(-60.79, 196.65, -35.2, 1.8)
	pt3dadd(-62.64, 206.34, -34.64, 1.8)
	pt3dadd(-68.38, 222.61, -36.58, 1.8)
	pt3dadd(-71.82, 232.52, -33.66, 1.8)
	pt3dadd(-75.26, 244.98, -35.48, 1.8)
	pt3dadd(-80.03, 255.12, -37.9, 1.8)
	pt3dadd(-86.31, 266.23, -41.12, 1.8)
	pt3dadd(-91.07, 277.94, -41.12, 1.8)
	pt3dadd(-92.74, 287.2, -44.34, 1.8)
  }
  dend[12] {pt3dclear()
	pt3dadd(2.19, 43.25, -8.47, 2.7)
	pt3dadd(0.39, 49.22, -8.47, 2.25)
	pt3dadd(-0.14, 57.33, -8.47, 2.25)
	pt3dadd(-1.19, 64.09, -9.7, 2.25)
	pt3dadd(-3.48, 71.17, -10.98, 2.25)
	pt3dadd(-5.06, 81.31, -12.91, 2.25)
	pt3dadd(-6.12, 88.52, -12.91, 2.25)
	pt3dadd(-8.8, 95.8, -14.7, 2.25)
	pt3dadd(-10.12, 101.2, -15.8, 2.25)
	pt3dadd(-13.57, 106.84, -17.43, 1.8)
	pt3dadd(-18.38, 114.67, -14.93, 1.8)
	pt3dadd(-20.77, 119.63, -14.93, 1.8)
	pt3dadd(-22.09, 122.56, -14.93, 2.25)
  }
  dend[13] {pt3dclear()
	pt3dadd(-22.09, 122.56, -14.93, 2.25)
	pt3dadd(-23.15, 129.99, -14.93, 1.8)
  }
}
proc shape3d_2() {
  dend[13] {	pt3dadd(-25.54, 135.42, -14.93, 1.8)
	pt3dadd(-25.28, 143.08, -18.93, 1.8)
	pt3dadd(-25.28, 153.22, -21.4, 1.8)
	pt3dadd(-26.68, 159.72, -23.53, 1.8)
	pt3dadd(-25.35, 165.58, -27.06, 1.8)
	pt3dadd(-25.35, 175.72, -29.8, 1.8)
	pt3dadd(-26.15, 186.83, -33.2, 1.8)
	pt3dadd(-25.62, 192.01, -36.19, 1.8)
	pt3dadd(-26.68, 201.47, -39.52, 1.8)
	pt3dadd(-28.08, 211.08, -41.04, 1.8)
	pt3dadd(-28.87, 217.61, -43.36, 1.8)
	pt3dadd(-28.87, 227.52, -45.05, 1.8)
	pt3dadd(-29.55, 235.92, -46.66, 1.8)
	pt3dadd(-33.25, 248.99, -49.45, 1.8)
	pt3dadd(-39.24, 262.08, -54.49, 1.8)
	pt3dadd(-43.16, 266.28, -56.87, 1.8)
	pt3dadd(-45.54, 273.49, -56.87, 1.8)
	pt3dadd(-51.1, 280.47, -59.25, 1.8)
	pt3dadd(-54.28, 281.6, -60.98, 1.8)
	pt3dadd(-61.69, 289.71, -62.95, 1.8)
	pt3dadd(-68.58, 295.57, -64.68, 1.8)
  }
  dend[14] {pt3dclear()
	pt3dadd(-22.09, 122.56, -14.93, 2.25)
	pt3dadd(-28.24, 127.72, -12.79, 1.8)
	pt3dadd(-34.6, 132.68, -9.59, 1.8)
	pt3dadd(-41.75, 137.86, -8.9, 1.8)
	pt3dadd(-50.22, 143.49, -8.68, 1.8)
	pt3dadd(-56.57, 146.29, -8.68, 1.8)
	pt3dadd(-63.46, 153.05, -5.59, 1.8)
	pt3dadd(-66.37, 158.01, -5.59, 1.8)
	pt3dadd(-70.61, 163.86, -1.36, 1.8)
	pt3dadd(-77.05, 172.5, 1.01, 1.8)
	pt3dadd(-82.61, 180.16, -1.1, 1.8)
	pt3dadd(-86.32, 186.47, -1.1, 1.8)
	pt3dadd(-92.44, 194.7, 0.58, 1.8)
	pt3dadd(-95.88, 203.49, 0.58, 1.8)
	pt3dadd(-98.53, 214.75, 0.18, 1.8)
	pt3dadd(-100.14, 220.2, 3.82, 1.8)
	pt3dadd(-102.79, 228.53, 3.84, 1.8)
	pt3dadd(-105.97, 235.51, 3.13, 1.8)
	pt3dadd(-111.67, 242.45, 4.8, 1.8)
	pt3dadd(-118.55, 255.96, 7.93, 1.8)
	pt3dadd(-123.38, 261.17, 8.13, 1.8)
	pt3dadd(-126.3, 268.38, 7.68, 1.8)
	pt3dadd(-127.62, 278.29, 7.76, 1.8)
  }
  dend[15] {pt3dclear()
	pt3dadd(0, 0, 0, 3.6)
	pt3dadd(-15.96, 14.87, 12.3, 3.6)
	pt3dadd(-17.55, 16, 16.43, 3.6)
  }
  dend[16] {pt3dclear()
	pt3dadd(-17.55, 16, 16.43, 3.6)
	pt3dadd(-21.79, 16.02, 17.17, 3.15)
	pt3dadd(-26.55, 16.7, 24.9, 3.15)
	pt3dadd(-30.52, 18.95, 31.16, 3.15)
	pt3dadd(-33.79, 22.37, 32.74, 3.15)
	pt3dadd(-36.18, 25.07, 38.12, 3.15)
  }
  dend[17] {pt3dclear()
	pt3dadd(-36.18, 25.07, 38.12, 3.15)
	pt3dadd(-40.68, 24.4, 41.48, 2.25)
	pt3dadd(-45.71, 25.3, 46.17, 2.25)
	pt3dadd(-47.83, 26.2, 46.66, 2.25)
	pt3dadd(-52.59, 25.07, 50.42, 2.25)
	pt3dadd(-56.52, 24.96, 51.42, 2.25)
	pt3dadd(-59.24, 25.64, 54.64, 2.25)
	pt3dadd(-61.62, 28.12, 56.22, 2.25)
	pt3dadd(-63.74, 27.67, 59.24, 2.25)
	pt3dadd(-64.53, 31.27, 62.86, 2.25)
	pt3dadd(-65.59, 33.98, 66.2, 2.25)
	pt3dadd(-67.97, 37.58, 71.75, 2.25)
	pt3dadd(-69.83, 45.24, 75.93, 2.25)
	pt3dadd(-73.21, 49.7, 77.8, 2.25)
	pt3dadd(-72.68, 58.03, 82.27, 2.25)
	pt3dadd(-77.97, 62.54, 93.1, 2.25)
	pt3dadd(-81.68, 65.01, 96.63, 2.25)
	pt3dadd(-86.33, 72.72, 100.26, 2.25)
	pt3dadd(-88.18, 79.93, 104.03, 2.25)
	pt3dadd(-89.51, 88.72, 108.48, 2.25)
	pt3dadd(-91.8, 97.8, 111.18, 2.25)
	pt3dadd(-93.39, 104.11, 112.88, 2.25)
	pt3dadd(-93.12, 112.89, 116.98, 2.25)
	pt3dadd(-95.6, 122.68, 122.13, 2.25)
	pt3dadd(-96.66, 129.89, 124.5, 1.8)
	pt3dadd(-98.25, 136.87, 129.36, 1.8)
	pt3dadd(-102.65, 147.58, 131.3, 1.8)
	pt3dadd(-103.98, 153.66, 134.3, 1.8)
	pt3dadd(-105.48, 153.36, 136.14, 1.8)
	pt3dadd(-104.42, 155.61, 136.14, 1.8)
	pt3dadd(-107.6, 161.47, 136.14, 1.8)
	pt3dadd(-109.72, 167.1, 138.47, 1.8)
	pt3dadd(-111.84, 176.34, 139.73, 1.8)
	pt3dadd(-113.67, 180.67, 139.73, 1.8)
	pt3dadd(-113.67, 183.82, 139.73, 1.8)
	pt3dadd(-117.91, 193.51, 141.98, 1.8)
	pt3dadd(-123.32, 202.06, 142.52, 1.8)
	pt3dadd(-126.76, 210.42, 143.73, 1.8)
	pt3dadd(-129.4, 215.12, 143.73, 1.8)
	pt3dadd(-131.25, 222.78, 146.9, 1.8)
  }
  dend[18] {pt3dclear()
	pt3dadd(-36.18, 25.07, 38.12, 3.15)
	pt3dadd(-36.68, 28.27, 42.55, 2.25)
	pt3dadd(-35.09, 34.35, 45.38, 2.25)
	pt3dadd(-34.82, 39.09, 47.94, 2.7)
	pt3dadd(-33.23, 45.17, 49.75, 2.7)
	pt3dadd(-32.16, 50.35, 52.7, 2.7)
	pt3dadd(-30.57, 58.23, 54.29, 2.7)
	pt3dadd(-31.1, 68.37, 55.06, 2.7)
	pt3dadd(-32.81, 77.6, 58.13, 2.25)
	pt3dadd(-33.34, 82.36, 57.98, 2.25)
  }
  dend[19] {pt3dclear()
	pt3dadd(-33.34, 82.36, 57.98, 2.25)
	pt3dadd(-31.75, 85.74, 63.38, 2.25)
	pt3dadd(-31.75, 91.82, 60.1, 2.25)
	pt3dadd(-34.46, 101.03, 60.1, 2.25)
	pt3dadd(-35.79, 109.14, 62.04, 2.25)
	pt3dadd(-36.58, 113.87, 62.3, 2.25)
	pt3dadd(-37.88, 117.17, 63.7, 2.25)
  }
  dend[20] {pt3dclear()
	pt3dadd(-37.88, 117.17, 63.7, 2.25)
	pt3dadd(-40.26, 122.12, 64.64, 1.8)
	pt3dadd(-40.26, 128.43, 68.23, 1.8)
	pt3dadd(-44.23, 135.19, 72.82, 1.8)
	pt3dadd(-49.18, 139.47, 75.7, 1.8)
	pt3dadd(-49.98, 143.75, 77.85, 1.8)
	pt3dadd(-51.83, 150.06, 80.4, 1.8)
	pt3dadd(-53.95, 154.11, 83.77, 1.8)
	pt3dadd(-56.93, 159.17, 84.89, 1.8)
	pt3dadd(-58.78, 164.58, 88.14, 1.8)
	pt3dadd(-61.17, 169.31, 90.81, 1.8)
	pt3dadd(-64.34, 172.01, 92.77, 1.8)
	pt3dadd(-71.28, 183.79, 96.38, 1.8)
	pt3dadd(-76.31, 188.52, 97.58, 1.8)
	pt3dadd(-78.43, 194.15, 102.64, 1.8)
	pt3dadd(-78.43, 199.56, 103.48, 1.8)
	pt3dadd(-81.15, 203.16, 106.7, 1.8)
	pt3dadd(-81.94, 210.82, 108.57, 1.8)
	pt3dadd(-84.32, 218.48, 111.21, 1.8)
	pt3dadd(-88.03, 227.26, 114.74, 1.8)
	pt3dadd(-90.6, 232.15, 118.3, 1.8)
	pt3dadd(-90.34, 236.2, 116.44, 1.8)
  }
  dend[21] {pt3dclear()
	pt3dadd(-37.88, 117.17, 63.7, 2.25)
	pt3dadd(-37.42, 122.22, 65.95, 1.8)
	pt3dadd(-37.95, 128.3, 65.95, 1.8)
	pt3dadd(-38.21, 132.58, 65.95, 1.8)
	pt3dadd(-37.42, 137.99, 66.54, 1.8)
	pt3dadd(-38.74, 144.97, 66.91, 1.8)
	pt3dadd(-37.95, 149.7, 71.7, 1.8)
	pt3dadd(-38.48, 158.94, 69.92, 1.8)
	pt3dadd(-39.08, 169.35, 74.32, 1.8)
	pt3dadd(-38.02, 179.71, 78.5, 1.8)
	pt3dadd(-35.83, 188.8, 77.4, 1.8)
	pt3dadd(-34.51, 200.97, 79.04, 1.8)
	pt3dadd(-34.09, 207.3, 79.04, 1.8)
	pt3dadd(-35.68, 219.46, 80.7, 1.8)
	pt3dadd(-37.67, 228.63, 82.9, 1.8)
	pt3dadd(-40.05, 237.64, 84.7, 1.8)
	pt3dadd(-42.8, 245.47, 84.7, 1.8)
	pt3dadd(-45.18, 245.7, 84.7, 1.8)
  }
  dend[22] {pt3dclear()
	pt3dadd(-33.34, 82.36, 57.98, 2.25)
	pt3dadd(-32.82, 86.2, 58.83, 1.8)
	pt3dadd(-33.47, 92.96, 68.2, 1.8)
	pt3dadd(-31.88, 102.87, 68.2, 1.8)
	pt3dadd(-31.62, 108.5, 72.3, 1.8)
	pt3dadd(-31.88, 113.68, 72.19, 1.8)
	pt3dadd(-31.88, 118.86, 75.16, 1.8)
	pt3dadd(-31.75, 121.04, 75.16, 1.8)
	pt3dadd(-29.37, 127.8, 74.84, 1.8)
	pt3dadd(-27.52, 134.78, 77.26, 1.8)
	pt3dadd(-25.13, 141.77, 80.42, 1.8)
	pt3dadd(-24.09, 147.45, 80.42, 1.8)
	pt3dadd(-24.62, 155.78, 82.19, 1.8)
	pt3dadd(-24.36, 162.99, 85.55, 1.8)
	pt3dadd(-26.21, 172.9, 85.59, 1.8)
	pt3dadd(-25.94, 185.54, 87.61, 1.8)
	pt3dadd(-27.28, 196.38, 88.78, 1.8)
	pt3dadd(-29.13, 204.49, 90.73, 1.8)
	pt3dadd(-31.01, 214.3, 92.25, 1.8)
	pt3dadd(-33.12, 226.02, 94.77, 1.8)
	pt3dadd(-36.92, 238.8, 100.65, 1.8)
	pt3dadd(-41.95, 245.56, 104.32, 1.8)
	pt3dadd(-49.1, 249.19, 103.66, 1.8)
	pt3dadd(-54.66, 251.9, 108.72, 1.8)
	pt3dadd(-62.08, 254.6, 110.34, 1.8)
	pt3dadd(-62.87, 253.92, 113.22, 1.8)
  }
  dend[23] {pt3dclear()
	pt3dadd(-17.55, 16, 16.43, 3.6)
	pt3dadd(-19.8, 18.32, 14.74, 2.7)
	pt3dadd(-24.04, 23.95, 17.64, 2.7)
	pt3dadd(-26.95, 29.36, 18.18, 2.7)
	pt3dadd(-28.54, 32.29, 18.18, 2.7)
  }
  dend[24] {pt3dclear()
	pt3dadd(-28.54, 32.29, 18.18, 2.7)
	pt3dadd(-31.54, 37.65, 14.22, 2.25)
	pt3dadd(-35.51, 43.95, 12.87, 2.25)
	pt3dadd(-39.74, 49.14, 8.66, 2.25)
	pt3dadd(-43.66, 52.54, 7.07, 2.25)
	pt3dadd(-47.37, 58.4, 4.82, 2.25)
	pt3dadd(-49.75, 65.16, 3.13, 2.25)
	pt3dadd(-52.13, 73.72, 1.62, 2.25)
	pt3dadd(-55.33, 81.9, -0.89, 2.25)
	pt3dadd(-57.45, 91.81, -5.17, 2.25)
	pt3dadd(-59.3, 99.25, -8.25, 1.8)
	pt3dadd(-61.74, 105.05, -10.48, 1.8)
	pt3dadd(-63.85, 110.68, -12.04, 1.8)
	pt3dadd(-65.44, 115.41, -10.77, 1.8)
  }
  dend[25] {pt3dclear()
	pt3dadd(-65.44, 115.41, -10.77, 1.8)
	pt3dadd(-66.76, 120.31, -13.84, 1.8)
	pt3dadd(-66.49, 128.87, -16.05, 1.8)
	pt3dadd(-66.23, 137.2, -16.49, 1.8)
	pt3dadd(-66.23, 146.22, -19.85, 1.8)
  }
}
proc shape3d_3() {
  dend[25] {	pt3dadd(-66.95, 149.54, -23.42, 1.8)
	pt3dadd(-63.5, 159.91, -27.78, 1.8)
	pt3dadd(-61.65, 164.86, -29.44, 1.8)
	pt3dadd(-56.79, 169.97, -30.78, 1.8)
	pt3dadd(-52.28, 177.4, -33.55, 1.8)
	pt3dadd(-49.11, 181.91, -35.49, 1.8)
	pt3dadd(-46.72, 186.42, -39.14, 1.8)
	pt3dadd(-45.23, 193.6, -41.63, 1.8)
	pt3dadd(-39.93, 200.58, -44.18, 1.8)
	pt3dadd(-35.7, 207.11, -47.54, 1.8)
	pt3dadd(-32.84, 214.85, -51.87, 1.8)
	pt3dadd(-29.13, 221.38, -53.56, 1.8)
	pt3dadd(-26.22, 228.14, -61.7, 1.8)
	pt3dadd(-26.42, 236.98, -61.99, 1.8)
	pt3dadd(-28.01, 248.01, -62.54, 1.8)
	pt3dadd(-30.07, 253.62, -62.23, 1.8)
	pt3dadd(-30.34, 263.98, -66.25, 1.8)
	pt3dadd(-28.22, 269.62, -66.25, 1.8)
	pt3dadd(-20.8, 272.99, -64.83, 1.8)
	pt3dadd(-16.3, 275.92, -68.5, 1.8)
  }
  dend[26] {pt3dclear()
	pt3dadd(-65.44, 115.41, -10.77, 1.8)
	pt3dadd(-68.74, 117.67, -13.41, 1.8)
	pt3dadd(-72.98, 124.88, -15.71, 1.8)
	pt3dadd(-76.95, 132.09, -16.81, 1.8)
	pt3dadd(-83.04, 143.05, -18.37, 1.8)
	pt3dadd(-86.22, 148.91, -20.65, 1.8)
	pt3dadd(-89.66, 154.09, -21.08, 1.8)
	pt3dadd(-95.38, 160.95, -22.58, 1.8)
	pt3dadd(-100.67, 168.83, -24.3, 1.8)
	pt3dadd(-106.76, 175.37, -24.41, 1.8)
	pt3dadd(-111.78, 177.84, -24.41, 1.8)
	pt3dadd(-119.73, 189.11, -27.72, 1.8)
	pt3dadd(-125.29, 196.99, -30.9, 1.8)
	pt3dadd(-132.5, 205.3, -33.42, 1.8)
	pt3dadd(-139.65, 216.56, -37.23, 1.8)
	pt3dadd(-145.97, 226.28, -37.1, 1.8)
	pt3dadd(-153.39, 236.64, -38.96, 1.8)
	pt3dadd(-162.42, 244.02, -40.84, 1.8)
	pt3dadd(-169.83, 251.01, -43.14, 1.8)
	pt3dadd(-178.57, 257.99, -43.32, 1.8)
	pt3dadd(-188.41, 265.85, -48, 1.8)
	pt3dadd(-195.56, 271.48, -50.96, 1.8)
	pt3dadd(-201.12, 273.06, -53.38, 1.8)
	pt3dadd(-206.51, 273.22, -54.5, 1.8)
  }
  dend[27] {pt3dclear()
	pt3dadd(-28.54, 32.29, 18.18, 2.7)
	pt3dadd(-33.06, 36.35, 22.06, 2.7)
	pt3dadd(-37.3, 41.3, 24.78, 2.7)
	pt3dadd(-39.94, 46.71, 28.38, 2.7)
	pt3dadd(-41.53, 50.76, 31.17, 2.25)
	pt3dadd(-44.73, 55.35, 35.61, 2.25)
	pt3dadd(-49.23, 60.08, 39.34, 2.25)
	pt3dadd(-54.26, 67.51, 38.46, 2.25)
	pt3dadd(-56.65, 70.89, 43.2, 2.25)
	pt3dadd(-60.79, 75.52, 46.14, 2.25)
	pt3dadd(-63.44, 82.53, 51.32, 2.25)
	pt3dadd(-64.23, 88.84, 53.3, 2.25)
	pt3dadd(-68.19, 93.52, 57.76, 2.25)
  }
  dend[28] {pt3dclear()
	pt3dadd(-68.19, 93.52, 57.76, 2.25)
	pt3dadd(-71.1, 100.28, 58.7, 2.25)
	pt3dadd(-71.63, 104.78, 62.65, 2.25)
	pt3dadd(-72.43, 111.09, 65.64, 2.25)
	pt3dadd(-73.48, 114.39, 68.45, 2.25)
  }
  dend[29] {pt3dclear()
	pt3dadd(-73.48, 114.39, 68.45, 2.25)
	pt3dadd(-74.27, 122.5, 69.17, 1.8)
	pt3dadd(-74.27, 129.71, 70.58, 1.8)
	pt3dadd(-75.68, 138.12, 69.32, 1.8)
	pt3dadd(-75.15, 146.46, 73.89, 1.8)
	pt3dadd(-74.35, 154.34, 79.1, 1.8)
	pt3dadd(-75.41, 162.72, 79.97, 1.8)
	pt3dadd(-75.68, 171.29, 82.07, 1.8)
	pt3dadd(-74.62, 180.75, 85.5, 1.8)
	pt3dadd(-75.68, 188.25, 86.26, 1.8)
	pt3dadd(-77.26, 197.26, 87.39, 1.8)
	pt3dadd(-77.53, 207.62, 90.73, 1.8)
	pt3dadd(-78.88, 216.83, 93.77, 1.8)
	pt3dadd(-79.67, 223.58, 93.9, 1.8)
	pt3dadd(-80.73, 232.37, 94.95, 1.8)
	pt3dadd(-82.87, 240.5, 95.3, 1.8)
	pt3dadd(-82.34, 248.61, 97.08, 1.8)
	pt3dadd(-84.46, 251.31, 98.1, 1.8)
  }
  dend[30] {pt3dclear()
	pt3dadd(-73.48, 114.39, 68.45, 2.25)
	pt3dadd(-76.79, 119.5, 70.11, 1.8)
	pt3dadd(-78.91, 122.43, 73.58, 1.8)
	pt3dadd(-80.5, 130.76, 74.54, 1.8)
	pt3dadd(-81.3, 135.49, 77.88, 1.8)
	pt3dadd(-84.88, 139.42, 78.12, 1.8)
	pt3dadd(-85.41, 145.5, 80.27, 1.8)
	pt3dadd(-86.99, 154.06, 84.1, 1.8)
	pt3dadd(-88.81, 159.87, 84.54, 1.8)
	pt3dadd(-90.39, 168.21, 86.02, 1.8)
	pt3dadd(-92.51, 174.51, 89.9, 1.8)
	pt3dadd(-92.82, 178.42, 92.45, 1.8)
	pt3dadd(-94.41, 188.78, 95.72, 1.8)
	pt3dadd(-95.99, 192.61, 98.03, 1.8)
	pt3dadd(-97.05, 200.72, 99.22, 1.8)
	pt3dadd(-98.48, 208.92, 99.96, 1.8)
	pt3dadd(-101.12, 216.58, 104.33, 1.8)
	pt3dadd(-103.24, 223.57, 104.11, 1.8)
	pt3dadd(-107.45, 229.2, 109.05, 1.8)
	pt3dadd(-109.84, 234.38, 112.39, 1.8)
	pt3dadd(-113.54, 238.43, 114.54, 1.8)
  }
  dend[31] {pt3dclear()
	pt3dadd(-68.19, 93.52, 57.76, 2.25)
	pt3dadd(-74.57, 94.37, 57.76, 2.25)
	pt3dadd(-79.87, 98.42, 59.09, 2.25)
	pt3dadd(-83.31, 102.7, 60.98, 2.25)
	pt3dadd(-88.08, 110.14, 65.79, 2.25)
	pt3dadd(-92.27, 117.3, 66.82, 2.25)
	pt3dadd(-97.57, 126.76, 71.06, 2.25)
	pt3dadd(-99.42, 133.74, 75.22, 2.25)
	pt3dadd(-104.93, 140.72, 78.37, 2.25)
	pt3dadd(-108.9, 146.13, 80.18, 2.25)
	pt3dadd(-113.67, 154.47, 85.52, 1.8)
	pt3dadd(-118.52, 159.35, 87.58, 1.8)
	pt3dadd(-119.84, 163.85, 87.58, 1.8)
	pt3dadd(-126.99, 172.64, 88.58, 1.8)
	pt3dadd(-134.63, 179.15, 89.33, 1.8)
	pt3dadd(-140.46, 187.03, 93.07, 1.8)
	pt3dadd(-144.43, 195.37, 93.07, 1.8)
	pt3dadd(-147.79, 199.44, 93.07, 1.8)
	pt3dadd(-148.59, 201.25, 93.07, 1.8)
  }
  dend[32] {pt3dclear()
	pt3dadd(-148.59, 201.25, 93.07, 1.8)
	pt3dadd(-147.79, 213.41, 95.14, 1.8)
	pt3dadd(-146.21, 224.67, 95.64, 1.8)
	pt3dadd(-146.15, 231.8, 96.34, 1.8)
	pt3dadd(-146.15, 232.92, 99.1, 1.8)
  }
  dend[33] {pt3dclear()
	pt3dadd(-148.59, 201.25, 93.07, 1.8)
	pt3dadd(-152.32, 207.35, 95.04, 1.8)
	pt3dadd(-154.44, 211.85, 95.04, 1.8)
	pt3dadd(-156.03, 212.98, 95.04, 1.8)
	pt3dadd(-158.67, 219.51, 96, 1.8)
	pt3dadd(-164.11, 224.1, 96.9, 1.8)
	pt3dadd(-168.61, 228.83, 98.14, 1.8)
	pt3dadd(-172.06, 232.66, 99.18, 1.8)
	pt3dadd(-176.03, 235.36, 102.24, 1.8)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
}

proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() {
	
 
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(2, 4, 5, 9,10,11,13,14,17,20,21,22,25,26,29,30,31,32,33) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.6772,0.66038,0.68115,0.69444,  0.723,0.77302,0.76821,0.76431,0.81653,0.74205,0.75919,0.76977,0.72712,0.69814,0.76075,0.76088,0.84483,    0.5,    0.5) 
for i= 0 , 18 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // 
} 
 
 // //***** MC syn   
 
dend[0] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 19 
dend[1] syn = new Exp2Syn(0.13464) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 20 
dend[6] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 21 
dend[7] syn = new Exp2Syn(0.13242) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 22 
dend[12] syn = new Exp2Syn(0.1317) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 23 
dend[15] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 24 
dend[16] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 25 
dend[17] syn = new Exp2Syn(0.012079) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 26 
dend[18] syn = new Exp2Syn(0.052618) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 27 
dend[23] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 28 
dend[24] syn = new Exp2Syn(0.09421) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 29 
dend[27] syn = new Exp2Syn(0.10689) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 30 
 
 // //***** HIPP   
 
dend[2] syn = new Exp2Syn(0.6772) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 31 
dend[4] syn = new Exp2Syn(0.66038) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 32 
dend[5] syn = new Exp2Syn(0.68115) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 33 
dend[9] syn = new Exp2Syn(0.69444) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 34 
dend[10] syn = new Exp2Syn(0.723) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 35 
dend[11] syn = new Exp2Syn(0.77302) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 36 
dend[13] syn = new Exp2Syn(0.76821) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 37 
dend[14] syn = new Exp2Syn(0.76431) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 38 
dend[17] syn = new Exp2Syn(0.81653) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 39 
dend[20] syn = new Exp2Syn(0.74205) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 40 
dend[21] syn = new Exp2Syn(0.75919) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 41 
dend[22] syn = new Exp2Syn(0.76977) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 42 
dend[25] syn = new Exp2Syn(0.72712) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 43 
dend[26] syn = new Exp2Syn(0.69814) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 44 
dend[29] syn = new Exp2Syn(0.76075) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 45 
dend[30] syn = new Exp2Syn(0.76088) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 46 
dend[31] syn = new Exp2Syn(0.84483) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 47 
dend[32] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 48 
dend[33] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 49 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 50 
 
 // //***** Sprout   
 
dend[0] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 51 
dend[1] syn = new Exp2Syn(0.13464) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 52 
dend[6] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 53 
dend[7] syn = new Exp2Syn(0.13242) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 54 
dend[12] syn = new Exp2Syn(0.1317) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 55 
dend[15] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 56 
dend[16] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 57 
dend[17] syn = new Exp2Syn(0.012079) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 58 
dend[18] syn = new Exp2Syn(0.052618) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 59 
dend[23] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 60 
dend[24] syn = new Exp2Syn(0.09421) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 61 
dend[27] syn = new Exp2Syn(0.10689) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 62 

	  
}
	func is_art() { return 0 }

	endtemplate GranuleCell67
//************************************************************************************************************