/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell51
	
// Original name on neuroMorpho.org 428883.CNG.hoc

ndend1=30

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 29 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()
		dend[21] gcldend.append()


	pdend  = new SectionList()

		for i=8, 9  dend[i] pdend.append()
		dend[14] pdend.append()
		dend[22] pdend.append()
		dend[29] pdend.append()
		


	mdend  = new SectionList()
		dend[1] mdend.append()
		dend[10] mdend.append()
		dend[15] mdend.append()
		dend[18] mdend.append()
		for i=24, 25  dend[i] mdend.append()		  
		  
		  
	ddend  = new SectionList()
		
		for i=2, 7 dend[i] ddend.append()
		for i=11, 13 dend[i] ddend.append()
		for i=16, 17 dend[i] ddend.append()
		for i=19, 20 dend[i] ddend.append()
		dend[23] ddend.append()
		for i=26, 28 dend[i] ddend.append()		  
		  
		  
}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }


  connect dend(0), soma(1)
  for i = 1, 3 connect dend[i](0), dend[i-1](1)
  connect dend[4](0), dend[2](1)
  connect dend[5](0), dend[1](1)
  for i = 6, 7 connect dend[i](0), dend[5](1)
  connect dend[8](0), dend(1)
  for i = 9, 11 connect dend[i](0), dend[i-1](1)
  connect dend[12](0), dend[10](1)
  connect dend[13](0), dend[9](1)
  connect dend[14](0), dend[8](1)
  for i = 15, 16 connect dend[i](0), dend[i-1](1)
  connect dend[17](0), dend[15](1)
  connect dend[18](0), dend[14](1)
  for i = 19, 20 connect dend[i](0), dend[18](1)
  connect dend[21](0), soma(0)
  for i = 22, 23 connect dend[i](0), dend[i-1](1)
  connect dend[24](0), dend[22](1)
  for i = 25, 26 connect dend[i](0), dend[i-1](1)
  connect dend[27](0), dend[25](1)
  connect dend[28](0), dend[24](1)
  connect dend[29](0), dend[21](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 6.44272)
	pt3dadd(-2.93, 25.91, -6.87, 3.6)
  }
  dend {pt3dclear()
	pt3dadd(-2.93, 25.91, -6.87, 3.15)
	pt3dadd(-2.67, 24.81, -5.86, 3.15)
  }
  dend[1] {pt3dclear()
	pt3dadd(-2.67, 24.81, -5.86, 3.15)
	pt3dadd(-5.05, 29.76, -6.54, 2.25)
	pt3dadd(-9.02, 37.65, -9.16, 2.25)
	pt3dadd(-12.91, 42.1, -9.16, 2.25)
	pt3dadd(-16.68, 46.63, -12.38, 2.25)
	pt3dadd(-20.92, 50.69, -12.38, 2.25)
	pt3dadd(-24.36, 57.22, -12.38, 2.25)
	pt3dadd(-26.75, 63.53, -12.38, 2.25)
	pt3dadd(-30.64, 70.16, -12.38, 2.25)
	pt3dadd(-34.57, 74.45, -14.68, 1.8)
	pt3dadd(-41.46, 77.86, -14.68, 2.25)
	pt3dadd(-49.4, 87.32, -14.68, 2.25)
	pt3dadd(-53.64, 94.53, -14.68, 2.25)
	pt3dadd(-59.49, 104.76, -14.68, 2.25)
	pt3dadd(-63.99, 112.2, -14.68, 2.25)
	pt3dadd(-68.49, 119.4, -14.68, 2.25)
	pt3dadd(-71.38, 121.88, -13.58, 2.25)
	pt3dadd(-72.17, 123.45, -15.35, 2.25)
  }
  dend[2] {pt3dclear()
	pt3dadd(-72.17, 123.45, -15.35, 2.25)
	pt3dadd(-75.88, 131.56, -15.35, 1.8)
	pt3dadd(-79.59, 141.7, -13.36, 1.8)
	pt3dadd(-85.83, 151.33, -12.62, 1.8)
	pt3dadd(-91.13, 161.72, -12.62, 1.8)
	pt3dadd(-96.56, 169.51, -9.22, 1.8)
	pt3dadd(-101.33, 179.2, -7.29, 1.8)
	pt3dadd(-106.36, 189.11, -5.3, 1.8)
	pt3dadd(-110.97, 196.16, -6.2, 1.8)
	pt3dadd(-116.79, 204.29, -5.64, 1.8)
	pt3dadd(-122.62, 210.38, -3.96, 1.8)
	pt3dadd(-132.73, 221.44, -4.79, 1.8)
	pt3dadd(-140.94, 230.9, -4.79, 1.8)
	pt3dadd(-146.75, 238.71, -4.04, 1.8)
	pt3dadd(-148.61, 242.09, -2.87, 1.8)
	pt3dadd(-149.4, 243.44, 0.21, 1.8)
  }
  dend[3] {pt3dclear()
	pt3dadd(-149.4, 243.44, 0.21, 1.8)
	pt3dadd(-152.85, 251.78, 0.21, 1.8)
	pt3dadd(-159.22, 259.26, -0.01, 1.8)
	pt3dadd(-164.25, 269.4, -0.01, 1.8)
	pt3dadd(-168.22, 275.25, 2.12, 1.8)
	pt3dadd(-172.77, 281.93, 2.12, 1.8)
	pt3dadd(-173.1, 284.19, 3.4, 1.8)
	pt3dadd(-177.86, 289.37, 3.4, 1.8)
	pt3dadd(-179.72, 292.97, 6.19, 1.8)
	pt3dadd(-181.04, 296.8, 7.58, 1.8)
	pt3dadd(-183.18, 299.03, 7.38, 1.8)
	pt3dadd(-185.04, 304.43, 7.9, 1.8)
	pt3dadd(-184.51, 310.74, 9.98, 1.8)
  }
  dend[4] {pt3dclear()
	pt3dadd(-149.4, 243.44, 0.21, 1.8)
	pt3dadd(-159.53, 247.01, -1.58, 1.8)
	pt3dadd(-169.06, 252.64, -1.58, 1.8)
	pt3dadd(-175.94, 258.5, -1.58, 1.8)
	pt3dadd(-181.24, 259.15, -1.58, 1.8)
	pt3dadd(-188.65, 261.2, -1.58, 1.8)
	pt3dadd(-192.89, 263.23, -1.58, 1.8)
	pt3dadd(-197.65, 265.26, -1.37, 1.8)
	pt3dadd(-202.16, 267.96, 1.18, 1.8)
	pt3dadd(-205.44, 269.75, 0.46, 1.8)
	pt3dadd(-206.5, 270.43, -0.33, 1.8)
  }
  dend[5] {pt3dclear()
	pt3dadd(-72.17, 123.45, -15.35, 2.25)
	pt3dadd(-80.67, 135.12, -17.2, 1.8)
	pt3dadd(-83.85, 141.2, -18.74, 1.8)
	pt3dadd(-85.98, 145.05, -18.74, 1.8)
	pt3dadd(-87.57, 148.88, -18.74, 1.8)
	pt3dadd(-88.9, 151.14, -18.74, 1.8)
	pt3dadd(-91.28, 155.87, -20.06, 1.8)
	pt3dadd(-93.66, 160.15, -20.06, 1.8)
	pt3dadd(-96.31, 165.41, -20.38, 1.8)
	pt3dadd(-98.43, 173.52, -23.26, 1.8)
	pt3dadd(-103.73, 183.43, -23.26, 1.8)
	pt3dadd(-107.84, 191.31, -23.26, 1.8)
	pt3dadd(-112.07, 198.97, -23.26, 1.8)
	pt3dadd(-115.78, 205.28, -24.32, 1.8)
	pt3dadd(-124.75, 219.29, -26.69, 1.8)
	pt3dadd(-131.37, 231.23, -29.12, 1.8)
	pt3dadd(-139.14, 248.1, -29.12, 1.8)
	pt3dadd(-142.59, 255.75, -31.25, 1.8)
	pt3dadd(-143.99, 257.58, -29.85, 1.8)
  }
  dend[6] {pt3dclear()
	pt3dadd(-143.99, 257.58, -29.85, 1.8)
	pt3dadd(-144.25, 265.69, -31.34, 1.8)
	pt3dadd(-144.25, 278.3, -36.12, 1.8)
	pt3dadd(-143.14, 283.81, -36.12, 1.8)
	pt3dadd(-143.14, 290.56, -35.96, 1.8)
	pt3dadd(-145.52, 298, -38.66, 1.8)
	pt3dadd(-148.05, 310.16, -39.06, 1.8)
	pt3dadd(-147.25, 317.6, -41.8, 1.8)
	pt3dadd(-145.48, 321.43, -41.11, 1.8)
	pt3dadd(-140.97, 322.33, -39.81, 1.8)
  }
  dend[7] {pt3dclear()
	pt3dadd(-143.99, 257.58, -29.85, 1.8)
	pt3dadd(-146.98, 266.61, -31.43, 1.8)
	pt3dadd(-153.6, 279, -31.43, 1.8)
	pt3dadd(-159.49, 287.11, -32.7, 1.8)
	pt3dadd(-164.26, 295.22, -32.7, 1.8)
	pt3dadd(-167.7, 301.08, -32.09, 1.8)
	pt3dadd(-170.58, 307.11, -28.02, 1.8)
	pt3dadd(-171.64, 309.81, -28.02, 1.8)
	pt3dadd(-173.75, 312.74, -28.02, 1.8)
	pt3dadd(-174.28, 313.19, -28.02, 1.8)
  }
  dend[8] {pt3dclear()
	pt3dadd(-2.67, 24.81, -5.86, 3.15)
	pt3dadd(-5.44, 33.79, -9.67, 2.25)
	pt3dadd(-7.03, 40.1, -11.78, 2.25)
	pt3dadd(-9.15, 46.18, -14.42, 2.25)
	pt3dadd(-11.38, 53.18, -16.82, 2.25)
	pt3dadd(-11.12, 57.24, -17.93, 2.7)
	pt3dadd(-11.12, 59.27, -20.03, 2.7)
  }
  dend[9] {pt3dclear()
	pt3dadd(-11.12, 59.27, -20.03, 2.7)
	pt3dadd(-17.74, 68.73, -20.03, 2.25)
	pt3dadd(-23.36, 75.31, -20.03, 2.25)
	pt3dadd(-25.74, 80.49, -20.03, 2.25)
	pt3dadd(-27.33, 87.92, -20.03, 2.25)
	pt3dadd(-29.78, 96.53, -20.03, 2.25)
	pt3dadd(-33.49, 105.55, -19.96, 2.25)
	pt3dadd(-37.73, 114.56, -20.82, 2.25)
	pt3dadd(-43.16, 121.86, -20.82, 2.25)
	pt3dadd(-44.48, 124.79, -21.61, 2.25)
  }
  dend[10] {pt3dclear()
	pt3dadd(-44.48, 124.79, -21.61, 2.25)
	pt3dadd(-49.25, 138.3, -21.61, 2.25)
	pt3dadd(-50.59, 143.13, -23.18, 2.25)
	pt3dadd(-50.85, 144.48, -22.66, 2.25)
  }
  dend[11] {pt3dclear()
	pt3dadd(-50.85, 144.48, -22.66, 2.25)
	pt3dadd(-54.83, 153.49, -25.38, 1.8)
	pt3dadd(-59.59, 162.95, -29.4, 1.8)
	pt3dadd(-63.64, 171.81, -32.26, 1.8)
	pt3dadd(-67.34, 179.02, -35.37, 1.8)
	pt3dadd(-72.11, 185.33, -35.37, 1.8)
	pt3dadd(-76.5, 193.06, -37.94, 1.8)
	pt3dadd(-81, 202.97, -37.94, 1.8)
	pt3dadd(-84.18, 210.4, -39.82, 1.8)
	pt3dadd(-90.09, 221.66, -39.82, 1.8)
	pt3dadd(-93.53, 228.87, -42.88, 1.8)
	pt3dadd(-97.51, 234.18, -42.88, 1.8)
	pt3dadd(-103.6, 242.52, -42.47, 1.8)
	pt3dadd(-107.3, 248.37, -44.58, 1.8)
	pt3dadd(-111.7, 255.16, -45.68, 1.8)
	pt3dadd(-115.14, 264.39, -48.34, 1.8)
	pt3dadd(-119.91, 276.11, -48.34, 1.8)
	pt3dadd(-125.7, 284.19, -50.4, 1.8)
	pt3dadd(-129.14, 295, -52.08, 1.8)
	pt3dadd(-134.23, 304.04, -49.83, 1.8)
	pt3dadd(-140.59, 309.22, -51.21, 1.8)
	pt3dadd(-145.62, 313.05, -51.21, 1.8)
	pt3dadd(-149.64, 316.4, -45.43, 1.8)
	pt3dadd(-152.02, 316.4, -46.34, 1.8)
	pt3dadd(-154.4, 313.93, -46.34, 1.8)
  }
  dend[12] {pt3dclear()
	pt3dadd(-50.85, 144.48, -22.66, 2.25)
	pt3dadd(-51.13, 153.39, -22.66, 1.8)
	pt3dadd(-54.04, 165.78, -24.7, 1.8)
	pt3dadd(-56.85, 174.51, -26.22, 1.8)
	pt3dadd(-58.44, 181.27, -26.22, 1.8)
	pt3dadd(-59.77, 190.06, -27.14, 1.8)
	pt3dadd(-62.52, 200.11, -27.84, 1.8)
	pt3dadd(-66.49, 210.92, -29.62, 1.8)
	pt3dadd(-70.31, 219.56, -29.62, 1.8)
	pt3dadd(-74.54, 228.8, -29.62, 1.8)
	pt3dadd(-77.99, 237.13, -27.29, 1.8)
	pt3dadd(-79.06, 245.21, -27.29, 1.8)
	pt3dadd(-79.33, 256.47, -27.7, 1.8)
	pt3dadd(-82.18, 266.76, -24.89, 1.8)
	pt3dadd(-84.56, 276.67, -24.3, 1.8)
	pt3dadd(-86.45, 286.49, -22.57, 1.8)
	pt3dadd(-86.72, 294.17, -22.57, 1.8)
	pt3dadd(-90.43, 300.7, -22.57, 1.8)
	pt3dadd(-95.63, 310.49, -20.27, 1.8)
	pt3dadd(-98.81, 318.37, -20.27, 1.8)
	pt3dadd(-100.93, 323.1, -20.27, 1.8)
	pt3dadd(-105.04, 327.73, -20.27, 1.8)
	pt3dadd(-106.1, 332.01, -16.44, 1.8)
	pt3dadd(-109.54, 338.09, -16.44, 1.8)
	pt3dadd(-109.54, 338.99, -16.58, 1.8)
  }
  dend[13] {pt3dclear()
	pt3dadd(-44.48, 124.79, -21.61, 2.25)
	pt3dadd(-52.67, 136.99, -23.62, 1.8)
	pt3dadd(-60.09, 145.32, -23.62, 1.8)
	pt3dadd(-67.21, 150.61, -23.62, 1.8)
	pt3dadd(-73.57, 158.04, -27.23, 1.8)
	pt3dadd(-80.72, 166.38, -28.67, 1.8)
	pt3dadd(-87.75, 172.93, -28.67, 1.8)
	pt3dadd(-94.63, 181.27, -32.03, 1.8)
	pt3dadd(-98.34, 186.9, -32.03, 1.8)
	pt3dadd(-101.97, 193.31, -32.03, 1.8)
	pt3dadd(-106.47, 198.26, -32.03, 1.8)
	pt3dadd(-111.77, 202.54, -32.54, 1.8)
	pt3dadd(-118.92, 207.05, -32.54, 1.8)
	pt3dadd(-129.92, 216.69, -32.54, 1.8)
	pt3dadd(-137.6, 219.84, -30.51, 1.8)
	pt3dadd(-142.63, 227.5, -31.93, 1.8)
	pt3dadd(-148.75, 234.58, -31.93, 1.8)
	pt3dadd(-153.79, 243.37, -31.93, 1.8)
	pt3dadd(-158.02, 250.58, -33.05, 1.8)
	pt3dadd(-167.07, 258.03, -37.27, 1.8)
	pt3dadd(-175.28, 267.27, -37.27, 1.8)
	pt3dadd(-181.63, 272.68, -38.35, 1.8)
	pt3dadd(-188.28, 279.83, -38.35, 1.8)
	pt3dadd(-197.55, 287.04, -40.89, 1.8)
	pt3dadd(-202.58, 290.65, -43.75, 1.8)
	pt3dadd(-209.02, 289.95, -44.75, 1.8)
	pt3dadd(-214.05, 296.26, -48.97, 1.8)
  }
  dend[14] {pt3dclear()
	pt3dadd(-11.12, 59.27, -20.03, 2.7)
  }
}
proc shape3d_2() {
  dend[14] {	pt3dadd(-7.69, 67.49, -22.7, 2.25)
	pt3dadd(-6.63, 77.85, -23.68, 2.25)
	pt3dadd(-7.46, 86.36, -28.22, 2.25)
	pt3dadd(-8.25, 93.12, -30.76, 2.25)
	pt3dadd(-8.52, 96.27, -30.02, 2.25)
	pt3dadd(-8.66, 97.8, -30.02, 2.25)
  }
  dend[15] {pt3dclear()
	pt3dadd(-8.66, 97.8, -30.02, 2.25)
	pt3dadd(-4.96, 107.49, -32.89, 2.25)
	pt3dadd(-4.96, 120.55, -33.39, 2.25)
	pt3dadd(-5.06, 134.57, -38.25, 2.25)
	pt3dadd(-4.54, 142.45, -38.25, 2.25)
	pt3dadd(-4.07, 151.66, -41.17, 2.25)
	pt3dadd(-5.13, 161.57, -44.32, 2.25)
	pt3dadd(-5, 170.86, -44.32, 2.25)
	pt3dadd(-3.41, 179.2, -48.32, 2.25)
	pt3dadd(-3.15, 185.5, -49.6, 2.25)
	pt3dadd(-3, 193.23, -49.6, 2.25)
	pt3dadd(-3, 200.89, -53.18, 2.25)
	pt3dadd(-3.53, 207.65, -55.04, 2.25)
	pt3dadd(-2.87, 215.23, -54.77, 2.25)
	pt3dadd(-1.81, 223.12, -56.86, 2.25)
	pt3dadd(-1.28, 232.13, -56.86, 2.25)
	pt3dadd(-2.32, 236.28, -58.45, 2.25)
  }
  dend[16] {pt3dclear()
	pt3dadd(-2.32, 236.28, -58.45, 2.25)
	pt3dadd(-0.21, 244.84, -58.45, 1.8)
	pt3dadd(3.24, 254.3, -60.61, 1.8)
	pt3dadd(7.11, 262.96, -60.61, 1.8)
	pt3dadd(9.75, 272.87, -60.61, 1.8)
	pt3dadd(14.57, 282.76, -62.38, 1.8)
	pt3dadd(16.95, 288.62, -62.38, 1.8)
	pt3dadd(19.86, 300.33, -64.22, 1.8)
	pt3dadd(20.86, 309.89, -64.22, 1.8)
	pt3dadd(22.98, 318.9, -64.22, 1.8)
	pt3dadd(24.52, 329.61, -63.04, 1.8)
	pt3dadd(25.85, 339.52, -64.88, 1.8)
	pt3dadd(27.59, 348.86, -63.26, 1.8)
	pt3dadd(29.18, 353.14, -63.26, 1.8)
	pt3dadd(31.56, 359.22, -60.63, 1.8)
	pt3dadd(34.98, 363.73, -59.9, 1.8)
  }
  dend[17] {pt3dclear()
	pt3dadd(-2.32, 236.28, -58.45, 2.25)
	pt3dadd(-1.08, 245.19, -63.63, 1.8)
	pt3dadd(-0.81, 250.14, -66.86, 1.8)
	pt3dadd(0.25, 257.35, -69.42, 1.8)
	pt3dadd(1.38, 268.81, -72.32, 1.8)
	pt3dadd(3.76, 279.43, -76.86, 1.8)
	pt3dadd(5.59, 292.72, -78.92, 1.8)
	pt3dadd(7.44, 303.75, -84.85, 1.8)
	pt3dadd(8.99, 315.51, -86.66, 1.8)
	pt3dadd(12.17, 325.65, -86.66, 1.8)
	pt3dadd(14.78, 334.61, -89.66, 1.8)
	pt3dadd(16.11, 340.47, -89.66, 1.8)
	pt3dadd(18.49, 342.5, -89.66, 1.8)
	pt3dadd(19.81, 347.23, -94.2, 1.8)
  }
  dend[18] {pt3dclear()
	pt3dadd(-8.66, 97.8, -30.02, 2.25)
	pt3dadd(-11.78, 107.21, -34.56, 2.25)
	pt3dadd(-15.22, 115.32, -37.24, 1.8)
	pt3dadd(-20.5, 123.53, -39.98, 1.8)
	pt3dadd(-25.26, 132.77, -42.13, 1.8)
	pt3dadd(-29.23, 138.85, -45.29, 1.8)
	pt3dadd(-32.91, 146.63, -45.29, 1.8)
	pt3dadd(-37.14, 154.29, -45.4, 1.8)
	pt3dadd(-42.17, 163.08, -47.94, 1.8)
	pt3dadd(-48.09, 169.56, -49.81, 1.8)
	pt3dadd(-54.18, 176.77, -52.77, 1.8)
	pt3dadd(-59.74, 184.65, -52.77, 1.8)
	pt3dadd(-64.63, 192.26, -52.77, 1.8)
	pt3dadd(-71.52, 201.27, -55.04, 1.8)
	pt3dadd(-76.55, 208.93, -57.2, 1.8)
	pt3dadd(-82.23, 217.99, -60.05, 1.8)
	pt3dadd(-85.93, 223.84, -60.05, 1.8)
	pt3dadd(-90.96, 230.38, -62.53, 1.8)
	pt3dadd(-92.92, 232.65, -62.53, 1.8)
  }
  dend[19] {pt3dclear()
	pt3dadd(-92.92, 232.65, -62.53, 1.8)
	pt3dadd(-97.95, 240.76, -64.66, 1.8)
	pt3dadd(-100.33, 246.17, -64.66, 1.8)
	pt3dadd(-103.77, 252.48, -66.94, 1.8)
	pt3dadd(-107.31, 257.83, -67.07, 1.8)
	pt3dadd(-108.37, 259.86, -68.41, 1.8)
	pt3dadd(-110.48, 263.24, -68.05, 1.8)
  }
  dend[20] {pt3dclear()
	pt3dadd(-92.92, 232.65, -62.53, 1.8)
	pt3dadd(-94.32, 242.41, -59.44, 1.8)
	pt3dadd(-97.76, 253.22, -57.58, 1.8)
	pt3dadd(-103.36, 262.46, -55.12, 1.8)
	pt3dadd(-106.54, 268.32, -55.12, 1.8)
	pt3dadd(-108.39, 279.36, -55.12, 1.8)
	pt3dadd(-109.06, 289.76, -55.12, 1.8)
	pt3dadd(-112.5, 301.03, -55.73, 1.8)
	pt3dadd(-114.52, 310.71, -51.1, 1.8)
	pt3dadd(-114.78, 317.47, -53.47, 1.8)
	pt3dadd(-114.78, 321.75, -52.83, 1.8)
	pt3dadd(-114.34, 328.13, -48.18, 1.8)
	pt3dadd(-116.72, 336.02, -43.5, 1.8)
  }
  dend[21] {pt3dclear()
	pt3dadd(0, 0, 0, 3.15)
	pt3dadd(4.17, 27.63, -6.19, 3.15)
	pt3dadd(5.49, 32.14, -5.7, 2.7)
	pt3dadd(6.28, 34.62, -8.1, 2.25)
  }
  dend[22] {pt3dclear()
	pt3dadd(6.28, 34.62, -8.1, 2.25)
	pt3dadd(12.11, 46.33, -10.18, 2.25)
	pt3dadd(16.64, 65.32, -10.91, 2.25)
	pt3dadd(16.8, 75.79, -10.85, 2.25)
	pt3dadd(17.06, 83, -8.41, 2.25)
	pt3dadd(18.65, 92.01, -4.13, 2.25)
	pt3dadd(17.28, 96.53, -4.13, 2.25)
	pt3dadd(20.19, 106.44, -4.13, 2.25)
	pt3dadd(22.57, 113.88, -4.13, 2.25)
	pt3dadd(22.01, 112.47, -0.29, 2.25)
  }
  dend[23] {pt3dclear()
	pt3dadd(22.01, 112.47, -0.29, 2.25)
	pt3dadd(25.71, 125.99, 3.6, 2.25)
	pt3dadd(27.57, 134.32, 8.5, 2.25)
	pt3dadd(30.18, 139.58, 8.5, 2.25)
	pt3dadd(31.24, 150.39, 12.01, 2.25)
	pt3dadd(32.3, 158.05, 13.62, 2.25)
	pt3dadd(33.66, 165.63, 17.62, 2.25)
	pt3dadd(33.39, 168.81, 17.62, 2.25)
	pt3dadd(37.1, 180.75, 19.15, 2.25)
	pt3dadd(38.52, 192.29, 22.42, 2.25)
	pt3dadd(39.05, 198.37, 22.42, 2.25)
	pt3dadd(38.52, 205.35, 25.34, 2.25)
	pt3dadd(41.45, 216.86, 28.18, 1.8)
	pt3dadd(42.24, 221.59, 28.18, 1.8)
	pt3dadd(43.83, 225.2, 27.92, 1.8)
	pt3dadd(44, 232.18, 31.46, 1.8)
	pt3dadd(46.65, 238.72, 31.46, 1.8)
	pt3dadd(47.18, 244.8, 32.02, 1.8)
	pt3dadd(47.4, 253.16, 36.31, 1.8)
	pt3dadd(47.4, 259.02, 35.74, 1.8)
	pt3dadd(47.66, 264.2, 41.46, 1.8)
	pt3dadd(51.24, 271.43, 41.46, 1.8)
	pt3dadd(53.36, 277.74, 45.36, 1.8)
	pt3dadd(55.48, 283.82, 45.36, 1.8)
	pt3dadd(57.72, 289.46, 44.8, 1.8)
	pt3dadd(59.57, 295.54, 49.65, 1.8)
	pt3dadd(61.69, 300.72, 49.65, 1.8)
	pt3dadd(63.81, 305.23, 50.46, 1.8)
	pt3dadd(63.47, 309.48, 50.46, 1.8)
	pt3dadd(66.65, 320.07, 54.02, 1.8)
	pt3dadd(67.97, 325.7, 54.02, 1.8)
	pt3dadd(68.46, 334.39, 57.98, 1.8)
	pt3dadd(68.73, 339.79, 57.98, 1.8)
	pt3dadd(70.85, 348.58, 57.71, 1.8)
	pt3dadd(71, 358.49, 62.82, 1.8)
	pt3dadd(71.79, 362.99, 62.82, 1.8)
	pt3dadd(72.59, 369.75, 62.5, 1.8)
	pt3dadd(72.74, 375.43, 61.39, 1.8)
	pt3dadd(71.15, 377.23, 61.09, 1.8)
	pt3dadd(68.5, 377.68, 60.35, 1.8)
  }
  dend[24] {pt3dclear()
	pt3dadd(22.01, 112.47, -0.29, 2.25)
	pt3dadd(24.32, 125.42, -3.92, 2.25)
	pt3dadd(23.79, 133.3, -3.92, 2.25)
	pt3dadd(24.79, 144.01, -4.51, 2.25)
	pt3dadd(26.91, 151.22, -4.51, 2.25)
	pt3dadd(30.09, 162.94, -4.92, 2.25)
	pt3dadd(31.26, 172.74, -4.92, 2.25)
	pt3dadd(32.32, 182.65, -4.92, 2.25)
	pt3dadd(32.6, 188.06, -4.92, 2.25)
	pt3dadd(32.6, 190.53, -4.92, 2.25)
  }
  dend[25] {pt3dclear()
	pt3dadd(32.6, 190.53, -4.92, 2.25)
	pt3dadd(34.21, 202.05, -4.29, 1.8)
	pt3dadd(36.59, 212.19, -7.17, 1.8)
	pt3dadd(37.65, 224.35, -7.17, 1.8)
	pt3dadd(38.33, 234.11, -7.17, 1.8)
	pt3dadd(40.18, 242, -7.17, 1.8)
	pt3dadd(42.83, 248.08, -7.22, 1.8)
	pt3dadd(42.47, 254.73, -7.22, 1.8)
	pt3dadd(46.71, 265.32, -7.22, 1.8)
	pt3dadd(48.56, 269.15, -7.8, 1.8)
	pt3dadd(50.98, 273.23, -4.78, 1.8)
  }
  dend[26] {pt3dclear()
	pt3dadd(50.98, 273.23, -4.78, 1.8)
	pt3dadd(57.07, 279.09, -4.15, 1.8)
	pt3dadd(60.25, 281.56, -4.15, 1.8)
	pt3dadd(66.08, 289.22, -1.26, 1.8)
	pt3dadd(71.5, 293.71, -1.26, 1.8)
	pt3dadd(80.23, 302.94, -3.2, 1.8)
	pt3dadd(85, 310.6, -3.2, 1.8)
	pt3dadd(89.44, 318.96, -2.73, 1.8)
	pt3dadd(94.47, 326.39, -0.98, 1.8)
	pt3dadd(98.7, 333.38, 0.44, 1.8)
	pt3dadd(101.91, 338.16, 0.44, 1.8)
	pt3dadd(105.09, 341.08, 1.77, 1.8)
	pt3dadd(113.3, 346.27, 2.62, 1.8)
  }
  dend[27] {pt3dclear()
	pt3dadd(50.98, 273.23, -4.78, 1.8)
	pt3dadd(54.11, 282.69, -7.32, 1.8)
	pt3dadd(58.08, 290.35, -7.32, 1.8)
	pt3dadd(59.67, 297.33, -7.34, 1.8)
	pt3dadd(61.39, 305.51, -7.95, 1.8)
	pt3dadd(65.89, 311.82, -7.95, 1.8)
	pt3dadd(69.86, 322.4, -9.27, 1.8)
	pt3dadd(76.09, 335.72, -6.45, 1.8)
	pt3dadd(79, 340.45, -6.45, 1.8)
	pt3dadd(81.32, 346.73, -6.45, 1.8)
	pt3dadd(82.64, 352.36, -7.09, 1.8)
	pt3dadd(87.14, 361.15, -8.42, 1.8)
	pt3dadd(90.31, 369.79, -8.98, 1.8)
	pt3dadd(91.64, 373.39, -8.98, 1.8)
	pt3dadd(94.55, 378.8, -10.82, 1.8)
  }
  dend[28] {pt3dclear()
	pt3dadd(32.6, 190.53, -4.92, 2.25)
	pt3dadd(24.33, 206.07, -7.97, 1.8)
	pt3dadd(21.34, 209.88, -8.21, 1.8)
	pt3dadd(16.04, 219.11, -7.25, 1.8)
	pt3dadd(13.66, 224.29, -7.25, 1.8)
  }
}
proc shape3d_3() {
  dend[28] {	pt3dadd(11.54, 230.83, -7.25, 1.8)
	pt3dadd(8.36, 240.71, -7.25, 1.8)
	pt3dadd(5.45, 247.02, -7.25, 1.8)
	pt3dadd(2.8, 257.83, -7.25, 1.8)
	pt3dadd(-0.18, 267.46, -7.25, 1.8)
	pt3dadd(-3.09, 276.47, -7.25, 1.8)
	pt3dadd(-3.53, 288.09, -10.78, 1.8)
	pt3dadd(-3.79, 293.72, -8.7, 1.8)
	pt3dadd(-2.47, 296.65, -8.7, 1.8)
	pt3dadd(-2.2, 300.65, -8.7, 1.8)
	pt3dadd(-8.82, 306.06, -9.92, 1.8)
	pt3dadd(-11.47, 314.62, -13.59, 1.8)
	pt3dadd(-13.85, 319.58, -13.59, 1.8)
	pt3dadd(-15.19, 330.19, -12.2, 1.8)
	pt3dadd(-16.51, 336.72, -12.2, 1.8)
	pt3dadd(-16.51, 345.06, -12.2, 1.8)
	pt3dadd(-18.78, 351.28, -12.2, 1.8)
	pt3dadd(-15.61, 360.97, -11.82, 1.8)
	pt3dadd(-14.81, 364.12, -11.91, 1.8)
	pt3dadd(-14.66, 364.48, -11.8, 1.8)
  }
  dend[29] {pt3dclear()
	pt3dadd(6.28, 34.62, -8.1, 2.25)
	pt3dadd(2.69, 49.87, -8.41, 1.8)
	pt3dadd(-0.22, 58.88, -9.73, 1.8)
	pt3dadd(-3.38, 71.19, -9.73, 1.8)
	pt3dadd(-4.97, 79.75, -9.73, 1.8)
	pt3dadd(-9.9, 90.61, -9.73, 1.8)
	pt3dadd(-14.13, 98.72, -9.73, 1.8)
	pt3dadd(-21.41, 110.51, -11.89, 1.8)
	pt3dadd(-23.8, 119.07, -11.89, 1.8)
	pt3dadd(-26.71, 130.01, -9.94, 1.8)
	pt3dadd(-28.57, 137.22, -9.94, 1.8)
	pt3dadd(-35.19, 152.99, -7.94, 1.8)
	pt3dadd(-43.01, 165.42, -7.94, 1.8)
	pt3dadd(-50.16, 178.03, -7.94, 1.8)
	pt3dadd(-55.03, 189.46, -7.94, 1.8)
	pt3dadd(-59.8, 199.6, -9.3, 1.8)
	pt3dadd(-63.51, 206.13, -9.3, 1.8)
	pt3dadd(-64.57, 211.54, -9.3, 1.8)
	pt3dadd(-65.1, 218.75, -9.3, 1.8)
	pt3dadd(-67.71, 231.67, -9.3, 1.8)
	pt3dadd(-70.36, 240.68, -6.26, 1.8)
	pt3dadd(-76.16, 257.3, -4.9, 1.8)
	pt3dadd(-80.66, 266.53, -5.24, 1.8)
	pt3dadd(-88.34, 278.06, -1.9, 1.8)
	pt3dadd(-93.11, 287.98, -1.99, 1.8)
	pt3dadd(-99.88, 297.66, -1.99, 1.8)
	pt3dadd(-102.27, 304.19, 1.29, 1.8)
	pt3dadd(-108.36, 309.83, 1.29, 1.8)
	pt3dadd(-112.37, 312.95, 6.13, 1.8)
	pt3dadd(-112.11, 318.14, 5.21, 1.8)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
}

proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() { 
 // //***** PP syn   
 
 
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(2, 3, 4, 5, 6, 7,11,12,13,15,16,17,18,19,20,23,25,26,27,28,29) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.78342,    0.5,    0.5,0.76974,    0.5,    0.5,0.67338,0.67747,0.68949,0.94419,    0.5,    0.5,0.88954,    0.5,    0.5,0.69292,0.68674,    0.5,    0.5,0.58592,0.81654) 
for i= 0 , 20 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0  
pre_list.append(syn) // 
} 
 
 // //***** MC syn   
 
dend[0] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 21 
dend[1] syn = new Exp2Syn(0.1615) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 22 
dend[8] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 23 
dend[9] syn = new Exp2Syn(0.010826) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 24 
dend[14] syn = new Exp2Syn(0.019468) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 25 
dend[21] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 26 
dend[22] syn = new Exp2Syn(0.182) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 27 
dend[29] syn = new Exp2Syn(0.050618) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 28 
 
 // //***** HIPP   
 
dend[2] syn = new Exp2Syn(0.78342) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 29 
dend[3] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 30 
dend[4] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 31 
dend[5] syn = new Exp2Syn(0.76974) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 32 
dend[6] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 33 
dend[7] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 34 
dend[11] syn = new Exp2Syn(0.67338) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 35 
dend[12] syn = new Exp2Syn(0.67747) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 36 
dend[13] syn = new Exp2Syn(0.68949) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 37 
dend[15] syn = new Exp2Syn(0.94419) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 38 
dend[16] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 39 
dend[17] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 40 
dend[18] syn = new Exp2Syn(0.88954) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 41 
dend[19] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 42 
dend[20] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 43 
dend[23] syn = new Exp2Syn(0.69292) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 44 
dend[25] syn = new Exp2Syn(0.68674) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 45 
dend[26] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 46 
dend[27] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 47 
dend[28] syn = new Exp2Syn(0.58592) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 48 
dend[29] syn = new Exp2Syn(0.81654) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 49 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 50 
 
 // //***** Sprout   
 
dend[0] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 51 
dend[1] syn = new Exp2Syn(0.1615) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 52 
dend[8] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 53 
dend[9] syn = new Exp2Syn(0.010826) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 54 
dend[14] syn = new Exp2Syn(0.019468) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 55 
dend[21] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 56 
dend[22] syn = new Exp2Syn(0.182) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 57 
dend[29] syn = new Exp2Syn(0.050618) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 58 

}
	func is_art() { return 0 }

	endtemplate GranuleCell51 
//************************************************************************************************************