/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell48
	
// Original name on neuroMorpho.org 411884b.CNG.hoc

ndend1=32

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 31 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()
		dend[31] gcldend.append()


	pdend  = new SectionList()
		for i=1, 2  dend[i] pdend.append()
		dend[11] pdend.append()  
		for i=18, 19  dend[i] pdend.append()
		dend[23] pdend.append()
		


	mdend  = new SectionList()
		dend[3] mdend.append()
		dend[5] mdend.append()
		dend[8] mdend.append()
		for i=13, 15  dend[i] mdend.append()
		dend[20] mdend.append()
		dend[24] mdend.append()
		dend[28] mdend.append()
		
		
		

	ddend  = new SectionList()
		dend[4] ddend.append()
		for i=6, 7 dend[i] ddend.append()
		for i=9, 10 dend[i] ddend.append()
		dend[12] ddend.append()
		for i=16, 17 dend[i] ddend.append()
		for i=21, 22 dend[i] ddend.append()
		for i=25, 27 dend[i] ddend.append()
		for i=29, 31 dend[i] ddend.append()
}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }


  connect dend(0), soma(1)
  for i = 1, 4 connect dend[i](0), dend[i-1](1)
  connect dend[5](0), dend[3](1)
  for i = 6, 7 connect dend[i](0), dend[5](1)
  connect dend[8](0), dend[2](1)
  for i = 9, 10 connect dend[i](0), dend[8](1)
  connect dend[11](0), dend[1](1)
  for i = 12, 13 connect dend[i](0), dend[11](1)
  for i = 14, 15 connect dend[i](0), dend[13](1)
  for i = 16, 17 connect dend[i](0), dend[15](1)
  connect dend[18](0), dend(1)
  for i = 19, 21 connect dend[i](0), dend[i-1](1)
  connect dend[22](0), dend[20](1)
  connect dend[23](0), dend[19](1)
  for i = 24, 25 connect dend[i](0), dend[i-1](1)
  connect dend[26](0), dend[24](1)
  connect dend[27](0), dend[23](1)
  connect dend[28](0), dend[18](1)
  for i = 29, 30 connect dend[i](0), dend[28](1)
  connect dend[31](0), soma(0)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 8.9473)
	pt3dadd(2.01, 35.04, -2.29, 2.25)
  }
  dend {pt3dclear()
	pt3dadd(2.01, 35.04, -2.29, 2.25)
	pt3dadd(1.74, 36.17, -3.93, 2.25)
  }
  dend[1] {pt3dclear()
	pt3dadd(1.74, 36.17, -3.93, 2.25)
	pt3dadd(3.33, 40.23, -0.15, 2.7)
	pt3dadd(2.54, 51.69, 4.42, 2.7)
	pt3dadd(2.81, 56.87, 8.18, 2.7)
	pt3dadd(3.07, 62.5, 8.18, 2.7)
	pt3dadd(3.53, 71.16, 13.38, 2.7)
	pt3dadd(3.53, 77.02, 12.77, 2.7)
	pt3dadd(3.47, 75.47, 18.5, 2.25)
  }
  dend[2] {pt3dclear()
	pt3dadd(3.47, 75.47, 18.5, 2.25)
	pt3dadd(3.47, 82.67, 13.34, 2.25)
	pt3dadd(3.74, 87.4, 13.34, 2.25)
	pt3dadd(4.26, 91.68, 13.34, 2.25)
	pt3dadd(4.26, 94.61, 13.34, 2.25)
  }
  dend[3] {pt3dclear()
	pt3dadd(4.26, 94.61, 13.34, 2.25)
	pt3dadd(6.91, 101.15, 13.34, 2.25)
	pt3dadd(8.5, 110.83, 13.34, 2.25)
	pt3dadd(10.19, 118.91, 13.34, 2.25)
	pt3dadd(12.84, 128.37, 17.14, 2.25)
	pt3dadd(15.45, 135.06, 18.06, 2.25)
	pt3dadd(18.1, 144.52, 15.78, 2.25)
	pt3dadd(19.95, 153.08, 15.78, 2.25)
	pt3dadd(22.05, 166.07, 15.78, 2.25)
	pt3dadd(24.17, 175.3, 15.78, 2.25)
	pt3dadd(25.79, 182.13, 15.78, 2.25)
	pt3dadd(26.05, 184.16, 15.78, 2.25)
  }
  dend[4] {pt3dclear()
	pt3dadd(26.05, 184.16, 15.78, 2.25)
	pt3dadd(31.88, 190.47, 15.78, 2.25)
	pt3dadd(36.12, 197.45, 15.78, 2.25)
	pt3dadd(41.23, 206.41, 15.34, 2.25)
	pt3dadd(45.2, 211.14, 15.34, 2.25)
	pt3dadd(51.29, 219.93, 13.46, 2.25)
	pt3dadd(55.64, 226.78, 10.92, 2.25)
	pt3dadd(57.75, 229.71, 10.92, 1.8)
	pt3dadd(59.61, 232.42, 10.92, 1.8)
	pt3dadd(60.93, 236.92, 10.92, 1.8)
	pt3dadd(63.05, 238.5, 9.22, 1.8)
	pt3dadd(68.76, 241.35, 9.22, 1.8)
	pt3dadd(72.2, 245.41, 12.79, 1.8)
	pt3dadd(75.65, 250.59, 12.79, 1.8)
	pt3dadd(78.82, 254.19, 12.79, 1.8)
	pt3dadd(81.21, 258.25, 12.79, 1.8)
	pt3dadd(84.31, 264.31, 12.79, 1.8)
	pt3dadd(86.43, 268.14, 12.79, 1.8)
	pt3dadd(88.28, 271.29, 12.79, 1.8)
	pt3dadd(89.61, 273.77, 12.79, 1.8)
	pt3dadd(91.73, 278.5, 12.79, 1.8)
	pt3dadd(93.85, 280.23, 16.52, 1.8)
  }
  dend[5] {pt3dclear()
	pt3dadd(26.05, 184.16, 15.78, 2.25)
	pt3dadd(28.05, 194.59, 19.22, 1.8)
	pt3dadd(29.11, 203.82, 15.48, 1.8)
	pt3dadd(28.41, 207.83, 15.48, 1.8)
	pt3dadd(29.99, 215.26, 15.48, 1.8)
	pt3dadd(31.58, 221.8, 16.78, 1.8)
	pt3dadd(31.58, 231.48, 16.33, 1.8)
	pt3dadd(32.33, 231.63, 16.93, 1.8)
  }
  dend[6] {pt3dclear()
	pt3dadd(32.33, 231.63, 16.93, 1.8)
	pt3dadd(33.65, 236.81, 21.41, 1.8)
	pt3dadd(33.65, 242.21, 21.41, 1.8)
	pt3dadd(33.92, 250.55, 24.38, 1.8)
	pt3dadd(35.59, 260.34, 24.38, 1.8)
	pt3dadd(36.91, 266.19, 24.38, 1.8)
	pt3dadd(38.24, 274.75, 24.38, 1.8)
	pt3dadd(39.26, 280.18, 26.58, 1.8)
	pt3dadd(43.76, 286.04, 28.9, 1.8)
	pt3dadd(44.29, 292.57, 28.3, 1.8)
	pt3dadd(44.55, 298.43, 33.45, 1.8)
	pt3dadd(41.95, 302.93, 33.44, 1.8)
  }
  dend[7] {pt3dclear()
	pt3dadd(32.33, 231.63, 16.93, 1.8)
	pt3dadd(31.81, 239.06, 16.08, 1.8)
	pt3dadd(31.81, 245.14, 16.08, 1.8)
	pt3dadd(32.34, 248.52, 16.08, 1.8)
	pt3dadd(33.66, 255.05, 16.08, 1.8)
	pt3dadd(35.06, 261.06, 16.08, 1.8)
	pt3dadd(35.06, 271.64, 16.08, 1.8)
	pt3dadd(35.85, 279.3, 17.57, 1.8)
	pt3dadd(35.01, 289.34, 17.57, 1.8)
	pt3dadd(34.48, 296.55, 17.57, 1.8)
	pt3dadd(35.01, 306.91, 17.57, 1.8)
	pt3dadd(36.79, 318.26, 17.57, 1.8)
	pt3dadd(37.05, 321.64, 18.86, 1.8)
  }
  dend[8] {pt3dclear()
	pt3dadd(4.26, 94.61, 13.34, 2.25)
	pt3dadd(2.61, 104.64, 13.34, 2.25)
	pt3dadd(3.14, 108.92, 13.34, 2.25)
	pt3dadd(-0.3, 119.73, 16.22, 1.8)
	pt3dadd(-2.65, 122.58, 16.22, 1.8)
	pt3dadd(-5.57, 136.79, 13.78, 1.8)
	pt3dadd(-6.89, 147.16, 12.67, 1.8)
	pt3dadd(-7, 151.73, 13.75, 1.8)
	pt3dadd(-8.85, 161.19, 13.75, 1.8)
	pt3dadd(-10.44, 171.1, 12.3, 1.8)
	pt3dadd(-11.99, 179.56, 15.72, 1.8)
	pt3dadd(-11.99, 190.15, 15.72, 1.8)
	pt3dadd(-15.24, 200.39, 16.36, 1.8)
	pt3dadd(-17.89, 208.95, 17.06, 1.8)
	pt3dadd(-19.39, 218.49, 19.81, 1.8)
	pt3dadd(-22.57, 230.43, 19.34, 1.8)
	pt3dadd(-24.78, 238.74, 22.36, 1.8)
	pt3dadd(-26.9, 247.3, 22.36, 1.8)
	pt3dadd(-28.75, 252.48, 22.36, 1.8)
	pt3dadd(-30.06, 253.75, 22.36, 1.8)
  }
  dend[9] {pt3dclear()
	pt3dadd(-30.06, 253.75, 22.36, 1.8)
	pt3dadd(-29.79, 263.44, 21.98, 1.8)
	pt3dadd(-30.59, 271.1, 24.26, 1.8)
	pt3dadd(-28.81, 275.51, 23.27, 1.8)
	pt3dadd(-30.4, 285.42, 23.27, 1.8)
	pt3dadd(-31.46, 293.98, 24.81, 1.8)
	pt3dadd(-32.72, 298.23, 24.81, 1.8)
	pt3dadd(-32.99, 303.86, 27.06, 1.8)
	pt3dadd(-32.46, 307.02, 26.88, 1.8)
	pt3dadd(-30.08, 309.49, 31.21, 1.8)
	pt3dadd(-27.16, 309.94, 29.14, 1.8)
  }
  dend[10] {pt3dclear()
	pt3dadd(-30.06, 253.75, 22.36, 1.8)
	pt3dadd(-36.08, 266.09, 26.21, 1.8)
	pt3dadd(-39.26, 272.85, 26.21, 1.8)
	pt3dadd(-46.94, 280.23, 26.21, 1.8)
	pt3dadd(-50.65, 285.19, 26.28, 1.8)
	pt3dadd(-53.03, 289.47, 29.3, 1.8)
	pt3dadd(-56.21, 293.52, 29.3, 1.8)
	pt3dadd(-59.38, 300.78, 32.38, 1.8)
	pt3dadd(-63.61, 307.09, 33.1, 1.8)
	pt3dadd(-66.79, 312.05, 37.56, 1.8)
	pt3dadd(-70.84, 314.25, 37.56, 1.8)
	pt3dadd(-73.22, 315.38, 34.24, 1.8)
  }
  dend[11] {pt3dclear()
	pt3dadd(3.47, 75.47, 18.5, 2.25)
	pt3dadd(4.39, 80.71, 17.97, 1.8)
	pt3dadd(4.92, 86.11, 17.97, 1.8)
	pt3dadd(5.19, 92.42, 21.45, 2.25)
	pt3dadd(5.72, 100.31, 23.42, 2.25)
	pt3dadd(5.21, 106.51, 24.74, 2.25)
	pt3dadd(4.94, 109.66, 24.74, 2.25)
	pt3dadd(5.21, 112.36, 27.91, 2.25)
  }
  dend[12] {pt3dclear()
	pt3dadd(5.21, 112.36, 27.91, 2.25)
	pt3dadd(7.85, 116.42, 27.91, 1.8)
	pt3dadd(10.77, 120.7, 27.91, 1.8)
	pt3dadd(14.51, 125.33, 26.76, 1.8)
	pt3dadd(17.95, 129.61, 26.76, 1.8)
	pt3dadd(22.72, 135.24, 29.42, 1.8)
	pt3dadd(25.89, 139.97, 29.42, 1.8)
	pt3dadd(28.98, 142.28, 29.42, 1.8)
	pt3dadd(31.1, 147.46, 33.66, 1.8)
	pt3dadd(34.27, 152.87, 33.66, 1.8)
	pt3dadd(37.98, 159.85, 38.18, 1.8)
	pt3dadd(41.11, 165.71, 38.18, 1.8)
	pt3dadd(42.97, 171.56, 37.9, 1.8)
	pt3dadd(45.35, 178.32, 39.88, 1.8)
	pt3dadd(48.31, 183.16, 45.9, 1.8)
	pt3dadd(52.02, 188.79, 45.9, 1.8)
	pt3dadd(53.87, 192.84, 46.74, 1.8)
	pt3dadd(56.52, 199.15, 51.47, 1.8)
	pt3dadd(59.18, 204.86, 50.61, 1.8)
	pt3dadd(62.89, 210.26, 52.73, 1.8)
	pt3dadd(65.8, 215.22, 54.84, 1.8)
	pt3dadd(67.66, 222.43, 59.94, 1.8)
	pt3dadd(73.69, 227.78, 59.94, 1.8)
	pt3dadd(76.87, 235.89, 59.88, 1.8)
	pt3dadd(80.57, 242.42, 63.91, 1.8)
	pt3dadd(84.24, 246.23, 63.91, 1.8)
	pt3dadd(87.15, 254.11, 66.46, 1.8)
	pt3dadd(89.27, 256.82, 66.46, 1.8)
	pt3dadd(92.98, 263.12, 67.22, 1.8)
	pt3dadd(95.05, 265.23, 68.93, 1.8)
	pt3dadd(98.23, 266.8, 68.93, 1.8)
	pt3dadd(99.29, 270.63, 68.93, 1.8)
	pt3dadd(104.59, 279.42, 70.46, 1.8)
	pt3dadd(107.5, 284.6, 71.31, 1.8)
	pt3dadd(105.81, 292.23, 71.31, 1.8)
	pt3dadd(110.58, 303.5, 70.44, 1.8)
	pt3dadd(113.71, 307.23, 69.54, 1.8)
	pt3dadd(115.57, 309.03, 68.57, 1.8)
  }
  dend[13] {pt3dclear()
	pt3dadd(5.21, 112.36, 27.91, 2.25)
	pt3dadd(3.74, 117.38, 26.7, 1.8)
	pt3dadd(5.06, 116.48, 43.92, 1.8)
  }
  dend[14] {pt3dclear()
	pt3dadd(5.06, 116.48, 43.92, 1.8)
	pt3dadd(7.45, 119.63, 43.92, 1.8)
	pt3dadd(6.92, 131.12, 49.83, 1.8)
	pt3dadd(5.35, 135.08, 56.1, 1.8)
	pt3dadd(6.67, 144.09, 63.94, 1.8)
	pt3dadd(7.2, 149.72, 64.36, 1.8)
	pt3dadd(3.69, 162.02, 68.15, 1.8)
	pt3dadd(1.31, 167.42, 72.73, 1.8)
	pt3dadd(-2.13, 172.15, 73.82, 1.8)
	pt3dadd(-2.4, 180.74, 82.24, 1.8)
	pt3dadd(-2.93, 184.79, 87.27, 1.8)
  }
  dend[15] {pt3dclear()
	pt3dadd(5.06, 116.48, 43.92, 1.8)
	pt3dadd(4.21, 124.89, 26.72, 1.8)
	pt3dadd(4.21, 125.34, 29.16, 1.8)
  }
  dend[16] {pt3dclear()
	pt3dadd(4.21, 125.34, 29.16, 1.8)
	pt3dadd(4.21, 130.07, 30.82, 1.8)
	pt3dadd(4.74, 138.63, 34.5, 1.8)
	pt3dadd(4.47, 147.16, 36.79, 1.8)
	pt3dadd(4.21, 153.69, 39.59, 1.8)
	pt3dadd(4.47, 159.55, 42.42, 1.8)
	pt3dadd(3.54, 167.26, 42.42, 1.8)
	pt3dadd(3.54, 171.54, 43.33, 1.8)
	pt3dadd(1.95, 174.47, 47.6, 1.8)
	pt3dadd(1.95, 183.7, 48.58, 1.8)
  }
}
proc shape3d_2() {
  dend[16] {	pt3dadd(0.41, 188.96, 50.61, 1.8)
	pt3dadd(-0.65, 198.87, 52.4, 1.8)
	pt3dadd(-0.65, 206.08, 60.45, 1.8)
	pt3dadd(0.13, 212.76, 65.15, 1.8)
	pt3dadd(0.92, 217.94, 67.98, 1.8)
	pt3dadd(1.19, 222.9, 71.71, 1.8)
	pt3dadd(0.13, 227.4, 74.2, 1.8)
	pt3dadd(-0.39, 234.41, 81.09, 1.8)
	pt3dadd(0.93, 240.49, 79.82, 1.8)
	pt3dadd(0.66, 241.62, 78.53, 1.8)
  }
  dend[17] {pt3dclear()
	pt3dadd(4.21, 125.34, 29.16, 1.8)
	pt3dadd(2.61, 134.69, 29.16, 1.8)
	pt3dadd(0.23, 144.15, 27.13, 1.8)
	pt3dadd(-1.72, 152.76, 27.13, 1.8)
	pt3dadd(-3.78, 162.21, 27.13, 1.8)
	pt3dadd(-5.9, 170.55, 27.87, 1.8)
	pt3dadd(-6.17, 182.94, 28.77, 1.8)
	pt3dadd(-8.91, 189.31, 28.77, 1.8)
	pt3dadd(-11.03, 199.22, 27.19, 1.8)
	pt3dadd(-14.47, 210.03, 26.58, 1.8)
	pt3dadd(-16.78, 221.06, 28.58, 1.8)
	pt3dadd(-17.05, 233, 32.49, 1.8)
	pt3dadd(-21.04, 243.34, 34.26, 1.8)
	pt3dadd(-22.36, 249.64, 37.48, 1.8)
	pt3dadd(-26.07, 260.91, 36.29, 1.8)
	pt3dadd(-26.73, 270.04, 36.29, 1.8)
	pt3dadd(-30.44, 282.2, 37.95, 1.8)
	pt3dadd(-34.97, 297.52, 40.34, 1.8)
	pt3dadd(-39.73, 311.26, 40.34, 1.8)
	pt3dadd(-42.25, 315.25, 40.34, 1.8)
	pt3dadd(-40.92, 318.86, 42.42, 1.8)
  }
  dend[18] {pt3dclear()
	pt3dadd(1.74, 36.17, -3.93, 2.25)
	pt3dadd(1.8, 47.82, -11.08, 2.25)
	pt3dadd(-0.05, 58.85, -9.85, 2.25)
	pt3dadd(-1.12, 62.85, -9.85, 2.25)
	pt3dadd(-0.86, 67.36, -9, 1.8)
	pt3dadd(-4.04, 71.19, -6.41, 1.8)
	pt3dadd(-5.89, 76.6, -9.77, 2.25)
	pt3dadd(-7.21, 89.21, -9.53, 2.25)
	pt3dadd(-9.25, 98.04, -13.34, 2.25)
	pt3dadd(-9.52, 100.96, -13.94, 2.25)
  }
  dend[19] {pt3dclear()
	pt3dadd(-9.52, 100.96, -13.94, 2.25)
	pt3dadd(-9.25, 113.35, -14.58, 2.25)
	pt3dadd(-9.99, 116.98, -19.47, 2.25)
  }
  dend[20] {pt3dclear()
	pt3dadd(-9.99, 116.98, -19.47, 2.25)
	pt3dadd(-4.96, 125.99, -19.47, 2.25)
	pt3dadd(-1.52, 137.25, -21.58, 2.25)
	pt3dadd(1.58, 145.28, -24.64, 2.25)
	pt3dadd(4.49, 152.72, -23.66, 2.25)
	pt3dadd(7.14, 158.58, -29.36, 2.25)
	pt3dadd(11.37, 168.31, -30.96, 2.25)
	pt3dadd(13.49, 175.07, -35.2, 2.25)
	pt3dadd(15.87, 181.6, -34.5, 1.8)
	pt3dadd(18.98, 190.41, -36, 1.8)
	pt3dadd(20.04, 193.56, -36, 1.8)
  }
  dend[21] {pt3dclear()
	pt3dadd(20.04, 193.56, -36, 1.8)
	pt3dadd(23.21, 197.62, -37.79, 1.8)
	pt3dadd(27.45, 205.95, -42.15, 1.8)
	pt3dadd(31.9, 212.98, -41.99, 1.8)
	pt3dadd(33.75, 221.32, -46.38, 1.8)
	pt3dadd(36.14, 230.33, -49.53, 1.8)
	pt3dadd(40.64, 239.86, -52.33, 1.8)
	pt3dadd(43.28, 250.67, -52.33, 1.8)
	pt3dadd(47.64, 262.59, -56.31, 1.8)
	pt3dadd(50.81, 267.32, -56.31, 1.8)
	pt3dadd(52.93, 275.43, -60.92, 1.8)
	pt3dadd(52.74, 282.36, -61.74, 1.8)
	pt3dadd(56.18, 292.72, -61.92, 1.8)
	pt3dadd(57.77, 296.55, -61.9, 1.8)
  }
  dend[22] {pt3dclear()
	pt3dadd(20.04, 193.56, -36, 1.8)
	pt3dadd(21.32, 205.29, -36, 1.8)
	pt3dadd(22.91, 213.4, -37.26, 1.8)
	pt3dadd(25.65, 223.54, -37.26, 1.8)
	pt3dadd(26.71, 235.03, -39.59, 1.8)
	pt3dadd(27.26, 244.66, -40.65, 1.8)
	pt3dadd(27.79, 252.1, -40.65, 1.8)
	pt3dadd(29.91, 259.98, -40.93, 1.8)
	pt3dadd(31.59, 266.98, -37.65, 1.8)
	pt3dadd(30.26, 279.37, -38.82, 1.8)
	pt3dadd(31.79, 291.16, -38.82, 1.8)
	pt3dadd(33.38, 296.35, -38.46, 1.8)
	pt3dadd(32.85, 300.4, -38.46, 1.8)
	pt3dadd(32.54, 309.19, -34.23, 1.8)
	pt3dadd(32.01, 317.52, -33.92, 1.8)
	pt3dadd(39.15, 321.8, -35.33, 1.8)
	pt3dadd(40.19, 322.25, -38.34, 1.8)
  }
  dend[23] {pt3dclear()
	pt3dadd(-9.99, 116.98, -19.47, 2.25)
	pt3dadd(-12.98, 129.52, -21.79, 2.25)
	pt3dadd(-13.77, 135.15, -22.09, 2.25)
	pt3dadd(-14.39, 137.45, -25.18, 2.25)
  }
  dend[24] {pt3dclear()
	pt3dadd(-14.39, 137.45, -25.18, 2.25)
	pt3dadd(-12.81, 155.47, -28.37, 2.25)
	pt3dadd(-11.28, 164.16, -31.1, 2.25)
	pt3dadd(-11.01, 176.1, -33.65, 2.25)
	pt3dadd(-10.74, 182.31, -35.23, 2.25)
	pt3dadd(-10.74, 184.33, -35.29, 2.25)
  }
  dend[25] {pt3dclear()
	pt3dadd(-10.74, 184.33, -35.29, 2.25)
	pt3dadd(-8.88, 194.02, -36.45, 2.25)
	pt3dadd(-6.76, 202.36, -38.59, 2.25)
	pt3dadd(-3.89, 207.13, -38.59, 2.25)
	pt3dadd(-2.3, 215.02, -41.95, 2.25)
	pt3dadd(-0.18, 223.58, -43.19, 2.25)
	pt3dadd(0.79, 229.91, -43.18, 2.25)
	pt3dadd(0.53, 239.82, -47.25, 2.25)
	pt3dadd(0.26, 248.6, -48.18, 2.25)
	pt3dadd(1.46, 253.36, -48.18, 2.25)
	pt3dadd(0.4, 257.19, -48.18, 2.25)
	pt3dadd(1.46, 268.9, -50.47, 1.8)
	pt3dadd(4.58, 279.64, -51.3, 1.8)
	pt3dadd(5.64, 285.95, -51.3, 1.8)
	pt3dadd(6.17, 292.7, -47.82, 1.8)
	pt3dadd(5.61, 295.9, -47.82, 1.8)
	pt3dadd(6.93, 302.91, -47.82, 1.8)
	pt3dadd(6.14, 311.47, -47.38, 1.8)
	pt3dadd(4.55, 318.16, -44.21, 1.8)
	pt3dadd(4.02, 321.99, -45.33, 1.8)
  }
  dend[26] {pt3dclear()
	pt3dadd(-10.74, 184.33, -35.29, 2.25)
	pt3dadd(-15.3, 194.29, -37.47, 2.25)
	pt3dadd(-15.57, 203.75, -41.62, 2.25)
	pt3dadd(-14.87, 209.18, -45.78, 2.25)
	pt3dadd(-13.55, 213.69, -45.78, 2.25)
	pt3dadd(-15.4, 219.09, -51.15, 2.25)
	pt3dadd(-15.66, 224.72, -51.15, 2.25)
	pt3dadd(-17.25, 231.31, -51.96, 2.25)
	pt3dadd(-18.84, 244.15, -59.88, 2.25)
	pt3dadd(-20.39, 248.93, -68.58, 2.25)
	pt3dadd(-19.06, 253.89, -66.34, 2.25)
	pt3dadd(-21.18, 259.29, -68.62, 2.25)
	pt3dadd(-21.98, 265.6, -67.34, 2.25)
	pt3dadd(-25.51, 271.91, -71.1, 1.8)
	pt3dadd(-29.74, 278.22, -70.3, 1.8)
	pt3dadd(-31.6, 287.23, -78.24, 1.8)
	pt3dadd(-35.51, 292.63, -80.02, 1.8)
	pt3dadd(-40.01, 296.24, -80.06, 1.8)
	pt3dadd(-40.8, 297.14, -82.1, 1.8)
  }
  dend[27] {pt3dclear()
	pt3dadd(-14.39, 137.45, -25.18, 2.25)
	pt3dadd(-15.99, 148.14, -25.18, 2.25)
	pt3dadd(-19.17, 156.47, -25.18, 2.25)
	pt3dadd(-25.55, 166.29, -27.63, 2.25)
	pt3dadd(-29, 173.04, -27.63, 2.25)
	pt3dadd(-32.97, 178.68, -27.63, 2.25)
	pt3dadd(-41.74, 187.41, -27.63, 2.25)
	pt3dadd(-47.56, 196.42, -27.63, 2.25)
	pt3dadd(-51.8, 201.6, -27, 2.25)
	pt3dadd(-56.04, 206.53, -27, 2.25)
	pt3dadd(-59.48, 213.51, -27, 2.25)
	pt3dadd(-62.13, 222.3, -29.26, 2.25)
	pt3dadd(-66.77, 230.08, -30.54, 2.25)
	pt3dadd(-71, 237.07, -32.51, 2.25)
	pt3dadd(-74.45, 245.85, -36.29, 2.25)
	pt3dadd(-77.58, 253.66, -35.78, 2.25)
	pt3dadd(-80.23, 260.87, -39.5, 2.25)
	pt3dadd(-85.26, 268.3, -42.5, 2.25)
	pt3dadd(-89.5, 270.9, -42.5, 2.25)
	pt3dadd(-95.86, 275.18, -44.62, 2.25)
	pt3dadd(-98.77, 276.08, -47.54, 2.25)
	pt3dadd(-105.92, 274.51, -50.27, 2.25)
	pt3dadd(-108.83, 278.79, -52.58, 2.25)
  }
  dend[28] {pt3dclear()
	pt3dadd(-9.52, 100.96, -13.94, 2.25)
	pt3dadd(-11.25, 104.78, -13.94, 2.25)
	pt3dadd(-12.31, 114.24, -13.94, 2.25)
	pt3dadd(-14.96, 122.35, -13.94, 2.25)
	pt3dadd(-16.85, 128.91, -13.94, 2.25)
	pt3dadd(-18.97, 139.52, -15.87, 2.25)
	pt3dadd(-21.35, 150.33, -16.36, 2.25)
	pt3dadd(-24.58, 161.24, -18.69, 2.25)
	pt3dadd(-26.7, 172.73, -18.69, 2.25)
	pt3dadd(-26.86, 177.28, -19.02, 2.25)
	pt3dadd(-28.19, 182.01, -19.14, 2.25)
	pt3dadd(-28.45, 183.59, -19.14, 2.25)
  }
  dend[29] {pt3dclear()
	pt3dadd(-28.45, 183.59, -19.14, 2.25)
	pt3dadd(-32.43, 189.9, -19.14, 1.8)
	pt3dadd(-36.66, 200.03, -21.09, 1.8)
	pt3dadd(-40.11, 208.79, -20.06, 2.25)
	pt3dadd(-45.67, 216.67, -20.06, 2.25)
	pt3dadd(-49.64, 222.75, -20.86, 2.25)
	pt3dadd(-55.95, 230.43, -20.86, 2.25)
	pt3dadd(-60.99, 239.67, -19.46, 2.25)
	pt3dadd(-68.66, 249.81, -19.46, 2.25)
	pt3dadd(-75.81, 259.96, -19.82, 2.25)
	pt3dadd(-82.96, 272.13, -17.37, 2.25)
	pt3dadd(-86.77, 279.83, -17.37, 2.25)
	pt3dadd(-92.33, 289.3, -15.26, 2.25)
	pt3dadd(-96.04, 295.15, -15.26, 2.25)
	pt3dadd(-99.77, 300.36, -16.1, 2.25)
	pt3dadd(-100.83, 301.93, -16.1, 2.25)
	pt3dadd(-101.1, 305.76, -19.4, 2.25)
	pt3dadd(-103.21, 310.94, -18.47, 2.25)
  }
  dend[30] {pt3dclear()
	pt3dadd(-28.45, 183.59, -19.14, 2.25)
	pt3dadd(-28.99, 192.56, -20.84, 1.8)
	pt3dadd(-32.17, 202.25, -20.88, 1.8)
	pt3dadd(-34.65, 210.53, -21.84, 1.8)
	pt3dadd(-36.77, 217.52, -22.67, 1.8)
	pt3dadd(-37.03, 223.15, -23.87, 1.8)
	pt3dadd(-36.27, 229.93, -23.87, 1.8)
	pt3dadd(-37.33, 238.49, -23.87, 1.8)
	pt3dadd(-37.33, 241.87, -23.7, 1.8)
	pt3dadd(-37.14, 250.16, -23.7, 1.8)
	pt3dadd(-38.46, 255.79, -23.7, 1.8)
	pt3dadd(-38.46, 262.78, -24.4, 1.8)
  }
}
proc shape3d_3() {
  dend[30] {	pt3dadd(-38.46, 273.39, -24.4, 1.8)
	pt3dadd(-37.41, 278.34, -21.21, 1.8)
	pt3dadd(-38.46, 288.48, -20.34, 1.8)
	pt3dadd(-40.58, 294.51, -14.6, 1.8)
	pt3dadd(-42.44, 298.79, -15.03, 1.8)
	pt3dadd(-42.17, 303.97, -11.81, 1.8)
	pt3dadd(-41.38, 309.6, -7.57, 1.8)
	pt3dadd(-43.52, 315.93, -9.19, 1.8)
	pt3dadd(-44.84, 320.21, -9.19, 1.8)
  }
  dend[31] {pt3dclear()
	pt3dadd(0, 0, 0, 2.25)
	pt3dadd(4.92, 32.68, -7.49, 2.25)
	pt3dadd(6.77, 33.58, -12.74, 2.25)
	pt3dadd(9.68, 34.71, -12.77, 2.25)
	pt3dadd(12.07, 40.34, -19.2, 2.25)
	pt3dadd(14.45, 47.1, -21.68, 2.25)
	pt3dadd(13.39, 54.3, -23.21, 2.25)
	pt3dadd(11.75, 57.53, -21.48, 2.25)
	pt3dadd(10.95, 64.06, -24.33, 2.25)
	pt3dadd(10.69, 68.57, -24.52, 2.25)
	pt3dadd(10.42, 72.85, -27.03, 2.25)
	pt3dadd(10.34, 77.76, -27.03, 2.25)
	pt3dadd(12.98, 84.51, -27.03, 2.25)
	pt3dadd(13.25, 93.52, -30.32, 2.25)
	pt3dadd(14.52, 96.98, -30.32, 2.25)
	pt3dadd(16.11, 105.09, -33.48, 2.25)
	pt3dadd(20.61, 115.45, -36.08, 2.25)
	pt3dadd(23.45, 120.56, -36.76, 2.25)
	pt3dadd(27.95, 128.44, -36.82, 2.25)
	pt3dadd(31.92, 136.1, -40.31, 2.25)
	pt3dadd(37.03, 149.29, -41.3, 2.25)
	pt3dadd(39.68, 158.75, -43.83, 2.25)
	pt3dadd(42.98, 165.56, -46.45, 2.25)
	pt3dadd(45.36, 170.96, -46.45, 2.25)
	pt3dadd(49.07, 177.95, -49.36, 2.25)
	pt3dadd(53.5, 186.33, -49.36, 2.25)
	pt3dadd(56.15, 195.82, -52.45, 2.25)
	pt3dadd(59.86, 201.45, -52.45, 2.25)
	pt3dadd(62.65, 208.61, -52.45, 2.25)
	pt3dadd(68.21, 218.07, -55.18, 2.25)
	pt3dadd(71.39, 225.5, -55.34, 2.25)
	pt3dadd(73.98, 231.88, -58.78, 2.25)
	pt3dadd(77.43, 242.47, -61.36, 2.25)
	pt3dadd(80.34, 248.78, -61.36, 2.25)
	pt3dadd(85.1, 254.68, -61.36, 2.25)
	pt3dadd(89.34, 260.76, -62.98, 2.25)
	pt3dadd(90.13, 263.47, -62.98, 2.25)
	pt3dadd(93.84, 268.87, -62.98, 2.25)
	pt3dadd(98.24, 277.64, -62.98, 2.25)
	pt3dadd(104.59, 283.04, -62.98, 2.25)
	pt3dadd(109.89, 289.35, -60.19, 2.25)
	pt3dadd(112.38, 295.73, -60.19, 2.25)
	pt3dadd(117.41, 299.56, -60.19, 2.25)
	pt3dadd(122.45, 301.59, -60.19, 2.25)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()

}
proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() {
	  
	   
  
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(4,5,6,7,8,9,10,12,14,16,17,21,22,25,26,27,29,30,31) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.63598,0.83299,    0.5,    0.5,0.88053,    0.5,    0.5,0.72208,0.98797,0.73764,0.65631,0.59967,0.58308,0.63494, 0.6395,0.73654,0.64253,0.64752,0.83516) 
for i= 0 , 18 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // 
} 
 
 // //***** MC syn   
 
dend[0] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 19 
dend[1] syn = new Exp2Syn(0.30433) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 20 
dend[18] syn = new Exp2Syn(0.22212) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 21 
dend[31] syn = new Exp2Syn(0.097397) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 22 
 
 // //***** HIPP   
 
dend[4] syn = new Exp2Syn(0.63598) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 23 
dend[5] syn = new Exp2Syn(0.83299) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 24 
dend[6] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 25 
dend[7] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 26 
dend[8] syn = new Exp2Syn(0.88053) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 27 
dend[9] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 28 
dend[10] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 29 
dend[12] syn = new Exp2Syn(0.72208) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 30 
dend[14] syn = new Exp2Syn(0.98797) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 31 
dend[16] syn = new Exp2Syn(0.73764) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 32 
dend[17] syn = new Exp2Syn(0.65631) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 33 
dend[21] syn = new Exp2Syn(0.59967) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 34 
dend[22] syn = new Exp2Syn(0.58308) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 35 
dend[25] syn = new Exp2Syn(0.63494) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 36 
dend[26] syn = new Exp2Syn(0.6395) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 37 
dend[27] syn = new Exp2Syn(0.73654) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 38 
dend[29] syn = new Exp2Syn(0.64253) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 39 
dend[30] syn = new Exp2Syn(0.64752) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 40 
dend[31] syn = new Exp2Syn(0.83516) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 41 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 42 
 
 // //***** Sprout   
 
dend[0] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 43 
dend[1] syn = new Exp2Syn(0.30433) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 44 
dend[18] syn = new Exp2Syn(0.22212) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 45 
dend[31] syn = new Exp2Syn(0.097397) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 46 


	}
	func is_art() { return 0 }

	endtemplate GranuleCell48
//************************************************************************************************************