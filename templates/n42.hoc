/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell42

// Original name on neuroMorpho.org 124894.CNG.swc
ndend1=44



  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 43 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()
		dend[25] gcldend.append()


	pdend  = new SectionList()
		dend[1] pdend.append()
		for i=6, 7  dend[i] pdend.append()
		dend[9] pdend.append()
		dend[14] pdend.append()
		dend[26] pdend.append()
		dend[35] pdend.append()
		

	mdend  = new SectionList()
		for i=2, 5  dend[i] mdend.append()
		dend[8] mdend.append()		  
		dend[17] mdend.append()
		for i=10, 13  dend[i] mdend.append()
		for i=15, 18  dend[i] mdend.append()		  
		dend[24] mdend.append()	  
		for i=27, 34  dend[i] mdend.append()		    
		for i=36, 41  dend[i] mdend.append()
		dend[43] mdend.append()

	ddend  = new SectionList()
		
		for i=19, 23 dend[i] ddend.append()
		dend[42] ddend.append()
		
}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }
		 



  connect dend(0), soma(1)
  for i = 1, 3 connect dend[i](0), dend[i-1](1)
  connect dend[4](0), dend[2](1)
  connect dend[5](0), dend[1](1)
  connect dend[6](0), dend(1)
  for i = 7, 8 connect dend[i](0), dend[i-1](1)
  connect dend[9](0), dend[7](1)
  for i = 10, 11 connect dend[i](0), dend[i-1](1)
  connect dend[12](0), dend[10](1)
  connect dend[13](0), dend[9](1)
  connect dend[14](0), dend[6](1)
  for i = 15, 16 connect dend[i](0), dend[14](1)
  for i = 17, 19 connect dend[i](0), dend[i-1](1)
  connect dend[20](0), dend[18](1)
  connect dend[21](0), dend[17](1)
  for i = 22, 23 connect dend[i](0), dend[21](1)
  connect dend[24](0), dend[16](1)
  connect dend[25](0), soma(0)
  for i = 26, 28 connect dend[i](0), dend[i-1](1)
  connect dend[29](0), dend[27](1)
  connect dend[30](0), dend[26](1)
  for i = 31, 32 connect dend[i](0), dend[i-1](1)
  connect dend[33](0), dend[31](1)
  connect dend[34](0), dend[30](1)
  connect dend[35](0), dend[25](1)
  for i = 36, 38 connect dend[i](0), dend[i-1](1)
  connect dend[39](0), dend[37](1)
  connect dend[40](0), dend[36](1)
  connect dend[41](0), dend[35](1)
  for i = 42, 43 connect dend[i](0), dend[41](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 4.24838)
	pt3dadd(-4.83, 13.29, 0.13, 3.6)
  }
  dend {pt3dclear()
	pt3dadd(-4.83, 13.29, 0.13, 3.6)
	pt3dadd(-4.3, 14.19, 0.13, 3.6)
  }
  dend[1] {pt3dclear()
	pt3dadd(-4.3, 14.19, 0.13, 3.6)
	pt3dadd(-2.98, 17.8, -1.58, 1.8)
	pt3dadd(-1.65, 21.4, -1.58, 1.8)
	pt3dadd(-0.21, 23.38, -3.77, 1.8)
	pt3dadd(3.23, 25.63, -3.77, 1.8)
	pt3dadd(5.35, 27.88, -7.05, 1.8)
  }
  dend[2] {pt3dclear()
	pt3dadd(5.35, 27.88, -7.05, 1.8)
	pt3dadd(13.49, 30.81, -9.7, 1.8)
	pt3dadd(21.17, 34.19, -11.83, 1.8)
	pt3dadd(26.37, 36.65, -13.36, 1.8)
	pt3dadd(33.25, 39.58, -18.26, 1.8)
	pt3dadd(38.81, 42.51, -20.98, 1.8)
	pt3dadd(43.05, 45.66, -22.56, 1.8)
	pt3dadd(48.83, 49.88, -23.87, 1.8)
	pt3dadd(53.59, 55.06, -27.19, 1.8)
	pt3dadd(57.3, 60.69, -28.54, 1.8)
	pt3dadd(62.86, 69.7, -32.52, 1.8)
	pt3dadd(68.23, 78.39, -37.12, 1.8)
	pt3dadd(74.32, 87.85, -38.67, 1.8)
	pt3dadd(77.51, 95.71, -40.95, 1.8)
	pt3dadd(80.16, 103.14, -43.01, 1.8)
	pt3dadd(83.07, 109.23, -43.34, 1.8)
	pt3dadd(85.32, 116.66, -45.79, 1.8)
	pt3dadd(89.55, 123.64, -45.79, 1.8)
	pt3dadd(91.94, 129.72, -47.56, 1.8)
	pt3dadd(97.23, 137.93, -49.4, 1.8)
	pt3dadd(99.88, 141.76, -51.45, 1.8)
	pt3dadd(101.2, 144.02, -51.45, 1.8)
  }
  dend[3] {pt3dclear()
	pt3dadd(101.2, 144.02, -51.45, 1.8)
	pt3dadd(106.76, 150.55, -53.31, 1.8)
	pt3dadd(112.3, 157.63, -55.15, 1.8)
	pt3dadd(117.59, 165.97, -56.47, 1.8)
	pt3dadd(123.95, 173.4, -58.68, 1.8)
	pt3dadd(129.23, 179.23, -61.74, 1.8)
	pt3dadd(134.73, 184.64, -64.66, 1.8)
	pt3dadd(138.43, 188.24, -67.42, 1.8)
	pt3dadd(140.29, 192.3, -66.57, 1.8)
  }
  dend[4] {pt3dclear()
	pt3dadd(101.2, 144.02, -51.45, 1.8)
	pt3dadd(100.61, 147.76, -51.45, 1.8)
	pt3dadd(102.99, 153.19, -54.62, 1.8)
	pt3dadd(107.49, 158.14, -57.07, 1.8)
	pt3dadd(108.55, 159.27, -57.07, 1.8)
	pt3dadd(110.93, 164.9, -57.5, 1.8)
	pt3dadd(113.38, 171.53, -61.06, 1.8)
	pt3dadd(114.44, 174.91, -59.75, 1.8)
	pt3dadd(114.64, 177.39, -59.75, 1.8)
  }
  dend[5] {pt3dclear()
	pt3dadd(5.35, 27.88, -7.05, 1.8)
	pt3dadd(5.06, 33.48, -9.39, 1.8)
	pt3dadd(5.86, 39.11, -11.94, 1.8)
	pt3dadd(5.86, 42.04, -11.94, 1.8)
	pt3dadd(5.06, 46.09, -13.16, 1.8)
	pt3dadd(5.86, 56.46, -16.5, 1.8)
	pt3dadd(6.06, 63.13, -18.19, 1.8)
	pt3dadd(7.39, 74.17, -20.74, 1.8)
	pt3dadd(7.65, 81.83, -22.41, 1.8)
	pt3dadd(7.8, 89.91, -22.41, 1.8)
	pt3dadd(8.33, 100.72, -22.41, 1.8)
	pt3dadd(7.21, 110.76, -23.5, 1.8)
	pt3dadd(6.15, 119.77, -23.5, 1.8)
	pt3dadd(4.81, 127.03, -23.5, 1.8)
	pt3dadd(5.08, 133.79, -23.5, 1.8)
	pt3dadd(4.81, 143.48, -23.5, 1.8)
	pt3dadd(4.47, 152.16, -23.5, 1.8)
	pt3dadd(4.47, 157.79, -23.5, 1.8)
	pt3dadd(4.74, 165.23, -23.5, 1.8)
	pt3dadd(3.15, 172.63, -25.55, 1.8)
	pt3dadd(2.62, 175.11, -27.37, 1.8)
	pt3dadd(3.15, 178.72, -27.37, 1.8)
	pt3dadd(1.82, 182.55, -30.31, 1.8)
	pt3dadd(-0.03, 187.28, -32.26, 1.8)
	pt3dadd(-1.45, 188.55, -30.9, 1.8)
	pt3dadd(-3.84, 191.03, -36.22, 1.8)
  }
  dend[6] {pt3dclear()
	pt3dadd(-4.3, 14.19, 0.13, 3.6)
	pt3dadd(-9.23, 17.31, -1.06, 2.7)
	pt3dadd(-13.47, 20.91, -1.96, 2.25)
	pt3dadd(-15.85, 23.61, -1.96, 1.8)
	pt3dadd(-17.97, 26.32, -1.46, 2.25)
  }
  dend[7] {pt3dclear()
	pt3dadd(-17.97, 26.32, -1.46, 2.25)
	pt3dadd(-17.17, 31.72, 1.21, 1.8)
	pt3dadd(-18.6, 35.65, 4.98, 1.8)
	pt3dadd(-19.13, 39.96, 7.95, 1.8)
	pt3dadd(-20.19, 42.44, 10.96, 1.8)
	pt3dadd(-22.31, 44.92, 12.01, 1.8)
	pt3dadd(-24.43, 51.45, 15.54, 1.8)
	pt3dadd(-25.46, 55.91, 15.02, 1.8)
	pt3dadd(-26.78, 58.41, 14.86, 1.8)
	pt3dadd(-28.64, 60.21, 15.44, 1.8)
	pt3dadd(-28.9, 66.07, 14.87, 1.8)
	pt3dadd(-31.02, 70.35, 14.87, 1.8)
	pt3dadd(-32.85, 75.86, 15, 1.8)
	pt3dadd(-34.44, 82.84, 16.43, 1.8)
	pt3dadd(-35.5, 91.4, 15.05, 1.8)
	pt3dadd(-38.11, 100.64, 15.05, 1.8)
	pt3dadd(-37, 102.2, 18.21, 1.8)
  }
  dend[8] {pt3dclear()
	pt3dadd(-37, 102.2, 18.21, 1.8)
	pt3dadd(-36.21, 106.03, 18.48, 1.8)
	pt3dadd(-37.53, 112.56, 18.48, 1.8)
	pt3dadd(-36.21, 116.62, 23.58, 1.8)
	pt3dadd(-33.03, 131.03, 23.58, 1.8)
	pt3dadd(-32.67, 137.63, 26.17, 1.8)
	pt3dadd(-30.82, 148.22, 27.96, 1.8)
	pt3dadd(-28.43, 155.88, 29.05, 1.8)
	pt3dadd(-25.02, 162.73, 29.05, 1.8)
	pt3dadd(-24.23, 172.42, 29.05, 1.8)
	pt3dadd(-21.85, 176.02, 29.05, 1.8)
	pt3dadd(-20.81, 183.43, 32.97, 1.8)
	pt3dadd(-20.81, 190.19, 35.62, 1.8)
	pt3dadd(-21.6, 196.05, 40.05, 1.8)
	pt3dadd(-26.17, 200.03, 40.05, 1.8)
	pt3dadd(-28.28, 202.73, 41.87, 1.8)
	pt3dadd(-28.55, 205.44, 41.87, 1.8)
  }
  dend[9] {pt3dclear()
	pt3dadd(-37, 102.2, 18.21, 1.8)
	pt3dadd(-38.06, 106.43, 15.21, 1.8)
	pt3dadd(-38.59, 109.13, 12.74, 1.8)
	pt3dadd(-38.85, 112.06, 12.47, 1.8)
	pt3dadd(-38.85, 112.06, 25.34, 1.8)
  }
  dend[10] {pt3dclear()
	pt3dadd(-38.85, 112.06, 25.34, 1.8)
	pt3dadd(-41.24, 119.72, 24.59, 1.8)
	pt3dadd(-42.83, 124.45, 29.81, 1.8)
	pt3dadd(-46.24, 129.13, 31.85, 1.8)
	pt3dadd(-47.83, 131.83, 34.86, 1.8)
	pt3dadd(-51.01, 137.69, 35.54, 1.8)
	pt3dadd(-52.6, 140.17, 35.54, 1.8)
	pt3dadd(-55.77, 145.8, 43.34, 1.8)
	pt3dadd(-59.04, 153.23, 46.49, 1.8)
	pt3dadd(-60.9, 160.67, 50.17, 1.8)
	pt3dadd(-60.63, 167.43, 55.78, 1.8)
	pt3dadd(-62.05, 170.8, 55.78, 1.8)
	pt3dadd(-66.29, 174.86, 59.54, 1.8)
	pt3dadd(-72.12, 177.79, 59.54, 1.8)
	pt3dadd(-73.43, 178.45, 60.18, 1.8)
  }
  dend[11] {pt3dclear()
	pt3dadd(-73.43, 178.45, 60.18, 1.8)
	pt3dadd(-75.28, 184.08, 73.16, 1.8)
	pt3dadd(-76.87, 186.33, 73.16, 1.8)
	pt3dadd(-79.78, 189.03, 73.73, 1.8)
	pt3dadd(-82.43, 190.84, 77.29, 1.8)
	pt3dadd(-84.81, 195.34, 79.71, 1.8)
	pt3dadd(-86.93, 197.84, 83.66, 1.8)
	pt3dadd(-87.2, 200.55, 84.66, 1.8)
  }
  dend[12] {pt3dclear()
	pt3dadd(-73.43, 178.45, 60.18, 1.8)
	pt3dadd(-80.02, 182.93, 60.18, 1.8)
	pt3dadd(-84.52, 186.79, 60.18, 1.8)
	pt3dadd(-88.49, 190.84, 60.18, 1.8)
	pt3dadd(-91.67, 195.12, 60.18, 1.8)
	pt3dadd(-96.97, 198.72, 58.19, 1.8)
	pt3dadd(-99.65, 200.4, 58.19, 1.8)
	pt3dadd(-102.3, 203.78, 58.19, 1.8)
	pt3dadd(-103.88, 206.03, 57.29, 1.8)
  }
  dend[13] {pt3dclear()
	pt3dadd(-38.85, 112.06, 25.34, 1.8)
	pt3dadd(-38.6, 118.33, 11.97, 1.8)
	pt3dadd(-37.81, 124.64, 14.63, 1.8)
	pt3dadd(-37.81, 131.17, 14.63, 1.8)
	pt3dadd(-40.25, 137.11, 12.78, 1.8)
	pt3dadd(-41.31, 142.74, 14.02, 1.8)
	pt3dadd(-41.57, 154, 14.02, 1.8)
	pt3dadd(-45.11, 163.89, 14.02, 1.8)
	pt3dadd(-46.43, 169.52, 14.02, 1.8)
	pt3dadd(-49.61, 175.83, 15.66, 1.8)
	pt3dadd(-52.84, 182.08, 15.66, 1.8)
	pt3dadd(-53.9, 186.59, 15.66, 1.8)
	pt3dadd(-55.23, 187.71, 13.48, 1.8)
	pt3dadd(-60.26, 193.35, 13.48, 1.8)
	pt3dadd(-63.17, 197.63, 9.9, 1.8)
	pt3dadd(-65.2, 198.55, 11.38, 1.8)
	pt3dadd(-65.73, 198.32, 11.38, 1.8)
	pt3dadd(-66.52, 198.77, 11.38, 1.8)
	pt3dadd(-67.32, 199.23, 11.38, 1.8)
	pt3dadd(-67.85, 200.58, 11.38, 1.8)
	pt3dadd(-68.38, 201.25, 11.38, 1.8)
	pt3dadd(-68.38, 201.93, 11.38, 1.8)
	pt3dadd(-68.38, 202.38, 11.38, 1.8)
	pt3dadd(-68.64, 202.6, 11.38, 1.8)
	pt3dadd(-68.64, 203.05, 11.38, 1.8)
	pt3dadd(-70.32, 204.61, 8.68, 1.35)
	pt3dadd(-70.05, 205.06, 8.11, 1.35)
  }
  dend[14] {pt3dclear()
	pt3dadd(-17.97, 26.32, -1.46, 2.25)
	pt3dadd(-22.17, 30.15, -3.42, 1.8)
	pt3dadd(-29.32, 35.11, -3.42, 1.8)
	pt3dadd(-35.94, 38.49, -3.42, 1.8)
	pt3dadd(-43.61, 42.32, -3.42, 1.8)
	pt3dadd(-51.08, 44.45, -3.52, 1.8)
	pt3dadd(-57.7, 48.28, -0.84, 1.8)
	pt3dadd(-59.82, 49.63, -1.5, 1.8)
	pt3dadd(-60.61, 50.08, -1.5, 1.8)
  }
  dend[15] {pt3dclear()
	pt3dadd(-60.61, 50.08, -1.5, 1.8)
	pt3dadd(-63.52, 60.67, -1.5, 1.8)
	pt3dadd(-64.26, 69.41, -1.5, 1.8)
	pt3dadd(-63.2, 75.04, -1.5, 1.8)
	pt3dadd(-64.52, 82.93, -1.5, 1.8)
	pt3dadd(-64.66, 92.71, 0.98, 1.8)
	pt3dadd(-64.93, 103.07, 0.98, 1.8)
	pt3dadd(-66.32, 113.84, 0.18, 1.8)
	pt3dadd(-66.32, 120.15, 0.18, 1.8)
	pt3dadd(-68.44, 126.23, 0.18, 1.8)
	pt3dadd(-73.83, 136.56, 0.18, 1.8)
	pt3dadd(-77, 144.45, 2.53, 1.8)
  }
}
proc shape3d_2() {
  dend[15] {	pt3dadd(-81.77, 150.26, 2.53, 1.8)
	pt3dadd(-86, 160.39, 5.01, 1.8)
	pt3dadd(-90.77, 166.93, 5.01, 1.8)
	pt3dadd(-96.95, 170.83, 5.01, 1.8)
	pt3dadd(-101.46, 174.88, 7.78, 1.8)
	pt3dadd(-104.63, 182.32, 10.58, 1.8)
	pt3dadd(-108.34, 188.18, 12.78, 1.8)
	pt3dadd(-114.35, 195.21, 15.66, 1.8)
	pt3dadd(-120.71, 201.52, 16.58, 1.8)
	pt3dadd(-127.86, 205.57, 22.36, 1.8)
  }
  dend[16] {pt3dclear()
	pt3dadd(-60.61, 50.08, -1.5, 1.8)
	pt3dadd(-62.72, 48.43, -1.34, 1.8)
	pt3dadd(-67.75, 49.78, -1.34, 1.8)
	pt3dadd(-72.78, 52.48, -3.47, 1.8)
	pt3dadd(-80.72, 55.18, -3.47, 1.8)
	pt3dadd(-89.46, 57.44, -3.47, 1.8)
	pt3dadd(-93.5, 59, -3.47, 1.8)
	pt3dadd(-100.92, 64.86, -3.47, 1.8)
	pt3dadd(-106.21, 69.82, -6.07, 1.8)
	pt3dadd(-110.45, 72.07, -8.84, 1.8)
	pt3dadd(-118.14, 75.15, -8.84, 1.8)
	pt3dadd(-124.5, 78.76, -8.84, 1.8)
	pt3dadd(-131.91, 83.71, -8.84, 1.8)
	pt3dadd(-137.89, 84.5, -10.1, 1.8)
	pt3dadd(-142.39, 87.2, -12.26, 1.8)
	pt3dadd(-146.36, 89.23, -12.26, 1.8)
	pt3dadd(-150.34, 91.71, -14.14, 1.8)
	pt3dadd(-151.39, 92.61, -14.14, 1.8)
  }
  dend[17] {pt3dclear()
	pt3dadd(-151.39, 92.61, -14.14, 1.8)
	pt3dadd(-155.37, 100.27, -14.14, 1.8)
	pt3dadd(-160.5, 106.76, -16.34, 1.8)
	pt3dadd(-166.06, 113.29, -16.34, 1.8)
	pt3dadd(-170.08, 115.07, -17.79, 1.8)
	pt3dadd(-174.32, 121.38, -17.79, 1.8)
	pt3dadd(-177.23, 127.01, -19.42, 1.8)
	pt3dadd(-180.94, 131.51, -20.14, 1.8)
	pt3dadd(-184.65, 137.6, -20.74, 1.8)
	pt3dadd(-187.29, 143.45, -23.87, 1.8)
	pt3dadd(-189.38, 146.08, -25.9, 1.8)
  }
  dend[18] {pt3dclear()
	pt3dadd(-189.38, 146.08, -25.9, 1.8)
	pt3dadd(-189.38, 151.48, -28.88, 1.8)
	pt3dadd(-189.38, 155.54, -32.89, 1.8)
	pt3dadd(-189.38, 159.59, -36, 1.8)
	pt3dadd(-188.85, 163.65, -36.41, 1.8)
  }
  dend[19] {pt3dclear()
	pt3dadd(-188.85, 163.65, -36.41, 1.8)
	pt3dadd(-187.28, 167.65, -39.28, 1.8)
	pt3dadd(-187.28, 169.46, -39.28, 1.8)
	pt3dadd(-184.36, 173.51, -40.81, 1.8)
	pt3dadd(-183.3, 180.27, -44.64, 1.8)
	pt3dadd(-184.1, 183.45, -48.09, 1.8)
	pt3dadd(-183.54, 185.2, -48.09, 1.8)
  }
  dend[20] {pt3dclear()
	pt3dadd(-188.85, 163.65, -36.41, 1.8)
	pt3dadd(-189.39, 165.4, -38.6, 1.8)
	pt3dadd(-188.86, 170.81, -38.6, 1.8)
	pt3dadd(-188.6, 177.79, -41.4, 1.8)
	pt3dadd(-188.86, 180.5, -41.4, 1.8)
	pt3dadd(-189.66, 183.2, -39.59, 1.8)
  }
  dend[21] {pt3dclear()
	pt3dadd(-189.38, 146.08, -25.9, 1.8)
	pt3dadd(-197.34, 151.16, -25.9, 1.8)
	pt3dadd(-204.49, 154.31, -25.9, 1.8)
	pt3dadd(-209.26, 156.56, -25.9, 1.8)
	pt3dadd(-218.53, 157.91, -25.9, 1.8)
	pt3dadd(-225.88, 157.55, -25.9, 1.8)
	pt3dadd(-234.88, 158.45, -23.02, 1.8)
	pt3dadd(-242.83, 159.13, -22.77, 1.8)
	pt3dadd(-251.34, 159, -19.88, 1.8)
	pt3dadd(-253.19, 158.55, -19.8, 1.8)
	pt3dadd(-255.57, 158.32, -19.8, 1.8)
  }
  dend[22] {pt3dclear()
	pt3dadd(-255.57, 158.32, -19.8, 1.8)
	pt3dadd(-259.81, 154.95, -19.23, 1.8)
	pt3dadd(-262.72, 151.79, -13.63, 1.8)
	pt3dadd(-271.73, 147.96, -11.38, 1.8)
	pt3dadd(-281.13, 143.27, -7.43, 1.8)
  }
  dend[23] {pt3dclear()
	pt3dadd(-255.57, 158.32, -19.8, 1.8)
	pt3dadd(-260.96, 161.8, -20.94, 1.8)
	pt3dadd(-264.93, 164.06, -19.42, 1.8)
  }
  dend[24] {pt3dclear()
	pt3dadd(-151.39, 92.61, -14.14, 1.8)
	pt3dadd(-158.28, 93.78, -14.61, 1.8)
	pt3dadd(-162.26, 97.16, -16.84, 1.8)
	pt3dadd(-169.14, 99.63, -16.84, 1.8)
	pt3dadd(-177.61, 104.14, -19.82, 1.8)
	pt3dadd(-183.75, 105.35, -22.06, 1.8)
	pt3dadd(-193.55, 105.35, -23.69, 1.8)
	pt3dadd(-199.38, 104.9, -23.69, 1.8)
	pt3dadd(-207.74, 102.72, -26.38, 1.8)
	pt3dadd(-214.36, 102.72, -26.38, 1.8)
	pt3dadd(-219.12, 103.17, -23.97, 1.8)
	pt3dadd(-227.07, 104.52, -26.1, 1.8)
  }
  dend[25] {pt3dclear()
	pt3dadd(0, 0, 0, 3.6)
	pt3dadd(9.99, 16.1, -3.33, 3.6)
	pt3dadd(13.97, 18.8, -5.38, 2.7)
	pt3dadd(19, 21.06, -5.14, 2.25)
	pt3dadd(19, 21.51, 2.51, 2.25)
  }
  dend[26] {pt3dclear()
	pt3dadd(19, 21.51, 2.51, 2.25)
	pt3dadd(20.32, 24.89, 1.1, 1.8)
	pt3dadd(21.91, 27.82, 6.9, 1.8)
	pt3dadd(21.38, 29.17, 10.27, 1.8)
	pt3dadd(22.17, 30.07, 10.27, 1.8)
  }
  dend[27] {pt3dclear()
	pt3dadd(22.17, 30.07, 10.27, 1.8)
	pt3dadd(22.17, 32.55, 6.82, 1.8)
	pt3dadd(21.12, 38.63, 9.43, 1.8)
	pt3dadd(17.69, 43.11, 6.31, 1.8)
	pt3dadd(17.96, 49.41, 2.25, 1.8)
	pt3dadd(18.49, 59.32, -1.38, 1.8)
	pt3dadd(18.34, 66.63, -3.72, 1.8)
	pt3dadd(18.86, 75.64, -4.41, 1.8)
	pt3dadd(20.45, 83.75, -5.91, 1.8)
	pt3dadd(20.86, 93.04, -8.73, 1.8)
	pt3dadd(25.1, 105.43, -9.14, 1.8)
	pt3dadd(28.58, 118.92, -11.19, 1.8)
	pt3dadd(30.43, 128.83, -13.01, 1.8)
	pt3dadd(31.39, 139.19, -13.01, 1.8)
	pt3dadd(31.92, 143.69, -15.25, 1.8)
	pt3dadd(31.92, 147.07, -15.54, 1.8)
	pt3dadd(31.94, 148.18, -15.54, 1.8)
  }
  dend[28] {pt3dclear()
	pt3dadd(31.94, 148.18, -15.54, 1.8)
	pt3dadd(31.14, 152.91, -15.54, 1.8)
	pt3dadd(31.41, 155.84, -15.54, 1.8)
	pt3dadd(33.52, 161.92, -14.42, 1.8)
	pt3dadd(34.58, 166.42, -14.42, 1.8)
	pt3dadd(33.21, 171.13, -14.42, 1.8)
	pt3dadd(30.83, 175.41, -14.42, 1.8)
	pt3dadd(26.06, 180.59, -11.59, 1.8)
	pt3dadd(24.47, 186.9, -11.59, 1.8)
	pt3dadd(23.01, 193.78, -9.01, 1.8)
	pt3dadd(20.36, 198.99, -5.5, 1.8)
  }
  dend[29] {pt3dclear()
	pt3dadd(31.94, 148.18, -15.54, 1.8)
	pt3dadd(33.2, 150.05, -15.76, 1.35)
	pt3dadd(33.73, 151.85, -15.76, 1.35)
	pt3dadd(33.46, 156.13, -15.76, 1.35)
	pt3dadd(33.2, 161.32, -17.5, 1.35)
	pt3dadd(33.2, 165.37, -21.21, 1.35)
	pt3dadd(33.46, 170.78, -21.21, 1.35)
	pt3dadd(32.54, 174.88, -21.21, 1.35)
	pt3dadd(31.48, 178.03, -19.43, 1.35)
  }
  dend[30] {pt3dclear()
	pt3dadd(22.17, 30.07, 10.27, 1.8)
	pt3dadd(30.34, 35.06, 13.71, 1.8)
	pt3dadd(38.29, 38.66, 15.2, 1.8)
	pt3dadd(43.85, 42.27, 15.2, 1.8)
	pt3dadd(50.62, 46.93, 17.51, 1.8)
	pt3dadd(55.12, 52.34, 17.51, 1.8)
	pt3dadd(61.48, 58.64, 17.18, 1.8)
	pt3dadd(67.04, 65.18, 17.18, 1.8)
	pt3dadd(72.76, 74.44, 14.99, 1.8)
	pt3dadd(75.94, 80.52, 16.64, 1.8)
	pt3dadd(80.97, 89.53, 13.38, 1.8)
	pt3dadd(84.38, 96.16, 10.41, 1.8)
	pt3dadd(87.55, 100.01, 10.41, 1.8)
	pt3dadd(89.14, 102.27, 9.77, 1.8)
  }
  dend[31] {pt3dclear()
	pt3dadd(89.14, 102.27, 9.77, 1.8)
	pt3dadd(92.06, 109.47, 9.77, 1.8)
	pt3dadd(94.05, 115.98, 8.96, 1.8)
	pt3dadd(99.61, 125.67, 8.96, 1.8)
	pt3dadd(104.91, 134.68, 7.8, 1.8)
	pt3dadd(109.44, 141.56, 7.8, 1.8)
	pt3dadd(113.14, 153.5, 8.74, 1.8)
	pt3dadd(115.52, 158.13, 10, 1.8)
	pt3dadd(116.58, 160.61, 9.32, 1.8)
  }
  dend[32] {pt3dclear()
	pt3dadd(116.58, 160.61, 9.32, 1.8)
	pt3dadd(122.14, 164.21, 10.6, 1.35)
	pt3dadd(125.05, 166.92, 10.6, 1.35)
	pt3dadd(125.58, 168.72, 10.6, 1.35)
	pt3dadd(129.55, 172.1, 10.23, 1.35)
	pt3dadd(136.15, 178.56, 9.35, 1.35)
	pt3dadd(139.6, 186.22, 3.58, 1.35)
	pt3dadd(141.98, 191.17, 3.41, 1.35)
	pt3dadd(143.06, 193.93, 1.18, 1.35)
  }
  dend[33] {pt3dclear()
	pt3dadd(116.58, 160.61, 9.32, 1.8)
	pt3dadd(119.45, 166.98, 12.74, 1.8)
	pt3dadd(123.42, 173.97, 12.74, 1.8)
	pt3dadd(125.01, 179.6, 14.98, 1.8)
	pt3dadd(124.47, 192.69, 15.5, 1.8)
	pt3dadd(125.79, 198.77, 15.5, 1.8)
	pt3dadd(124.08, 202.88, 18.84, 1.8)
	pt3dadd(124.08, 203.11, 16.3, 1.8)
  }
  dend[34] {pt3dclear()
	pt3dadd(89.14, 102.27, 9.77, 1.8)
	pt3dadd(96.69, 106.53, 11.1, 1.8)
	pt3dadd(104.37, 110.81, 13.02, 1.8)
	pt3dadd(109.66, 115.54, 13.02, 1.8)
	pt3dadd(116.28, 120.95, 13.02, 1.8)
	pt3dadd(121.96, 126.23, 13.02, 1.8)
	pt3dadd(125.93, 128.48, 13.02, 1.8)
	pt3dadd(130.7, 131.19, 13.02, 1.8)
	pt3dadd(136.26, 139.07, 16.4, 1.8)
	pt3dadd(142.49, 146.46, 16.4, 1.8)
	pt3dadd(148.32, 155.24, 14.77, 1.8)
	pt3dadd(153.35, 163.13, 14.77, 1.8)
	pt3dadd(161.74, 174.69, 19.71, 1.8)
	pt3dadd(170.22, 183.92, 19.71, 1.8)
	pt3dadd(173.84, 190.98, 19.71, 1.8)
	pt3dadd(177.28, 197.07, 26.09, 1.8)
	pt3dadd(177.81, 197.74, 24.28, 1.8)
  }
  dend[35] {pt3dclear()
	pt3dadd(19, 21.51, 2.51, 2.25)
	pt3dadd(23.31, 22.35, -6.68, 1.8)
	pt3dadd(27.54, 24.38, -6.68, 1.8)
	pt3dadd(34.96, 29.11, -9.53, 1.8)
	pt3dadd(38.66, 31.36, -12.3, 1.8)
	pt3dadd(41.84, 33.39, -15.17, 1.8)
	pt3dadd(43.32, 34.75, -15.17, 1.8)
  }
  dend[36] {pt3dclear()
	pt3dadd(43.32, 34.75, -15.17, 1.8)
  }
}
proc shape3d_3() {
  dend[36] {	pt3dadd(44.93, 39.03, -19.31, 1.8)
	pt3dadd(48.64, 43.53, -23.58, 1.8)
	pt3dadd(52.34, 46.23, -24.56, 1.8)
	pt3dadd(55.26, 51.42, -28.46, 1.8)
	pt3dadd(56.85, 55.7, -32.34, 1.8)
	pt3dadd(57.64, 60.2, -34.39, 1.8)
	pt3dadd(56.74, 65.18, -36.61, 1.8)
	pt3dadd(57.27, 73.29, -39.05, 1.8)
	pt3dadd(57.42, 81.51, -41.28, 1.8)
	pt3dadd(58.22, 96.61, -43.98, 1.8)
	pt3dadd(58.39, 105.93, -43.98, 1.8)
	pt3dadd(59.98, 112.47, -47.11, 1.8)
	pt3dadd(60.78, 119.45, -47.17, 1.8)
	pt3dadd(62.39, 125.51, -50.52, 1.8)
	pt3dadd(63.98, 130.01, -50.26, 1.8)
	pt3dadd(64.77, 133.84, -51.79, 1.8)
  }
  dend[37] {pt3dclear()
	pt3dadd(64.77, 133.84, -51.79, 1.8)
	pt3dadd(66.36, 137, -52.67, 1.8)
	pt3dadd(67.42, 139.02, -52.67, 1.8)
	pt3dadd(67.86, 140.38, -52.67, 1.8)
  }
  dend[38] {pt3dclear()
	pt3dadd(67.86, 140.38, -52.67, 1.8)
	pt3dadd(70.51, 145.33, -54.1, 1.8)
	pt3dadd(73.95, 151.42, -55.85, 1.8)
	pt3dadd(77.93, 155.24, -55.92, 1.8)
	pt3dadd(83.75, 161.78, -57.3, 1.8)
	pt3dadd(89.63, 169.01, -59.38, 1.8)
	pt3dadd(94.39, 174.42, -62.38, 1.8)
	pt3dadd(100.22, 178.92, -63.92, 1.8)
	pt3dadd(104.98, 182.75, -65.8, 1.8)
	pt3dadd(109.44, 188.91, -69.15, 1.8)
	pt3dadd(111.29, 196.34, -70.98, 1.8)
  }
  dend[39] {pt3dclear()
	pt3dadd(67.86, 140.38, -52.67, 1.8)
	pt3dadd(69.46, 149.31, -52.67, 1.8)
	pt3dadd(73.44, 160.12, -57.2, 1.8)
	pt3dadd(75.72, 163.85, -57.2, 1.8)
	pt3dadd(78.37, 167.01, -57.2, 1.8)
	pt3dadd(82.6, 169.26, -57.2, 1.8)
	pt3dadd(87.37, 177.82, -60.1, 1.8)
	pt3dadd(91.08, 186.16, -60.1, 1.8)
	pt3dadd(94.38, 191.61, -62.73, 1.8)
	pt3dadd(95.97, 197.69, -66.12, 1.8)
	pt3dadd(96.23, 199.27, -66.28, 1.8)
  }
  dend[40] {pt3dclear()
	pt3dadd(64.77, 133.84, -51.79, 1.8)
	pt3dadd(66.66, 143.16, -53.18, 1.8)
	pt3dadd(67.46, 149.69, -56.41, 1.8)
	pt3dadd(67.72, 156.68, -59.62, 1.8)
	pt3dadd(67.67, 169.19, -63.99, 1.8)
	pt3dadd(68.99, 175.05, -66.84, 1.8)
	pt3dadd(69.46, 185.56, -71.5, 1.8)
	pt3dadd(70.52, 191.19, -76.04, 1.8)
	pt3dadd(70.52, 194.8, -82.32, 1.8)
	pt3dadd(68.68, 198.15, -86.53, 1.8)
  }
  dend[41] {pt3dclear()
	pt3dadd(43.32, 34.75, -15.17, 1.8)
	pt3dadd(49.9, 38.6, -16.41, 1.8)
	pt3dadd(55.19, 43.33, -16.41, 1.8)
	pt3dadd(61.81, 48.29, -19.7, 1.8)
	pt3dadd(68.43, 55.05, -19.7, 1.8)
	pt3dadd(73.83, 60.63, -19.7, 1.8)
	pt3dadd(76.21, 65.36, -19.7, 1.8)
	pt3dadd(78.6, 69.19, -19.7, 1.8)
	pt3dadd(84.42, 73.92, -19.7, 1.8)
	pt3dadd(90.16, 81.88, -19.7, 1.8)
	pt3dadd(95.72, 91.8, -21.58, 1.8)
	pt3dadd(97.84, 96.75, -21.58, 1.8)
	pt3dadd(101.71, 104.88, -22.14, 1.8)
	pt3dadd(107, 113.02, -24.74, 1.8)
	pt3dadd(108.33, 116.62, -24.74, 1.8)
	pt3dadd(111.84, 120.2, -25.21, 1.8)
	pt3dadd(112.9, 120.65, -25.21, 1.8)
  }
  dend[42] {pt3dclear()
	pt3dadd(112.9, 120.65, -25.21, 1.8)
	pt3dadd(118.99, 123.58, -29.27, 1.8)
	pt3dadd(125.88, 127.19, -29.27, 1.8)
	pt3dadd(131.44, 130.12, -31.42, 1.8)
	pt3dadd(141.13, 133.83, -30.96, 1.8)
	pt3dadd(150.93, 138.56, -34.89, 1.8)
	pt3dadd(157.81, 141.71, -38.42, 1.8)
	pt3dadd(167.8, 145.65, -38.42, 1.8)
	pt3dadd(174.15, 150.61, -40.26, 1.8)
	pt3dadd(178.12, 154.22, -42.15, 1.8)
	pt3dadd(183.42, 158.27, -42.15, 1.8)
	pt3dadd(187.31, 160.25, -42.15, 1.8)
	pt3dadd(193.13, 161.6, -42.15, 1.8)
	pt3dadd(200.81, 164.98, -43.46, 1.8)
	pt3dadd(202.66, 166.79, -43.46, 1.8)
	pt3dadd(210.61, 170.39, -45.86, 1.8)
	pt3dadd(215.24, 173.35, -45.86, 1.8)
	pt3dadd(221.33, 175.16, -47.67, 1.8)
	pt3dadd(224.77, 176.06, -49.19, 1.8)
	pt3dadd(230.06, 181.24, -48.58, 1.8)
  }
  dend[43] {pt3dclear()
	pt3dadd(112.9, 120.65, -25.21, 1.8)
	pt3dadd(114.12, 126.68, -25.21, 1.8)
	pt3dadd(118.36, 135.69, -27.04, 1.8)
	pt3dadd(124.19, 146.73, -30.85, 1.8)
	pt3dadd(132.34, 160.09, -32.64, 1.8)
	pt3dadd(136.85, 166.85, -32.64, 1.8)
	pt3dadd(143.42, 175.39, -32.64, 1.8)
	pt3dadd(146.6, 177.19, -32.64, 1.8)
	pt3dadd(150.3, 182.59, -32.64, 1.8)
	pt3dadd(155.6, 187.1, -33.37, 1.8)
	pt3dadd(159.51, 190.85, -32.6, 1.8)
	pt3dadd(161.89, 193.11, -32.6, 1.8)
	pt3dadd(162.68, 194.23, -32.95, 1.8)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
}

proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref ProximalSynapses 
	objref ProximalSynapsePositions 
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() {
	 	  
 
 
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(3, 4, 8,11,12,13,15,17,18,19,20,21,22,23,24,28,32,33,34,38,39,40,42,43) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.78297,   0.966, 0.99855, 0.50112, 0.50106,  0.8847, 0.91741,  0.8459, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.79015, 0.99308, 0.66327, 0.65328, 0.79096, 0.78153, 0.80217, 0.82442, 0.67905, 0.77018) 
for i= 0 , 23 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0  
pre_list.append(syn) // # 0  
} 
 
 // //***** MC syn   
 
ProximalSynapses = new Vector(0,0) 
ProximalSynapses .append(0, 1, 2, 5, 6, 7,14,25,26,27,30,35) 
ProximalSynapsePositions = new Vector(0,0) 
ProximalSynapsePositions .append(0.5, 0.5, 0.10223,0.096995, 0.5, 0.19903, 0.34982, 0.5, 0.5,0.061886,0.076279, 0.43388) 
for i= 0 , 11 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // #  
} 
 
 // //***** HIPP   
 
for i= 0 , 23 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // HIPP  
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 23 
} 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 24 
 
 // //***** Sprout   
 
for i= 0 , 11 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 24 
} 
 
	
 
	  

	}
	func is_art() { return 0 }

	endtemplate GranuleCell42
//************************************************************************************************************