/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */
//Defining granule cell

	begintemplate GranuleCell69
	
// Original name on neuroMorpho.org 1208875.CNG.swc

ndend1=37

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 36 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()


	pdend  = new SectionList()
		for i=1, 2  dend[i] pdend.append()
		dend[4] pdend.append() 
		dend[17] pdend.append()
		for i=21, 22  dend[i] pdend.append()
		


	mdend  = new SectionList()
		dend[5] mdend.append()
		dend[10] mdend.append()		  
		dend[12] mdend.append()
		dend[18] mdend.append()	
		dend[23] mdend.append()		  
		dend[27] mdend.append()
		dend[30] mdend.append()	
		

	ddend  = new SectionList()
		
		dend[3] ddend.append()
		for i=6, 9 dend[i] ddend.append()
		dend[11] ddend.append()
		for i=13, 16 dend[i] ddend.append()
		for i=19, 20 dend[i] ddend.append()
		for i=24, 26 dend[i] ddend.append()
		for i=28, 29 dend[i] ddend.append()
		for i=31, 36 dend[i] ddend.append()


}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }


  connect dend(0), soma(1)
  for i = 1, 3 connect dend[i](0), dend[i-1](1)
  connect dend[4](0), dend[2](1)
  for i = 5, 7 connect dend[i](0), dend[i-1](1)
  connect dend[8](0), dend[6](1)
  connect dend[9](0), dend[5](1)
  connect dend[10](0), dend[4](1)
  for i = 11, 12 connect dend[i](0), dend[10](1)
  for i = 13, 14 connect dend[i](0), dend[i-1](1)
  connect dend[15](0), dend[13](1)
  connect dend[16](0), dend[12](1)
  connect dend[17](0), dend[1](1)
  for i = 18, 19 connect dend[i](0), dend[i-1](1)
  connect dend[20](0), dend[18](1)
  connect dend[21](0), dend[17](1)
  for i = 22, 24 connect dend[i](0), dend[i-1](1)
  connect dend[25](0), dend[23](1)
  connect dend[26](0), dend[22](1)
  connect dend[27](0), dend[21](1)
  for i = 28, 29 connect dend[i](0), dend[27](1)
  connect dend[30](0), dend(1)
  for i = 31, 32 connect dend[i](0), dend[i-1](1)
  connect dend[33](0), dend[31](1)
  connect dend[34](0), dend[30](1)
  for i = 35, 36 connect dend[i](0), dend[34](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 4.21248)
	pt3dadd(-6.11, 14.51, 5.74, 1.24)
  }
  dend {pt3dclear()
	pt3dadd(-6.11, 14.51, 5.74, 1.24)
	pt3dadd(-5.3, 13.48, 3.04, 1.24)
	pt3dadd(-5.02, 12.03, -2.18, 1.24)
	pt3dadd(-5.3, 10.79, -2.18, 1.24)
	pt3dadd(-5.3, 7.48, -2.18, 1.24)
	pt3dadd(-5.84, 5.41, -2.18, 1.24)
	pt3dadd(-5.3, 3.34, -2.18, 1.24)
	pt3dadd(-3.4, 1.06, -2.18, 1.24)
	pt3dadd(-2.58, 0.03, -2.18, 1.24)
	pt3dadd(-1.77, -0.59, -2.18, 1.24)
	pt3dadd(-0.96, -1.21, -0.01, 1.24)
	pt3dadd(0.13, -2.04, -0.01, 1.24)
	pt3dadd(0.94, -3.08, -0.01, 1.24)
	pt3dadd(1.21, -3.08, -0.01, 1.24)
	pt3dadd(2.03, -1.42, -0.01, 1.24)
	pt3dadd(2.57, 1.06, -0.01, 1.24)
	pt3dadd(3.65, 3.34, -0.01, 1.24)
	pt3dadd(3.93, 5.82, -0.01, 1.24)
	pt3dadd(3.11, 8.51, -0.01, 1.24)
	pt3dadd(2.3, 10.58, -0.01, 1.24)
	pt3dadd(1.76, 11.41, 0.22, 1.24)
	pt3dadd(1.21, 12.23, 0.22, 1.24)
	pt3dadd(1.76, 14.1, 0.22, 1.24)
	pt3dadd(2.3, 15.75, -1.13, 1.24)
	pt3dadd(1.76, 17.41, -1.13, 1.24)
	pt3dadd(1.21, 16.58, -1.13, 1.24)
	pt3dadd(0.13, 14.92, -1.13, 1.24)
	pt3dadd(-0.41, 14.51, -1.13, 1.24)
	pt3dadd(-2.31, 14.92, -1.13, 1.24)
	pt3dadd(-4.48, 16.17, -0.9, 1.24)
	pt3dadd(-6.38, 16.79, -0.9, 1.24)
	pt3dadd(-5.84, 15.54, -0.9, 1.24)
	pt3dadd(-5.3, 14.51, -0.9, 1.24)
	pt3dadd(-1.47, 15.24, -2.12, 1.66)
  }
  dend[1] {pt3dclear()
	pt3dadd(-1.47, 15.24, -2.12, 1.66)
	pt3dadd(-3.91, 15.24, -2.12, 1.66)
  }
  dend[2] {pt3dclear()
	pt3dadd(-3.91, 15.24, -2.12, 1.66)
	pt3dadd(1.24, 15.86, -2.12, 1.66)
	pt3dadd(2.87, 18.34, -4.84, 1.66)
	pt3dadd(3.68, 20.21, -4.84, 1.66)
	pt3dadd(4.22, 20.62, -4.84, 1.66)
  }
  dend[3] {pt3dclear()
	pt3dadd(4.22, 20.62, -4.84, 1.66)
	pt3dadd(5.04, 22.07, -9.36, 1.24)
	pt3dadd(5.85, 23.52, -9.36, 1.24)
	pt3dadd(6.39, 24.34, -9.36, 1.24)
	pt3dadd(7.21, 26, -9.36, 1.24)
	pt3dadd(8.56, 26.41, -9.36, 1.24)
	pt3dadd(10.73, 26.83, -9.36, 1.24)
	pt3dadd(11.55, 27.03, -9.36, 0.83)
	pt3dadd(15.07, 28.28, -9.14, 0.83)
	pt3dadd(17.51, 28.9, -11.88, 0.83)
	pt3dadd(18.87, 30.14, -11.88, 0.83)
	pt3dadd(19.14, 32.21, -13.87, 0.83)
	pt3dadd(17.51, 33.24, -18.13, 0.83)
	pt3dadd(18.6, 34.48, -22.06, 0.83)
	pt3dadd(17.79, 36.76, -25.82, 0.83)
	pt3dadd(17.46, 37.84, -25.82, 0.83)
	pt3dadd(18.27, 39.5, -28.24, 0.83)
	pt3dadd(18.54, 40.74, -29.5, 0.83)
	pt3dadd(19.63, 42.39, -29.5, 0.83)
	pt3dadd(20.71, 42.6, -29.5, 0.83)
	pt3dadd(21.8, 43.22, -32.22, 0.83)
	pt3dadd(21.25, 44.46, -36.33, 0.83)
	pt3dadd(21.8, 45.91, -36.33, 0.83)
	pt3dadd(22.07, 46.74, -36.33, 0.83)
	pt3dadd(22.88, 48.6, -38.94, 0.83)
	pt3dadd(23.7, 49.84, -41.46, 0.83)
	pt3dadd(23.7, 52.12, -45.5, 0.83)
	pt3dadd(23.42, 53.57, -45.5, 0.83)
	pt3dadd(24.24, 55.22, -45.5, 0.83)
	pt3dadd(25.32, 55.84, -45.5, 0.83)
	pt3dadd(25.87, 56.88, -48.12, 0.83)
	pt3dadd(26.95, 57.91, -48.12, 0.83)
	pt3dadd(27.22, 58.53, -50.27, 0.83)
	pt3dadd(26.95, 59.36, -50.27, 0.83)
	pt3dadd(26.41, 61.63, -50.27, 0.83)
	pt3dadd(26.06, 65.12, -52.1, 0.83)
	pt3dadd(26.33, 70.08, -56.64, 0.83)
	pt3dadd(26.6, 72.36, -56.64, 0.83)
	pt3dadd(27.41, 74.01, -56.64, 0.83)
	pt3dadd(27.68, 75.88, -58.6, 0.83)
	pt3dadd(28.23, 77.12, -61.12, 0.83)
	pt3dadd(28.5, 78.57, -61.12, 0.83)
	pt3dadd(27.68, 79.39, -61.12, 0.83)
	pt3dadd(28.77, 81.88, -63.58, 0.83)
	pt3dadd(29.04, 83.94, -67.34, 0.83)
	pt3dadd(29.58, 86.22, -67.34, 0.83)
	pt3dadd(30.4, 87.46, -67.34, 0.83)
	pt3dadd(30.87, 88.43, -69.6, 0.83)
	pt3dadd(30.6, 92.78, -69.6, 0.83)
	pt3dadd(31.68, 94.64, -72.16, 0.83)
	pt3dadd(32.5, 96.3, -75.22, 0.83)
	pt3dadd(33.58, 97.95, -75.22, 0.83)
	pt3dadd(34.94, 100.43, -77.01, 0.83)
	pt3dadd(35.75, 101.68, -77.01, 0.83)
	pt3dadd(36.3, 102.92, -77.01, 0.83)
	pt3dadd(36.57, 104.78, -78.14, 0.83)
	pt3dadd(38.47, 106.23, -78.14, 0.83)
	pt3dadd(39.28, 107.06, -79.66, 0.83)
	pt3dadd(39.01, 109.33, -79.66, 0.83)
	pt3dadd(39.28, 112.64, -81.34, 0.83)
	pt3dadd(39.4, 114.26, -81.34, 0.83)
	pt3dadd(40.48, 116.33, -83.25, 0.83)
	pt3dadd(41.3, 117.37, -83.25, 0.83)
	pt3dadd(41.57, 120.88, -83.25, 0.83)
	pt3dadd(43.2, 123.57, -85.68, 0.83)
	pt3dadd(43.74, 125.64, -85.68, 0.83)
	pt3dadd(44.82, 126.68, -85.68, 0.83)
	pt3dadd(45.1, 128.12, -85.68, 0.83)
	pt3dadd(45.91, 132.06, -85.68, 0.83)
	pt3dadd(46.99, 133.92, -88.61, 0.83)
	pt3dadd(47.54, 136.19, -88.61, 0.83)
	pt3dadd(48.35, 138.26, -91.44, 0.83)
	pt3dadd(48.6, 140.68, -91.44, 0.83)
	pt3dadd(49.96, 142.54, -91.44, 0.83)
	pt3dadd(49.96, 143.58, -91.44, 0.83)
	pt3dadd(49.96, 144.82, -91.44, 0.83)
	pt3dadd(50.77, 148.13, -92.13, 0.83)
	pt3dadd(51.31, 149.79, -92.13, 0.83)
	pt3dadd(52.67, 153.51, -97.74, 0.83)
	pt3dadd(52.67, 153.72, -98.77, 0.83)
  }
  dend[4] {pt3dclear()
	pt3dadd(4.22, 20.62, -4.84, 1.66)
	pt3dadd(4.94, 20.81, -4.84, 1.66)
	pt3dadd(5.76, 25.36, -4.84, 1.66)
	pt3dadd(9.01, 30.32, -4.84, 1.66)
	pt3dadd(12.27, 33.63, -4.22, 1.66)
	pt3dadd(12.27, 33.84, -4.22, 1.66)
  }
  dend[5] {pt3dclear()
	pt3dadd(12.27, 33.84, -4.22, 1.66)
	pt3dadd(13.08, 33.84, -4.22, 1.66)
	pt3dadd(14.16, 34.26, -4.22, 1.24)
	pt3dadd(17.15, 36.12, -4.22, 1.24)
	pt3dadd(21.22, 39.22, -4.22, 1.24)
	pt3dadd(24.47, 43.57, -4.22, 1.24)
	pt3dadd(25.48, 47.32, -3.13, 1.24)
	pt3dadd(28.2, 53.12, -3.13, 1.24)
	pt3dadd(29.28, 60.98, -2.97, 1.24)
	pt3dadd(29.28, 64.7, -2.97, 1.24)
	pt3dadd(30.1, 67.39, -1.91, 1.24)
	pt3dadd(30.1, 72.98, -1.91, 1.24)
	pt3dadd(31.01, 77.14, -1.91, 1.24)
	pt3dadd(31.83, 82.31, -1.38, 1.24)
	pt3dadd(31.28, 86.03, 0.31, 1.24)
	pt3dadd(32.1, 88.31, 0.31, 1.24)
	pt3dadd(32.37, 92.86, 0.31, 1.24)
	pt3dadd(33.45, 97, 1.52, 1.24)
	pt3dadd(33.73, 99.07, 1.52, 1.24)
  }
  dend[6] {pt3dclear()
	pt3dadd(33.73, 99.07, 1.52, 1.24)
	pt3dadd(34.27, 102.92, 2.94, 1.24)
	pt3dadd(36.17, 107.48, 2.94, 1.24)
	pt3dadd(38.34, 115.13, 2.94, 1.24)
	pt3dadd(38.87, 117.9, 4.38, 1.24)
	pt3dadd(44.57, 129.28, 5.03, 1.24)
	pt3dadd(47.01, 134.03, 5.03, 1.24)
	pt3dadd(47.55, 136.72, 2.74, 1.24)
	pt3dadd(48.91, 145.21, 3.91, 1.24)
	pt3dadd(50.76, 156.39, 3.91, 1.24)
	pt3dadd(53.47, 161.77, 4.22, 1.24)
	pt3dadd(54.55, 164.66, 4.22, 1.24)
	pt3dadd(57.04, 170.39, 4.22, 1.24)
	pt3dadd(59.37, 174.33, 4.22, 1.24)
	pt3dadd(60.45, 176.61, 4.22, 1.24)
	pt3dadd(61.27, 180.54, 4.22, 1.24)
	pt3dadd(63.44, 184.68, 7.56, 1.24)
	pt3dadd(64.52, 188.19, 7.56, 1.24)
	pt3dadd(65.07, 191.71, 7.56, 1.24)
	pt3dadd(66.96, 195.23, 7.56, 1.24)
	pt3dadd(66.96, 197.3, 9.44, 1.24)
	pt3dadd(66.86, 198.44, 9.44, 1.24)
	pt3dadd(67.67, 200.51, 10.25, 1.24)
	pt3dadd(69.3, 202.99, 10.25, 1.24)
	pt3dadd(69.84, 204.65, 12.11, 1.24)
	pt3dadd(70.93, 205.48, 12.11, 1.24)
	pt3dadd(71.47, 206.51, 12.11, 1.24)
	pt3dadd(72.55, 208.37, 14.34, 1.24)
	pt3dadd(75.54, 209.61, 14.34, 1.24)
	pt3dadd(77.44, 213.75, 17.05, 1.24)
	pt3dadd(77.67, 215.04, 17.05, 1.24)
	pt3dadd(79.57, 216.28, 17.05, 1.24)
	pt3dadd(79.84, 217.94, 17.05, 1.24)
	pt3dadd(80.65, 220.01, 18.96, 1.24)
	pt3dadd(82.01, 222.08, 18.96, 1.24)
	pt3dadd(84.45, 224.35, 18.96, 1.24)
	pt3dadd(87.51, 229.37, 20.27, 1.24)
	pt3dadd(90.77, 234.54, 21.82, 1.24)
	pt3dadd(91.31, 235.57, 24.38, 1.24)
	pt3dadd(92.67, 239.71, 24.38, 1.24)
	pt3dadd(94.29, 242.19, 24.38, 1.24)
	pt3dadd(95.92, 244.47, 25.19, 1.24)
	pt3dadd(98.17, 247.72, 27.18, 1.24)
	pt3dadd(100.03, 250.9, 26.14, 1.24)
  }
  dend[7] {pt3dclear()
	pt3dadd(100.03, 250.9, 26.14, 1.24)
	pt3dadd(102.37, 251.62, 29.56, 1.24)
	pt3dadd(104.77, 252.64, 29.56, 1.24)
	pt3dadd(106.63, 255.08, 31.45, 1.24)
	pt3dadd(107.68, 256.66, 32.64, 1.24)
	pt3dadd(108.41, 259.91, 32.64, 1.24)
	pt3dadd(108.67, 264.34, 32.6, 1.24)
	pt3dadd(109.88, 267.09, 32.6, 1.24)
  }
}
proc shape3d_2() {
  dend[7] {	pt3dadd(110.88, 270.72, 35.7, 0.83)
	pt3dadd(112.16, 273.07, 35.7, 0.83)
	pt3dadd(113.48, 275.07, 35.7, 0.83)
	pt3dadd(114.21, 276.45, 35.7, 0.83)
	pt3dadd(113.39, 278.26, 36.98, 0.83)
	pt3dadd(113.6, 278.2, 35.9, 0.83)
  }
  dend[8] {pt3dclear()
	pt3dadd(100.03, 250.9, 26.14, 1.24)
	pt3dadd(101.36, 251.86, 25.14, 1.24)
	pt3dadd(104.58, 256.56, 26.74, 1.24)
	pt3dadd(106.7, 263.01, 28.1, 1.24)
	pt3dadd(109.85, 268.38, 28.1, 1.24)
	pt3dadd(116.31, 282.06, 30.38, 1.24)
	pt3dadd(118.5, 286.97, 31.98, 1.24)
	pt3dadd(120.23, 294.24, 31.98, 1.24)
	pt3dadd(121.21, 296.88, 31.98, 1.24)
	pt3dadd(122.48, 299.7, 31.98, 1.24)
	pt3dadd(125.11, 301.87, 33.5, 1.24)
	pt3dadd(127.5, 304.7, 33.5, 1.24)
	pt3dadd(128.48, 307.7, 33.5, 1.24)
	pt3dadd(128.94, 309.04, 33.5, 1.24)
	pt3dadd(130.63, 311.9, 33.89, 1.24)
	pt3dadd(132.23, 316.97, 33.89, 1.24)
	pt3dadd(133.21, 319.69, 33.36, 1.24)
	pt3dadd(133.4, 323.74, 33.36, 1.24)
	pt3dadd(134.14, 325.25, 33.36, 1.24)
	pt3dadd(134.67, 329.54, 33.36, 1.24)
	pt3dadd(140.84, 334.98, 33.36, 1.24)
  }
  dend[9] {pt3dclear()
	pt3dadd(33.73, 99.07, 1.52, 1.24)
	pt3dadd(33.11, 104.24, 1.52, 1.24)
	pt3dadd(34.14, 108.41, 1.52, 1.24)
	pt3dadd(35.95, 118.81, 1.52, 1.24)
	pt3dadd(36.94, 127.77, 2.78, 1.24)
	pt3dadd(37.4, 136.36, 2.78, 1.24)
	pt3dadd(36.51, 142.48, 2.78, 1.24)
	pt3dadd(35.37, 147.23, 2.78, 1.24)
	pt3dadd(34.17, 152.86, 4.86, 1.24)
	pt3dadd(32.7, 160.32, 4.86, 1.24)
	pt3dadd(31.64, 167.3, 5.5, 1.24)
	pt3dadd(30.91, 173.06, 7.07, 1.24)
	pt3dadd(32.48, 180.52, 7.07, 1.24)
	pt3dadd(32.18, 185.86, 7.07, 1.24)
	pt3dadd(32.6, 192.7, 7.47, 1.24)
	pt3dadd(33.54, 197.84, 9.02, 1.24)
	pt3dadd(31.83, 206.35, 11.78, 1.24)
	pt3dadd(32.2, 213.92, 12.62, 1.24)
	pt3dadd(33.14, 218.22, 12.62, 1.24)
	pt3dadd(32.51, 221.58, 16.17, 1.24)
	pt3dadd(31.1, 236.15, 16.17, 1.24)
	pt3dadd(30.04, 239.79, 19.26, 1.24)
	pt3dadd(30.33, 242.76, 19.26, 1.24)
	pt3dadd(29.24, 249.29, 19.21, 1.24)
	pt3dadd(28.51, 252.39, 21.41, 1.24)
	pt3dadd(26.83, 255.57, 21.41, 1.24)
	pt3dadd(26.11, 260.22, 21.41, 1.24)
	pt3dadd(23.68, 266.48, 23.86, 1.24)
	pt3dadd(21.83, 273.7, 27.9, 1.24)
	pt3dadd(20.3, 279.67, 31.91, 1.24)
	pt3dadd(19.51, 282.14, 31.91, 1.24)
	pt3dadd(19.8, 284.55, 33.94, 1.24)
	pt3dadd(18.64, 288.4, 33.94, 1.24)
	pt3dadd(18.38, 291.57, 36.67, 1.24)
	pt3dadd(18.53, 293.73, 36.67, 1.24)
	pt3dadd(17.1, 296.99, 39.85, 1.24)
	pt3dadd(17.94, 298.93, 39.85, 1.24)
	pt3dadd(16.03, 303.01, 39.85, 1.24)
	pt3dadd(15.04, 308.66, 42.44, 1.24)
	pt3dadd(14.24, 311.14, 45.58, 1.24)
	pt3dadd(12.63, 313.14, 45.58, 1.24)
  }
  dend[10] {pt3dclear()
	pt3dadd(12.27, 33.84, -4.22, 1.66)
	pt3dadd(12.31, 35.7, -3.83, 1.24)
	pt3dadd(15.56, 41.44, -3.83, 1.24)
	pt3dadd(19.04, 47.23, -3.83, 1.24)
	pt3dadd(20.81, 52.21, -3.83, 1.24)
	pt3dadd(22.14, 61.75, -7.14, 1.24)
	pt3dadd(24.08, 73.22, -7.14, 1.24)
	pt3dadd(25.34, 77.38, -6.77, 1.24)
	pt3dadd(25.38, 85.3, -6.34, 1.24)
	pt3dadd(25.04, 94.14, -6.34, 1.24)
	pt3dadd(26.27, 107.08, -7.44, 1.24)
	pt3dadd(28.62, 118.63, -7.44, 1.24)
	pt3dadd(31.22, 127.74, -7.87, 1.24)
	pt3dadd(35.72, 137.77, -7.87, 1.24)
	pt3dadd(34.9, 140.33, -7.87, 1.24)
	pt3dadd(33.82, 141.9, -6.44, 1.24)
	pt3dadd(33.44, 147.23, -6.44, 1.24)
	pt3dadd(33.85, 156.34, -6.44, 1.24)
	pt3dadd(33.98, 158.3, -6.44, 1.24)
  }
  dend[11] {pt3dclear()
	pt3dadd(33.98, 158.3, -6.44, 1.24)
	pt3dadd(35.27, 159.69, -6.44, 1.24)
	pt3dadd(42.09, 170.81, -6.14, 1.24)
	pt3dadd(45.29, 178.92, -3.06, 1.24)
	pt3dadd(48.36, 187.95, -2.53, 1.24)
	pt3dadd(51.02, 197.97, -0.21, 1.24)
	pt3dadd(52.81, 203.01, -0.21, 1.24)
	pt3dadd(56.85, 209.66, 1.95, 1.24)
	pt3dadd(60.16, 215.64, 4.88, 1.24)
	pt3dadd(67.23, 224.54, 10.28, 1.24)
	pt3dadd(73.89, 233.54, 12.81, 1.24)
	pt3dadd(74.45, 236.74, 14.98, 1.24)
	pt3dadd(76.75, 240.77, 18.9, 1.24)
	pt3dadd(79.15, 244.56, 18.9, 1.24)
	pt3dadd(85.69, 252.3, 23.1, 1.24)
	pt3dadd(87.68, 257.42, 23.1, 1.24)
	pt3dadd(93.55, 264.68, 25.89, 1.24)
	pt3dadd(94.87, 267.12, 25.1, 1.24)
  }
  dend[12] {pt3dclear()
	pt3dadd(33.98, 158.3, -6.44, 1.24)
	pt3dadd(33.98, 158.48, -6.44, 1.24)
	pt3dadd(34.72, 164.44, -6.44, 1.24)
	pt3dadd(36.34, 171.89, -6.44, 1.24)
  }
  dend[13] {pt3dclear()
	pt3dadd(36.34, 171.89, -6.44, 1.24)
	pt3dadd(37.94, 175.98, -6.44, 1.24)
	pt3dadd(40.69, 182.46, -6.44, 1.24)
	pt3dadd(41.79, 186.99, -6.44, 1.24)
	pt3dadd(43.07, 195.52, -6.44, 1.24)
	pt3dadd(50.5, 227.1, -6.32, 1.24)
	pt3dadd(49.7, 233.46, -6.32, 1.24)
	pt3dadd(55.13, 243.79, -6.32, 1.24)
	pt3dadd(56.47, 251.09, -6.32, 1.24)
  }
  dend[14] {pt3dclear()
	pt3dadd(56.47, 251.09, -6.32, 1.24)
	pt3dadd(58.21, 252.9, -6.32, 1.24)
	pt3dadd(61.44, 255.53, -6.32, 1.24)
	pt3dadd(64.56, 262.06, -8.34, 1.24)
	pt3dadd(66.75, 266.8, -8.34, 1.24)
	pt3dadd(67.05, 269.52, -8.34, 1.24)
	pt3dadd(68.88, 272.54, -8.77, 1.24)
	pt3dadd(69.87, 273.88, -8.77, 1.24)
	pt3dadd(70.59, 278.81, -8.77, 1.24)
  }
  dend[15] {pt3dclear()
	pt3dadd(56.47, 251.09, -6.32, 1.24)
	pt3dadd(56.65, 253.14, -4.06, 1.24)
	pt3dadd(57.67, 261.73, -4.06, 1.24)
	pt3dadd(59.48, 269.3, -4.06, 1.24)
	pt3dadd(59.38, 273.17, -4.06, 1.24)
	pt3dadd(59.58, 282.76, -4.06, 1.24)
	pt3dadd(62.02, 288.43, -4.06, 1.24)
	pt3dadd(62.72, 291.96, -4.06, 1.24)
	pt3dadd(64.07, 298.25, -4.06, 1.24)
	pt3dadd(64.99, 299.9, -4.06, 1.24)
	pt3dadd(65.52, 307.91, -3.64, 1.24)
	pt3dadd(65.58, 315.5, -1.25, 1.24)
	pt3dadd(65.04, 320.82, -1.3, 1.24)
	pt3dadd(64.17, 324.14, 1.24, 1.24)
	pt3dadd(64.65, 327.55, 1.24, 1.24)
	pt3dadd(63.7, 330.34, 2.74, 1.24)
	pt3dadd(63.78, 330.24, 0.74, 1.24)
  }
  dend[16] {pt3dclear()
	pt3dadd(36.34, 171.89, -6.44, 1.24)
	pt3dadd(36.53, 174.33, -4.23, 1.24)
	pt3dadd(36.53, 175.9, -4.23, 1.24)
	pt3dadd(35.17, 182.46, -4.23, 1.24)
	pt3dadd(32.69, 194.23, -5.1, 1.24)
	pt3dadd(29.95, 203.34, -6.36, 1.24)
	pt3dadd(26.67, 212.13, -6.36, 1.24)
	pt3dadd(26.46, 216.18, -6.36, 1.24)
	pt3dadd(27.81, 225.97, -6.36, 1.24)
	pt3dadd(26.92, 231.01, -8.16, 1.24)
	pt3dadd(23.87, 241.59, -8.16, 1.24)
	pt3dadd(21.49, 253.23, -5.68, 1.24)
	pt3dadd(20.1, 261.93, -5.68, 1.24)
	pt3dadd(21.48, 269.08, -5.68, 1.24)
	pt3dadd(18.75, 271.73, -5.68, 1.24)
	pt3dadd(17.92, 287.78, -6.06, 1.24)
	pt3dadd(15.69, 297.16, -9.34, 1.24)
	pt3dadd(14.1, 308.21, -8.48, 1.24)
	pt3dadd(11.69, 315.9, -9.13, 1.24)
	pt3dadd(11.66, 323.9, -9.17, 1.24)
	pt3dadd(12.2, 332.12, -8.06, 1.24)
	pt3dadd(11.32, 335.77, -8.06, 1.24)
	pt3dadd(13.16, 339.14, -14.27, 1.24)
	pt3dadd(9.06, 341.1, -14.27, 1.24)
  }
  dend[17] {pt3dclear()
	pt3dadd(-3.91, 15.24, -2.12, 1.66)
	pt3dadd(-3.96, 15.46, -7.18, 1.66)
	pt3dadd(-5.18, 17.1, -7.18, 1.66)
	pt3dadd(-7.39, 19.52, -3.98, 1.66)
  }
  dend[18] {pt3dclear()
	pt3dadd(-7.39, 19.52, -3.98, 1.66)
	pt3dadd(-9.12, 22.34, -0.11, 1.24)
	pt3dadd(-12.35, 28.66, -0.11, 1.24)
	pt3dadd(-17.03, 32.99, -0.11, 1.24)
	pt3dadd(-20.27, 39.66, 2.14, 1.24)
	pt3dadd(-22.66, 45.64, 2.14, 1.24)
	pt3dadd(-24.79, 52.68, 2.14, 1.24)
	pt3dadd(-32.96, 67.12, 2.14, 1.24)
	pt3dadd(-40.61, 82.56, 2.14, 1.24)
	pt3dadd(-46.12, 95.68, 2.14, 1.24)
	pt3dadd(-49.62, 104.54, 4.31, 1.24)
	pt3dadd(-49.35, 110.02, 4.31, 1.24)
	pt3dadd(-54.37, 128.66, 5.64, 1.24)
	pt3dadd(-57.13, 134.02, 5.64, 1.24)
	pt3dadd(-58.03, 140.46, 5.64, 1.24)
	pt3dadd(-59.65, 144.57, 8.51, 1.24)
	pt3dadd(-59.89, 148.16, 8.51, 1.24)
	pt3dadd(-65.04, 162.72, 8.51, 1.24)
	pt3dadd(-67.93, 174.64, 8.51, 1.24)
	pt3dadd(-69.92, 180.86, 8.51, 1.24)
	pt3dadd(-70.98, 185.6, 8.51, 1.24)
  }
  dend[19] {pt3dclear()
	pt3dadd(-70.98, 185.6, 8.51, 1.24)
	pt3dadd(-71.09, 188.54, 9.84, 1.24)
	pt3dadd(-71.63, 190.92, 9.84, 1.24)
	pt3dadd(-73.05, 193.94, 9.84, 1.24)
	pt3dadd(-73.02, 197.15, 11.29, 1.24)
	pt3dadd(-72.82, 198.48, 11.29, 1.24)
	pt3dadd(-73.98, 203.2, 13.6, 1.24)
  }
}
proc shape3d_3() {
  dend[19] {	pt3dadd(-75.1, 208, 13.6, 1.24)
	pt3dadd(-75.83, 209.9, 15.86, 1.24)
	pt3dadd(-77.25, 212.74, 20.94, 1.24)
	pt3dadd(-77.56, 214.71, 20.94, 1.24)
	pt3dadd(-80.06, 217.95, 20.94, 1.24)
	pt3dadd(-81.38, 220.32, 25.75, 1.24)
	pt3dadd(-81.15, 224.17, 25.75, 1.24)
	pt3dadd(-82.65, 226.31, 25.75, 1.24)
	pt3dadd(-85.67, 230.17, 28.74, 1.24)
	pt3dadd(-86.5, 236.24, 33.06, 1.24)
	pt3dadd(-87.5, 242.45, 38.02, 1.24)
	pt3dadd(-90.47, 246.58, 38.02, 1.24)
	pt3dadd(-92.59, 254.92, 42.09, 1.24)
	pt3dadd(-93.43, 259.6, 42.09, 1.24)
	pt3dadd(-93.42, 265.02, 42.09, 1.24)
	pt3dadd(-96.4, 272.91, 44.09, 1.24)
	pt3dadd(-100.22, 278.84, 44.09, 1.24)
	pt3dadd(-104.02, 287.74, 45.29, 1.24)
	pt3dadd(-107.27, 295.5, 45.29, 1.24)
	pt3dadd(-112.64, 300.41, 45.99, 1.24)
	pt3dadd(-115.6, 305.4, 45.99, 1.24)
	pt3dadd(-117.86, 307.51, 46.29, 1.24)
	pt3dadd(-119.99, 311.17, 46.29, 1.24)
	pt3dadd(-123.27, 314.13, 46.29, 1.24)
	pt3dadd(-127.36, 315.49, 46.29, 1.24)
	pt3dadd(-127.49, 317.3, 46.29, 1.24)
	pt3dadd(-131.02, 320.97, 46.29, 1.24)
	pt3dadd(-131.02, 321.03, 46.63, 1.24)
  }
  dend[20] {pt3dclear()
	pt3dadd(-70.98, 185.6, 8.51, 1.24)
	pt3dadd(-70.69, 185.68, 8.51, 1.24)
	pt3dadd(-71.16, 186.88, 8.51, 1.24)
	pt3dadd(-73.66, 189.74, 8.51, 1.24)
	pt3dadd(-74.98, 191.7, 8.51, 1.24)
	pt3dadd(-76.99, 193.91, 8.51, 1.24)
	pt3dadd(-78.92, 196.74, 8.51, 1.24)
	pt3dadd(-81.8, 200.99, 6.07, 1.24)
	pt3dadd(-83.52, 204.14, 6.07, 1.24)
	pt3dadd(-86.47, 209.42, 6.07, 1.24)
	pt3dadd(-88.86, 214.41, 6.07, 1.24)
	pt3dadd(-91.6, 221.26, 6.07, 1.24)
	pt3dadd(-94.87, 225.38, 6.07, 1.24)
	pt3dadd(-96.52, 228.96, 6.07, 1.24)
	pt3dadd(-101.03, 238.55, 4.17, 1.24)
	pt3dadd(-103.73, 246.92, 4.17, 1.24)
	pt3dadd(-104.63, 261.73, 4.17, 1.24)
	pt3dadd(-105.5, 272.4, 4.17, 1.24)
	pt3dadd(-104.13, 288.99, 2.05, 1.24)
	pt3dadd(-103.21, 297.94, 2.05, 1.24)
	pt3dadd(-104.3, 308.19, 1.94, 1.24)
	pt3dadd(-107.55, 315.07, 4.02, 1.24)
	pt3dadd(-109.86, 318.57, 4.02, 1.24)
	pt3dadd(-110.9, 319.47, 4.02, 1.24)
	pt3dadd(-114.35, 319.44, 4.02, 1.24)
	pt3dadd(-116.59, 319.03, 4.02, 1.24)
	pt3dadd(-118.86, 319.46, 5.11, 1.24)
	pt3dadd(-120.72, 321.1, 5.11, 1.24)
	pt3dadd(-120.62, 321.04, 5.11, 1.24)
  }
  dend[21] {pt3dclear()
	pt3dadd(-7.39, 19.52, -3.98, 1.66)
	pt3dadd(-8.46, 21.12, -2.91, 1.66)
	pt3dadd(-13.73, 26.45, -2.91, 1.66)
	pt3dadd(-16.42, 29.57, -7.73, 1.66)
	pt3dadd(-18.95, 32.77, -6.91, 1.66)
  }
  dend[22] {pt3dclear()
	pt3dadd(-18.95, 32.77, -6.91, 1.66)
	pt3dadd(-19.99, 34.72, -6.91, 1.24)
	pt3dadd(-23.7, 38.81, -10.79, 1.24)
	pt3dadd(-25.6, 41.56, -10.79, 1.24)
	pt3dadd(-27.47, 44.57, -10.79, 1.24)
  }
  dend[23] {pt3dclear()
	pt3dadd(-27.47, 44.57, -10.79, 1.24)
	pt3dadd(-27.3, 48.19, -10.79, 1.24)
	pt3dadd(-26.49, 55.51, -10.79, 1.24)
	pt3dadd(-25.49, 62.92, -10.79, 1.24)
	pt3dadd(-26.86, 68.66, -10.79, 1.24)
	pt3dadd(-27.45, 72.39, -10.79, 1.24)
	pt3dadd(-28.39, 79.5, -10.79, 1.24)
	pt3dadd(-29.19, 86.3, -10.79, 1.24)
	pt3dadd(-29.65, 95.58, -10.79, 1.24)
	pt3dadd(-29.5, 102.5, -10.79, 1.24)
	pt3dadd(-29.58, 110.12, -13.36, 1.24)
	pt3dadd(-29.3, 116.69, -13.36, 1.24)
	pt3dadd(-28.56, 124.95, -13.36, 1.24)
	pt3dadd(-28.3, 130.46, -14.91, 1.24)
  }
  dend[24] {pt3dclear()
	pt3dadd(-28.3, 130.46, -14.91, 1.24)
	pt3dadd(-27.83, 134.19, -14.91, 1.24)
	pt3dadd(-27.98, 148.95, -14.91, 1.24)
	pt3dadd(-27.36, 156.12, -14.91, 1.24)
	pt3dadd(-27.38, 161.24, -14.91, 1.24)
	pt3dadd(-26.83, 166.23, -14.91, 1.24)
	pt3dadd(-26.16, 171.86, -16.99, 1.24)
	pt3dadd(-27.46, 177.88, -18.99, 1.24)
	pt3dadd(-27.03, 183.25, -18.99, 1.24)
	pt3dadd(-27.1, 193.2, -21.77, 1.24)
	pt3dadd(-27.38, 197.61, -21.77, 1.24)
	pt3dadd(-26.02, 204.29, -21.77, 1.24)
	pt3dadd(-25.29, 210.06, -21.77, 1.24)
	pt3dadd(-24.02, 218.76, -24.3, 1.24)
	pt3dadd(-22.48, 228.19, -24.3, 1.24)
	pt3dadd(-21.15, 235.51, -24.3, 1.24)
	pt3dadd(-20.83, 240.43, -24.3, 1.24)
	pt3dadd(-20.09, 247.71, -24.3, 1.24)
	pt3dadd(-19.56, 261.94, -24.9, 1.24)
	pt3dadd(-18.96, 269.73, -24.9, 1.24)
	pt3dadd(-18.09, 274.63, -24.9, 1.24)
	pt3dadd(-16.21, 283.77, -24.9, 1.24)
	pt3dadd(-14.95, 288.63, -24.58, 1.24)
	pt3dadd(-14.09, 292.4, -24.58, 1.24)
	pt3dadd(-13.56, 299.09, -24.02, 1.24)
	pt3dadd(-12.96, 305.69, -19.92, 1.24)
	pt3dadd(-12.36, 307.32, -19.92, 1.24)
	pt3dadd(-12.85, 309.76, -19.92, 1.24)
	pt3dadd(-11.89, 315.67, -18.37, 1.24)
	pt3dadd(-11.63, 320.22, -18.37, 1.24)
	pt3dadd(-11.78, 324.41, -18.37, 1.24)
	pt3dadd(-10.69, 326.95, -18.37, 1.24)
	pt3dadd(-9.69, 329.98, -18.37, 1.24)
	pt3dadd(-8.15, 333.79, -20.46, 1.24)
	pt3dadd(-7.29, 336.77, -23.03, 1.24)
	pt3dadd(-5.75, 337.91, -26.64, 1.24)
	pt3dadd(-5.7, 338.08, -24.31, 1.24)
  }
  dend[25] {pt3dclear()
	pt3dadd(-28.3, 130.46, -14.91, 1.24)
	pt3dadd(-29.46, 133.78, -12.85, 1.24)
	pt3dadd(-30.39, 137.79, -12.85, 1.24)
	pt3dadd(-31.19, 143.25, -12.85, 1.24)
	pt3dadd(-32.26, 145.96, -12.85, 1.24)
	pt3dadd(-32.58, 147.52, -12.85, 1.24)
	pt3dadd(-34.47, 154.09, -11.86, 1.24)
	pt3dadd(-36.13, 159.66, -9.46, 1.24)
	pt3dadd(-37.73, 164.01, -9.46, 1.24)
	pt3dadd(-37.23, 166.34, -9.46, 1.24)
	pt3dadd(-37.1, 168.34, -9.46, 1.24)
	pt3dadd(-37.99, 168.89, -9.46, 1.24)
	pt3dadd(-38.45, 177.77, -9.46, 1.24)
	pt3dadd(-39.39, 182.83, -9.46, 1.24)
	pt3dadd(-39.92, 186.39, -9.46, 1.24)
	pt3dadd(-40.45, 188.74, -9.46, 1.24)
	pt3dadd(-41.12, 190.12, -9.46, 1.24)
	pt3dadd(-40.9, 191.93, -9.46, 1.24)
	pt3dadd(-41.18, 193.12, -9.46, 1.24)
	pt3dadd(-40.9, 196.17, -9.46, 1.24)
	pt3dadd(-41.45, 199.58, -9.46, 1.24)
	pt3dadd(-43.4, 203.39, -9.46, 1.24)
	pt3dadd(-44.39, 206.37, -9.46, 1.24)
	pt3dadd(-45.66, 211.03, -8.63, 1.24)
	pt3dadd(-45.98, 214.79, -8.63, 1.24)
	pt3dadd(-47.6, 217.14, -8.63, 1.24)
	pt3dadd(-48.12, 219.14, -8.63, 1.24)
	pt3dadd(-49.73, 223.21, -8.63, 1.24)
	pt3dadd(-53.03, 233.2, -8.63, 1.24)
	pt3dadd(-55.55, 241.54, -6.45, 1.24)
	pt3dadd(-57.4, 249.12, -6.45, 1.24)
	pt3dadd(-58.46, 254.45, -6.45, 1.24)
	pt3dadd(-61.22, 261.5, -6.45, 1.24)
	pt3dadd(-61.85, 268.92, -4.92, 1.24)
	pt3dadd(-61.9, 275.07, -3.33, 1.24)
	pt3dadd(-62.79, 278.38, -3.33, 1.24)
	pt3dadd(-64.6, 279.71, -3.33, 1.24)
	pt3dadd(-66.4, 283.39, -3.33, 1.24)
	pt3dadd(-66.58, 285.94, -3.33, 1.24)
	pt3dadd(-67.32, 287.32, -3.33, 1.24)
	pt3dadd(-67.92, 292.65, -1.88, 1.24)
	pt3dadd(-67.63, 294.32, -1.88, 1.24)
	pt3dadd(-66.69, 297.17, -1.88, 1.24)
	pt3dadd(-67.59, 304.3, -0.66, 1.24)
  }
  dend[26] {pt3dclear()
	pt3dadd(-27.47, 44.57, -10.79, 1.24)
	pt3dadd(-28.26, 45.14, -11.44, 1.24)
	pt3dadd(-29.73, 46.72, -11.44, 1.24)
	pt3dadd(-32.76, 49.98, -11.44, 1.24)
	pt3dadd(-34.33, 51.72, -11.44, 1.24)
	pt3dadd(-36.47, 53.94, -11.44, 1.24)
	pt3dadd(-39.76, 59.04, -11.44, 1.24)
	pt3dadd(-43.23, 63.62, -9.94, 1.24)
	pt3dadd(-47.64, 69.05, -9.94, 1.24)
	pt3dadd(-48.25, 73.01, -11.05, 1.24)
	pt3dadd(-50.82, 75.14, -11.05, 1.24)
	pt3dadd(-51.18, 77.34, -11.05, 1.24)
	pt3dadd(-53.89, 79.97, -11.05, 1.24)
	pt3dadd(-56.07, 82.56, -11.05, 1.24)
	pt3dadd(-57.19, 85.78, -11.05, 1.24)
	pt3dadd(-60.36, 89.18, -11.05, 1.24)
	pt3dadd(-62.55, 92.37, -11.93, 1.24)
	pt3dadd(-63.86, 95.16, -11.93, 1.24)
	pt3dadd(-66.62, 99.21, -11.93, 1.24)
	pt3dadd(-67.52, 103.41, -11.93, 1.24)
	pt3dadd(-68.93, 106.16, -11.93, 1.24)
	pt3dadd(-70.26, 109.38, -11.93, 1.24)
	pt3dadd(-71.46, 112.57, -11.93, 1.24)
	pt3dadd(-74.29, 117.22, -11.93, 1.24)
	pt3dadd(-76.2, 121.4, -11.93, 1.24)
	pt3dadd(-77.46, 124.57, -11.93, 1.24)
	pt3dadd(-79.67, 127.98, -9.53, 1.24)
	pt3dadd(-80.32, 131.17, -9.53, 1.24)
	pt3dadd(-81.19, 133.55, -9.53, 1.24)
	pt3dadd(-83.55, 136.57, -9.53, 1.24)
	pt3dadd(-84.59, 140.6, -9.53, 1.24)
	pt3dadd(-85.59, 143.15, -9.53, 1.24)
	pt3dadd(-85.92, 145.76, -6.66, 1.24)
	pt3dadd(-87.87, 147.53, -6.66, 1.24)
	pt3dadd(-88.79, 151.4, -6.66, 1.24)
	pt3dadd(-89.05, 152.71, -6.66, 1.24)
	pt3dadd(-93.24, 164.26, -8.98, 1.24)
	pt3dadd(-95.47, 170.06, -11.61, 1.24)
  }
}
proc shape3d_4() {
  dend[26] {	pt3dadd(-97.13, 174.83, -11.61, 1.24)
	pt3dadd(-98.73, 180.25, -11.61, 1.24)
	pt3dadd(-99.25, 184.82, -11.61, 1.24)
	pt3dadd(-101, 189.01, -11.61, 1.24)
	pt3dadd(-102.26, 192.38, -11.61, 1.24)
	pt3dadd(-105.83, 197.02, -11.61, 1.24)
	pt3dadd(-108.35, 199.55, -10.19, 1.24)
	pt3dadd(-111.63, 202.57, -11.58, 1.24)
	pt3dadd(-111.5, 202.67, -11.58, 1.24)
  }
  dend[27] {pt3dclear()
	pt3dadd(-18.95, 32.77, -6.91, 1.66)
	pt3dadd(-18.92, 32.69, -12.9, 1.24)
	pt3dadd(-19.79, 34.12, -12.9, 1.24)
	pt3dadd(-21.67, 34.89, -12.9, 1.24)
	pt3dadd(-24.15, 35.9, -12.9, 1.24)
	pt3dadd(-28.72, 37.53, -12.9, 1.24)
	pt3dadd(-31.22, 40.57, -12.9, 1.24)
	pt3dadd(-32.93, 44.19, -12.9, 1.24)
	pt3dadd(-33.72, 47.37, -12.9, 1.24)
	pt3dadd(-41.64, 56.78, -12.9, 1.24)
	pt3dadd(-48.21, 64.94, -9.72, 1.24)
	pt3dadd(-54.88, 71.49, -9.72, 1.24)
	pt3dadd(-57.07, 75.61, -9.72, 1.24)
	pt3dadd(-60.36, 79.39, -9.72, 1.24)
	pt3dadd(-67.08, 88.57, -9.72, 1.24)
	pt3dadd(-73.61, 97.99, -9.72, 1.24)
	pt3dadd(-82.11, 110.49, -7.75, 1.24)
	pt3dadd(-88.07, 118.74, -7.75, 1.24)
	pt3dadd(-90.27, 122.6, -7.75, 1.24)
	pt3dadd(-99.6, 143.14, -7.75, 1.24)
	pt3dadd(-103.03, 151.34, -9.52, 1.24)
	pt3dadd(-111.51, 164.92, -9.52, 1.24)
  }
  dend[28] {pt3dclear()
	pt3dadd(-111.51, 164.92, -9.52, 1.24)
	pt3dadd(-111.03, 165.7, -9.52, 1.24)
	pt3dadd(-111.18, 171.68, -9.52, 1.24)
	pt3dadd(-112.26, 178.08, -9.52, 1.24)
	pt3dadd(-111.76, 183.66, -9.52, 1.24)
	pt3dadd(-113.95, 188.42, -9.52, 1.24)
	pt3dadd(-117.16, 195.72, -9.93, 1.24)
	pt3dadd(-120.09, 201.67, -9.93, 1.24)
	pt3dadd(-122.82, 206.63, -8.86, 1.24)
	pt3dadd(-124.26, 211.63, -6.75, 1.24)
	pt3dadd(-126, 217.88, -6.75, 1.24)
	pt3dadd(-127.87, 222.83, -6.75, 1.24)
	pt3dadd(-128.72, 228.66, -6.75, 1.24)
	pt3dadd(-129.59, 238.19, -8.72, 1.24)
	pt3dadd(-129.85, 248.61, -11.75, 1.24)
	pt3dadd(-130.79, 254.06, -13.26, 1.24)
	pt3dadd(-134.03, 262.14, -13.26, 1.24)
	pt3dadd(-135.26, 274.28, -13.26, 1.24)
	pt3dadd(-138.63, 284.19, -16.49, 1.24)
	pt3dadd(-143.86, 290.06, -16.49, 1.24)
	pt3dadd(-148.24, 296.9, -13.5, 1.24)
	pt3dadd(-151.9, 302.87, -13.5, 1.24)
	pt3dadd(-157.87, 309.08, -10.84, 1.24)
	pt3dadd(-158.72, 314.24, -7.22, 1.24)
	pt3dadd(-158.7, 318.61, -4.93, 1.24)
	pt3dadd(-158.78, 318.67, -4.93, 1.24)
  }
  dend[29] {pt3dclear()
	pt3dadd(-111.51, 164.92, -9.52, 1.24)
	pt3dadd(-114.42, 168.22, -13.26, 1.24)
	pt3dadd(-121.28, 178.41, -13.26, 1.24)
	pt3dadd(-123.47, 184.06, -13.26, 1.24)
	pt3dadd(-123.5, 187.17, -13.26, 1.24)
	pt3dadd(-127.64, 189.54, -13.26, 1.24)
	pt3dadd(-138.62, 201.06, -13.26, 1.24)
	pt3dadd(-150.98, 215.56, -10.1, 1.24)
	pt3dadd(-161.82, 226.23, -12.82, 1.24)
	pt3dadd(-171.67, 232.48, -12.82, 1.24)
	pt3dadd(-181.47, 241.36, -14.98, 1.24)
	pt3dadd(-185.84, 247.06, -14.98, 1.24)
	pt3dadd(-187.53, 250.99, -17.9, 1.24)
	pt3dadd(-186.76, 255.41, -17.9, 1.24)
	pt3dadd(-188.6, 262.5, -17.9, 1.24)
	pt3dadd(-190.2, 266.41, -18.82, 1.24)
	pt3dadd(-194.24, 271.43, -21.58, 1.24)
	pt3dadd(-201.36, 281.4, -25.57, 1.24)
	pt3dadd(-205.1, 289.74, -27.35, 1.24)
	pt3dadd(-211.07, 295.26, -28.8, 1.24)
	pt3dadd(-212.73, 297.74, -30.1, 1.24)
  }
  dend[30] {pt3dclear()
	pt3dadd(-1.47, 15.24, -2.12, 1.66)
	pt3dadd(-5.88, 17.52, 5.08, 1.66)
	pt3dadd(-17.81, 21.16, 5.08, 1.66)
	pt3dadd(-22.82, 24.97, 7.39, 1.66)
	pt3dadd(-24.23, 28.77, 7.39, 1.66)
	pt3dadd(-30.51, 34.01, 7.39, 1.66)
	pt3dadd(-31.08, 33.21, 12.96, 1.66)
	pt3dadd(-36.3, 32.62, 12.96, 1.66)
	pt3dadd(-40.61, 32.02, 16.46, 1.66)
	pt3dadd(-42.84, 32.46, 16.46, 1.66)
	pt3dadd(-47.21, 35.96, 16.46, 1.66)
	pt3dadd(-50.8, 37.9, 16.46, 1.66)
	pt3dadd(-56.02, 43.22, 18.18, 1.66)
	pt3dadd(-60.68, 48.41, 19.92, 1.66)
	pt3dadd(-64.47, 51.13, 19.92, 1.66)
  }
  dend[31] {pt3dclear()
	pt3dadd(-64.47, 51.13, 19.92, 1.66)
	pt3dadd(-65.83, 53.13, 19.92, 1.66)
	pt3dadd(-67.03, 56.14, 19.92, 1.24)
	pt3dadd(-70.67, 60.59, 19.92, 1.24)
	pt3dadd(-71.48, 64.57, 19.92, 1.24)
	pt3dadd(-76.15, 70.63, 19.92, 1.24)
	pt3dadd(-83.39, 86.99, 19.92, 1.24)
	pt3dadd(-85.64, 94.7, 17.89, 1.24)
	pt3dadd(-87.91, 98.99, 17.89, 1.24)
	pt3dadd(-91.4, 109.59, 17.89, 1.24)
	pt3dadd(-94.53, 117.09, 17.89, 1.24)
	pt3dadd(-96.37, 120.77, 15.66, 1.24)
	pt3dadd(-98.78, 127.46, 15.66, 1.24)
	pt3dadd(-101.58, 135.72, 16.03, 1.24)
	pt3dadd(-108.72, 152.19, 18.46, 1.24)
	pt3dadd(-115.18, 174.17, 18.06, 1.24)
	pt3dadd(-119.95, 193.48, 19.79, 1.24)
	pt3dadd(-129.36, 212.89, 19.79, 1.24)
	pt3dadd(-137.48, 228.36, 21.59, 1.24)
	pt3dadd(-142.7, 234.44, 25.8, 1.24)
	pt3dadd(-147.01, 240.65, 25.8, 1.24)
	pt3dadd(-147.14, 240.64, 25.8, 1.24)
  }
  dend[32] {pt3dclear()
	pt3dadd(-147.14, 240.64, 25.8, 1.24)
	pt3dadd(-146.87, 244.37, 25.8, 1.24)
	pt3dadd(-148.03, 253.74, 25.8, 1.24)
	pt3dadd(-150.58, 261.29, 25.8, 1.24)
	pt3dadd(-153.45, 269.31, 25.8, 1.24)
	pt3dadd(-158.35, 277.52, 24.09, 1.24)
	pt3dadd(-162.07, 286.54, 24.09, 1.24)
	pt3dadd(-162.61, 291.4, 24.09, 1.24)
	pt3dadd(-166.27, 296.41, 24.09, 1.24)
	pt3dadd(-169.53, 304.09, 24.09, 1.24)
	pt3dadd(-169.27, 309.83, 22.62, 1.24)
	pt3dadd(-168.26, 312.74, 19.78, 1.24)
	pt3dadd(-165.63, 314.09, 19.78, 1.24)
	pt3dadd(-165.74, 314.04, 22.06, 1.24)
  }
  dend[33] {pt3dclear()
	pt3dadd(-147.14, 240.64, 25.8, 1.24)
	pt3dadd(-147.88, 243.33, 25.8, 1.24)
	pt3dadd(-150.58, 249.24, 25.8, 1.24)
	pt3dadd(-154.74, 255.03, 27.16, 1.24)
	pt3dadd(-159.82, 263.93, 29.94, 1.24)
	pt3dadd(-165.02, 273.15, 29.94, 1.24)
	pt3dadd(-165.68, 280.07, 29.94, 1.24)
	pt3dadd(-169, 283.14, 29.94, 1.24)
	pt3dadd(-169.88, 286.97, 32.04, 1.24)
	pt3dadd(-172.65, 290.97, 32.04, 1.24)
	pt3dadd(-174.57, 293.93, 34.55, 1.24)
	pt3dadd(-176.64, 299.01, 34.55, 1.24)
	pt3dadd(-178.03, 304.21, 36.78, 1.24)
	pt3dadd(-178.14, 304.24, 36.78, 1.24)
  }
  dend[34] {pt3dclear()
	pt3dadd(-64.47, 51.13, 19.92, 1.66)
	pt3dadd(-65.56, 53.94, 23.94, 1.24)
	pt3dadd(-73.95, 58.81, 23.94, 1.24)
	pt3dadd(-76.31, 63.4, 25.7, 1.24)
	pt3dadd(-79.6, 65.92, 27.64, 1.24)
	pt3dadd(-81.64, 69.35, 27.64, 1.24)
	pt3dadd(-82.76, 70.68, 29.56, 1.24)
	pt3dadd(-82.74, 72.72, 29.56, 1.24)
	pt3dadd(-85.11, 74.09, 29.56, 1.24)
	pt3dadd(-87.04, 77.56, 33.12, 1.24)
	pt3dadd(-87.14, 80.12, 33.12, 1.24)
	pt3dadd(-88.23, 82.32, 33.12, 1.24)
	pt3dadd(-88.34, 84.94, 35.18, 1.24)
	pt3dadd(-89.7, 86.7, 35.18, 1.24)
	pt3dadd(-92.38, 92.23, 38.34, 1.24)
	pt3dadd(-94.1, 101.76, 42.68, 1.24)
	pt3dadd(-90.55, 128.53, 42.68, 1.24)
	pt3dadd(-89.73, 136.1, 42.68, 1.24)
	pt3dadd(-91.57, 147.21, 44.36, 1.24)
	pt3dadd(-91.27, 167.1, 44.36, 1.24)
	pt3dadd(-91.07, 181.94, 46.25, 1.24)
  }
  dend[35] {pt3dclear()
	pt3dadd(-91.07, 181.94, 46.25, 1.24)
	pt3dadd(-90.6, 186.81, 47.86, 1.24)
	pt3dadd(-91.28, 195.32, 47.86, 1.24)
	pt3dadd(-93.24, 201.45, 47.86, 1.24)
	pt3dadd(-92.19, 208.48, 50.97, 1.24)
	pt3dadd(-93.9, 212.37, 50.97, 1.24)
	pt3dadd(-96.04, 218.86, 53.7, 1.24)
	pt3dadd(-95.06, 226.5, 53.7, 1.24)
	pt3dadd(-95.34, 231.61, 55.68, 1.24)
	pt3dadd(-95, 235.78, 55.68, 1.24)
	pt3dadd(-96.5, 241.63, 57.3, 1.24)
	pt3dadd(-97.9, 247.85, 60.4, 1.24)
	pt3dadd(-96.79, 251.77, 60.4, 1.24)
	pt3dadd(-99.31, 256.6, 60.4, 1.24)
	pt3dadd(-101.17, 261.81, 63.05, 1.24)
	pt3dadd(-104.67, 266.81, 66.58, 1.24)
	pt3dadd(-106.57, 273.46, 66.58, 1.24)
	pt3dadd(-108.17, 275.92, 66.58, 1.24)
	pt3dadd(-110.58, 283.9, 69.26, 1.24)
	pt3dadd(-114, 291.29, 70.23, 1.24)
	pt3dadd(-116.78, 296.62, 70.23, 0.83)
	pt3dadd(-118.5, 301.81, 70.23, 0.83)
	pt3dadd(-121.53, 306.19, 70.23, 0.83)
	pt3dadd(-123.37, 308.52, 70.23, 0.83)
  }
  dend[36] {pt3dclear()
	pt3dadd(-91.07, 181.94, 46.25, 1.24)
	pt3dadd(-91.68, 185.15, 46.25, 1.24)
	pt3dadd(-95.54, 194.96, 46.25, 1.24)
	pt3dadd(-100.97, 206.62, 46.25, 1.24)
	pt3dadd(-105.75, 222.37, 46.25, 1.24)
	pt3dadd(-109.27, 231.34, 46.25, 1.24)
	pt3dadd(-110.08, 236.62, 46.25, 1.24)
	pt3dadd(-112.85, 241.39, 46.25, 1.24)
	pt3dadd(-113.41, 246.61, 46.25, 1.24)
	pt3dadd(-121.14, 259.68, 50.04, 1.24)
	pt3dadd(-123.85, 269.16, 50.04, 1.24)
	pt3dadd(-124.68, 275.45, 51.94, 1.24)
  }
}
proc shape3d_5() {
  dend[36] {  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
  shape3d_4()
  shape3d_5()
}

proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() {
	
  
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(3,6,7,8,9,10,11,12,13,14,15,16,18,19,20,24,25,26,27,28,29,31,32,33,34,35,36) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.83893,0.63661,    0.5,    0.5,0.60548,0.97113,    0.5,    0.5,    0.5,    0.5,    0.5,    0.5,0.87981,    0.5,    0.5,0.53679,0.54396,0.77564,0.84789,    0.5,    0.5,0.65472,    0.5,    0.5,0.71687,    0.5,    0.5) 
for i= 0 , 26 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0  
pre_list.append(syn) // 
} 
 
 // //***** MC syn   
 
dend[0] syn = new Exp2Syn(0.38909) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 27 
 
 // //***** HIPP   
 
dend[3] syn = new Exp2Syn(0.83893) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 28 
dend[6] syn = new Exp2Syn(0.63661) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 29 
dend[7] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 30 
dend[8] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 31 
dend[9] syn = new Exp2Syn(0.60548) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 32 
dend[10] syn = new Exp2Syn(0.97113) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 33 
dend[11] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 34 
dend[12] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 35 
dend[13] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 36 
dend[14] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 37 
dend[15] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 38 
dend[16] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 39 
dend[18] syn = new Exp2Syn(0.87981) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 40 
dend[19] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 41 
dend[20] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 42 
dend[24] syn = new Exp2Syn(0.53679) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 43 
dend[25] syn = new Exp2Syn(0.54396) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 44 
dend[26] syn = new Exp2Syn(0.77564) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 45 
dend[27] syn = new Exp2Syn(0.84789) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 46 
dend[28] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 47 
dend[29] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 48 
dend[31] syn = new Exp2Syn(0.65472) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 49 
dend[32] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 50 
dend[33] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 51 
dend[34] syn = new Exp2Syn(0.71687) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 52 
dend[35] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 53 
dend[36] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 54 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 55 
 
 // //***** Sprout   
 
dend[0] syn = new Exp2Syn(0.38909) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 56 

}
	func is_art() { return 0 }

	endtemplate GranuleCell69
//************************************************************************************************************