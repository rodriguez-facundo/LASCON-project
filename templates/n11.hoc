/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell11

// Original name on neuroMorpho.org n11-cont02-sl2.CNG.swc

ndend1=9

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 8 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()


	pdend  = new SectionList()
		for i=1, 2  dend[i] pdend.append()



	mdend  = new SectionList()
		for i=3, 4  dend[i] mdend.append()
		

	ddend  = new SectionList()
		for i=5, 8 dend[i] ddend.append()

}
proc gctemp() {

// 	soma {nseg=1 L=16.329 diam=11.165} // changed L & diam
// 		
// 	dend [0] {nseg=1  L=20.05632 diam=2.6}
// 	dend [1] {nseg=1  L=80.78021 diam=1.6478}
// 	dend [2] {nseg=1  L=10.61434 diam=1.1833}
// 	dend [3] {nseg=1  L=25.82767 diam=1.0346}
// 	dend [4] {nseg=1  L=30.89202 diam=0.7664}
// 	dend [5] {nseg=1  L=43.53635 diam=0.9072}
// 	dend [6] {nseg=1  L=37.46003 diam=0.9215}
// 	dend [7] {nseg=1  L=85.47885 diam=0.5756}
// 	dend [8] {nseg=1  L=121.54242 diam=0.6968}
// 	dend [9] {nseg=1  L=78.91646 diam=0.6705}
// 	dend [10] {nseg=1 L=97.50034 diam=0.7203}
// 	dend [11] {nseg=1 L=19.96318 diam=0.8309}
// 	dend [12] {nseg=1 L=125.23049 diam=0.5746}
// 	dend [13] {nseg=1 L=117.23326 diam=0.6059}
// 	dend [14] {nseg=1 L=31.96199 diam=0.6411}
// 	dend [15] {nseg=1 L=45.48879 diam=0.6389}
// 	dend [16] {nseg=1 L=22.50602 diam=0.5591}
// 	dend [17] {nseg=1 L=37.40208 diam=0.6970}
// 	dend [18] {nseg=1 L=20.88699 diam=0.6050}
// 	dend [19] {nseg=1 L=10.10732 diam=0.5985}
	
// 	for i = 1, 20	dend [i] {nseg=1 L=150 diam=3}

// 	gcdend2 [0] {nseg=1 L=50 diam=3}
// 	for i = 1, 3	gcdend2 [i] {nseg=1 L=150 diam=3}	 	

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	connect dend[0](0), soma(1)
// 	connect gcdend2[0](0), soma(1)
// 	for i=1,3 {
// 	connect dend[i](0), dend[i-1](1)
// 	}
// 	for i=1,3 {
// 	connect gcdend2[i](0), gcdend2[i-1](1)
// 	}
connect dend(0), soma(1)
  for i = 1, 2 connect dend[i](0), dend(1)
  for i = 3, 4 connect dend[i](0), dend[1](1)
  for i = 5, 6 connect dend[i](0), dend[3](1)
  for i = 7, 8 connect dend[i](0), dend[5](1)
basic_shape()
	    

// 	  connect axon(1), soma(0)


	forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70

		cao_ccanl=2 }  // make catau slower70e-3 	cao=2 cai=50.e-6 

// current injection
//for i=0,0 {
//stimdel[i]=500
//stimdur[i]=200
//stimamp[i]=0.2

//soma stim[i] = new IClamp(0.5)
//stim.del[i]=stimdel[i]
//stim.dur[i]=stimdur[i]
//stim.amp[i]=stimamp[i]
//}

}


proc shape3d_1() {

//   axon {pt3dclear()
// 	pt3dadd(0.505, -38, 0.01, 0.2)
// 	pt3dadd(0.505, -18, 0.01, 10)
//   }

  soma {pt3dclear()
	pt3dadd(0.505, -18, 0.01, 10)
	pt3dadd(0.505, 0.3422, 0, 10.47)
  }
  dend {pt3dclear()
	pt3dadd(0.505, 0.3422, 0, 10.47)
	pt3dadd(-0.2, -5.41, 0.02, 2.5)
	pt3dadd(0.08, -7.15, 0.02, 2.23)
	pt3dadd(0.82, -8.35, 0.31, 2.5)
	pt3dadd(1.1, -9.82, 0.4, 1.76)
	pt3dadd(1.56, -10.83, 0.89, 1.58)
	pt3dadd(2.21, -12.03, 0.89, 1.21)
	pt3dadd(2.86, -13.59, 1.41, 1.21)
	pt3dadd(2.21, -15.24, 1.41, 1.39)
	pt3dadd(1.56, -16.71, 0.95, 1.39)
	pt3dadd(1.28, -17.82, 0.95, 1.3)
	pt3dadd(0.63, -18.83, 0.95, 1.39)
	pt3dadd(-0.11, -20.39, 1.92, 1.48)
  }
  dend[1] {pt3dclear()
	pt3dadd(-0.11, -20.39, 1.92, 1.48)
	pt3dadd(0.28, -21.99, 1.92, 1.58)
	pt3dadd(1.2, -23.92, 1.23, 1.39)
	pt3dadd(1.76, -25.21, 0.91, 1.39)
	pt3dadd(1.2, -26.59, 0.03, 1.11)
	pt3dadd(1.39, -28.06, 0.03, 1.02)
	pt3dadd(1.85, -29.16, -0.17, 1.02)
	pt3dadd(1.2, -30.27, -0.17, 1.02)
	pt3dadd(0.09, -31.46, 0.17, 1.48)
	pt3dadd(-0.74, -32.29, 0.17, 1.95)
	pt3dadd(-0.84, -33.85, 0.17, 1.48)
	pt3dadd(-1.12, -35.32, -0.3, 1.48)
	pt3dadd(-1.49, -36.52, -0.3, 1.39)
	pt3dadd(-1.76, -37.53, -0.02, 1.39)
	pt3dadd(-2.14, -38.45, -0.02, 1.21)
	pt3dadd(-2.32, -39.64, -0.26, 0.83)
	pt3dadd(-1.67, -40.93, 0.8, 1.02)
	pt3dadd(-1.67, -42.12, -0.03, 1.21)
	pt3dadd(-1.34, -43.32, 0.22, 1.39)
	pt3dadd(-0.97, -44.51, 0.22, 1.48)
  }
  dend[2] {pt3dclear()
	pt3dadd(-0.11, -20.39, 1.92, 1.48)
	pt3dadd(-1.22, -22.23, 1.88, 0.56)
	pt3dadd(-1.41, -23.88, 2.46, 0.56)
	pt3dadd(-2.78, -24.2, 3.06, 0.56)
	pt3dadd(-2.78, -25.85, 3.75, 0.56)
	pt3dadd(-2.78, -27.33, 3.39, 0.74)
	pt3dadd(-2.51, -29.26, 3.7, 0.56)
	pt3dadd(-2.51, -30.73, 4.71, 0.56)
	pt3dadd(-1.12, -31.37, 5.33, 0.56)
	pt3dadd(-0.56, -32.2, 5.33, 0.56)
	pt3dadd(-1.3, -33.76, 5.33, 0.56)
	pt3dadd(-2.97, -35.51, 5.06, 0.56)
	pt3dadd(-3.25, -36.42, 5.83, 0.56)
	pt3dadd(-2.51, -37.71, 5.87, 0.56)
	pt3dadd(-1.21, -38.08, 5.8, 0.56)
	pt3dadd(0.37, -39.55, 5.8, 0.56)
  }
  dend[3] {pt3dclear()
	pt3dadd(-0.97, -44.51, 0.22, 1.48)
	pt3dadd(-2.01, -46.37, 0.38, 0.46)
	pt3dadd(-2.93, -47.57, 0.57, 0.65)
	pt3dadd(-2.84, -48.39, 0.95, 0.56)
	pt3dadd(-1.54, -49.5, 0.93, 0.56)
	pt3dadd(-1.08, -50.87, 1.21, 0.56)
	pt3dadd(-1.54, -52.53, 0.85, 0.56)
	pt3dadd(-2.19, -53.72, 0.85, 0.65)
	pt3dadd(-2.66, -55.19, 1.33, 0.65)
	pt3dadd(-3.12, -56.3, 1.03, 0.65)
	pt3dadd(-3.31, -57.03, 1.03, 0.83)
	pt3dadd(-3.4, -58.04, 1.03, 0.74)
	pt3dadd(-3.03, -58.87, 1.03, 0.74)
	pt3dadd(-3.12, -59.61, 0.93, 0.93)
	pt3dadd(-3.31, -60.8, 0.93, 1.11)
	pt3dadd(-3.49, -61.9, 1.76, 0.74)
	pt3dadd(-3.49, -62.92, 1.76, 0.74)
	pt3dadd(-3.3, -64.21, 1.57, 0.65)
	pt3dadd(-3.3, -65.77, 1.94, 0.56)
	pt3dadd(-2.84, -67.98, 2.17, 0.56)
	pt3dadd(-3.12, -69.91, 2.46, 0.56)
	pt3dadd(-3.21, -70.74, 2.45, 0.65)
	pt3dadd(-3.21, -71.84, 2.59, 0.65)
	pt3dadd(-3.21, -73.22, 2.34, 0.65)
	pt3dadd(-3.02, -74.14, 2.63, 0.74)
	pt3dadd(-3.02, -75.52, 2.97, 1.21)
	pt3dadd(-2.84, -76.99, 2.97, 1.21)
	pt3dadd(-2.93, -78.46, 2.31, 1.02)
	pt3dadd(-3.12, -79.47, 2.72, 0.93)
	pt3dadd(-3.39, -80.94, 2.33, 0.93)
	pt3dadd(-3.77, -82.58, 2.33, 0.93)
	pt3dadd(-4.24, -83.59, 2.39, 0.74)
	pt3dadd(-4.98, -84.6, 2.5, 0.74)
	pt3dadd(-5.44, -85.89, 2.5, 0.65)
	pt3dadd(-4.88, -87.36, 2.34, 0.65)
	pt3dadd(-4.79, -88.65, 2.15, 0.65)
	pt3dadd(-4.61, -90.02, 2.15, 0.56)
	pt3dadd(-5.16, -90.48, 2.84, 0.65)
	pt3dadd(-6.28, -91.95, 2.84, 0.56)
	pt3dadd(-7.2, -93.33, 2.84, 0.56)
	pt3dadd(-7.67, -94.8, 3.45, 0.83)
	pt3dadd(-7.76, -96.37, 3.81, 0.83)
	pt3dadd(-8.04, -97.56, 3.73, 0.83)
	pt3dadd(-8.32, -99.03, 3.73, 0.74)
	pt3dadd(-8.29, -100.2, 3.71, 0.74)
	pt3dadd(-8.66, -101.7, 3.71, 0.74)
	pt3dadd(-9.4, -103.3, 3.71, 0.83)
	pt3dadd(-9.77, -104.3, 3.49, 0.74)
	pt3dadd(-9.96, -105.4, 4.1, 1.02)
	pt3dadd(-10.42, -106.4, 4.1, 1.02)
	pt3dadd(-10.79, -107.6, 4.7, 0.74)
	pt3dadd(-11.44, -108.9, 5.13, 0.74)
	pt3dadd(-11.72, -110.3, 4.9, 0.74)
	pt3dadd(-12, -111.6, 5.03, 1.02)
	pt3dadd(-12.28, -112.7, 5.03, 1.39)
	pt3dadd(-12.29, -113.2, 4.96, 1.3)
  }
  dend[4] {pt3dclear()
	pt3dadd(-0.97, -44.51, 0.22, 1.48)
	pt3dadd(-0.23, -45.89, -0.1, 0.74)
	pt3dadd(1.16, -46.35, 0.84, 0.74)
	pt3dadd(1.35, -47.91, 2.45, 0.56)
	pt3dadd(1.25, -49.75, 2.79, 0.56)
	pt3dadd(1.35, -51.13, 3.39, 0.56)
	pt3dadd(2.92, -52.23, 3.52, 0.56)
	pt3dadd(3.67, -53.89, 3.76, 0.56)
	pt3dadd(3.29, -55.54, 3.58, 0.56)
	pt3dadd(3.29, -56.83, 2.01, 0.65)
	pt3dadd(3.67, -58.58, 2.38, 0.65)
	pt3dadd(4.31, -60.05, 2.38, 0.65)
	pt3dadd(4.93, -61.68, 3.43, 0.56)
	pt3dadd(5.95, -63.15, 3.82, 0.56)
	pt3dadd(7.07, -63.98, 4.77, 0.56)
	pt3dadd(7.53, -64.34, 5.28, 0.56)
	pt3dadd(7.07, -65.63, 5.28, 0.56)
	pt3dadd(6.33, -66.64, 5.35, 1.02)
	pt3dadd(5.49, -67.75, 6.22, 1.21)
	pt3dadd(4.84, -68.48, 6.22, 0.93)
	pt3dadd(4.28, -69.49, 6.04, 0.56)
	pt3dadd(3.36, -70.13, 6.87, 0.56)
	pt3dadd(3.54, -71.51, 6.96, 0.65)
	pt3dadd(4.19, -73.81, 7.53, 0.65)
	pt3dadd(5.21, -75.37, 7.53, 0.65)
	pt3dadd(5.49, -76.48, 7.53, 0.56)
	pt3dadd(5.21, -78.13, 7.84, 0.56)
	pt3dadd(4.9, -79.6, 7.84, 0.56)
	pt3dadd(4.44, -80.89, 7.52, 0.56)
  }
  dend[5] {pt3dclear()
	pt3dadd(-12.29, -113.2, 4.96, 1.3)
	pt3dadd(-13.15, -114.4, 4.24, 0.56)
	pt3dadd(-12.04, -115.4, 4.24, 0.56)
	pt3dadd(-12.96, -116.6, 2.81, 0.56)
	pt3dadd(-12.59, -118.2, 1.74, 0.56)
	pt3dadd(-12.96, -119.5, 0.86, 0.56)
	pt3dadd(-13.24, -122, 0.86, 0.56)
	pt3dadd(-12.69, -124, 0.7, 0.56)
	pt3dadd(-12.13, -126.9, 0.56, 0.56)
	pt3dadd(-13.8, -128.8, 0.75, 0.56)
	pt3dadd(-13.8, -130.1, 0.75, 0.56)
	pt3dadd(-14.45, -131.7, 0.75, 0.56)
	pt3dadd(-15.78, -133, 0.52, 0.56)
	pt3dadd(-16.8, -134, 0.52, 0.56)
	pt3dadd(-16.98, -136.1, 1.38, 0.56)
	pt3dadd(-17.73, -138.2, 0.66, 0.56)
	pt3dadd(-18.28, -140.6, -0.03, 0.56)
	pt3dadd(-18.84, -142.1, 0.28, 0.56)
	pt3dadd(-18.93, -143.5, 0.71, 0.56)
	pt3dadd(-18.75, -146.3, 1.05, 0.56)
	pt3dadd(-18.84, -147.3, -0.33, 0.56)
  }
  dend[6] {pt3dclear()
	pt3dadd(-12.29, -113.2, 4.96, 1.3)
	pt3dadd(-12.94, -114.9, 5.78, 0.56)
	pt3dadd(-13.86, -115.4, 5.77, 0.56)
	pt3dadd(-14.42, -117.5, 5.65, 0.56)
	pt3dadd(-15.44, -119.2, 4.38, 0.56)
	pt3dadd(-16.46, -121, 4.38, 0.56)
	pt3dadd(-17.3, -124.2, 4.84, 0.56)
	pt3dadd(-17.67, -127, 4.84, 0.56)
	pt3dadd(-18.32, -129.3, 4.9, 0.56)
	pt3dadd(-19.8, -130.4, 4.9, 0.56)
	pt3dadd(-20.63, -132.3, 4.9, 0.56)
	pt3dadd(-21.61, -134.7, 4.29, 0.56)
	pt3dadd(-22.07, -137.4, 4.09, 0.56)
	pt3dadd(-22.53, -139.2, 4.1, 0.56)
	pt3dadd(-23.18, -141, 4.13, 0.56)
	pt3dadd(-22.44, -141.8, 4.13, 0.56)
	pt3dadd(-23.28, -143.2, 4.03, 0.56)
	pt3dadd(-23.37, -144.4, 3.44, 0.56)
	pt3dadd(-23.28, -145.2, 3.44, 0.83)
	pt3dadd(-23.28, -146, 3.44, 0.83)
	pt3dadd(-23.28, -147.2, 2.89, 0.56)
	pt3dadd(-24.11, -148.2, 2.79, 0.56)
	pt3dadd(-24.95, -149.4, 2, 0.56)
	pt3dadd(-25.97, -150.8, 2.07, 0.56)
	pt3dadd(-26.72, -152.6, 1.67, 0.56)
	pt3dadd(-27.56, -154, 1.67, 0.56)
	pt3dadd(-28.76, -155.1, 1.23, 0.56)
	pt3dadd(-29.41, -156.4, 0.35, 0.56)
	pt3dadd(-31.54, -157.3, -0.3, 0.56)
	pt3dadd(-33.03, -158.3, -1.06, 0.56)
	pt3dadd(-33.12, -160.1, -0.17, 0.56)
	pt3dadd(-33.12, -161.3, -0.03, 0.56)
	pt3dadd(-33.4, -163.6, 0.1, 0.56)
	pt3dadd(-33.86, -165.1, -0.56, 0.56)
  }
  dend[7] {pt3dclear()
	pt3dadd(-18.84, -147.3, -0.33, 0.56)
	pt3dadd(-18.17, -148.4, 0.67, 0.56)
	pt3dadd(-17.99, -149.3, 0.3, 0.74)
	pt3dadd(-17.43, -150.3, -0.57, 0.56)
	pt3dadd(-17.06, -151.5, -0.57, 0.56)
	pt3dadd(-15.95, -153.4, -0.71, 0.56)
	pt3dadd(-16.13, -155.3, -1.44, 0.56)
	pt3dadd(-15.39, -157.4, -1.58, 0.56)
	pt3dadd(-15.11, -158.9, -1.55, 0.56)
  }
}
proc shape3d_2() {
  dend[7] {	pt3dadd(-14.65, -160.9, -2.07, 0.56)
	pt3dadd(-14.56, -162.5, -2.07, 0.56)
	pt3dadd(-15.85, -163.9, -2.77, 0.56)
	pt3dadd(-16.13, -165.4, -2.11, 0.56)
	pt3dadd(-16.39, -166.6, -3.09, 0.56)
	pt3dadd(-17.5, -168.4, -2.25, 0.56)
	pt3dadd(-18.15, -169.7, -1.93, 0.56)
	pt3dadd(-19.35, -170.8, -2.06, 0.56)
	pt3dadd(-20, -171.8, -1.26, 0.56)
  }
  dend[8] {pt3dclear()
	pt3dadd(-18.84, -147.3, -0.33, 0.56)
	pt3dadd(-18.93, -149, -0.23, 0.56)
	pt3dadd(-18.74, -150.9, -0.87, 0.56)
	pt3dadd(-18.65, -153.2, -0.23, 0.56)
	pt3dadd(-19.21, -155.6, -0.63, 0.56)
	pt3dadd(-19.67, -157.5, -0.63, 0.56)
	pt3dadd(-19.76, -159.5, -0.87, 0.56)
	pt3dadd(-19.86, -161.2, -0.36, 0.56)
	pt3dadd(-19.86, -162.3, 0.35, 0.56)
	pt3dadd(-19.86, -163.2, 0.35, 0.56)
	pt3dadd(-20.69, -164.4, 0.35, 0.56)
	pt3dadd(-20.78, -165.7, 0.8, 0.74)
	pt3dadd(-20.88, -167, 0.8, 0.56)
	pt3dadd(-21.25, -168.2, 1.34, 0.56)
	pt3dadd(-21.75, -169.4, 1.05, 0.56)
	pt3dadd(-21.29, -170.8, 1.05, 0.56)
	pt3dadd(-21.38, -172.8, 0.78, 0.56)
	pt3dadd(-21.84, -174.3, 0.78, 0.56)
	pt3dadd(-21.29, -176.2, 0.59, 0.56)
	pt3dadd(-21.01, -177.8, 0.77, 0.56)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
}


		
	proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
// 	objref DistalSynapses 
// 	objref DistalSynapsePositions 
	objref ProximalSynapses 
	objref ProximalSynapsePositions 
	proc synapse() { 
  
 // //***** PP syn   
 
 
 // //***** MC syn   
 
ProximalSynapses = new Vector(0,0) 
ProximalSynapses .append(0 , 1 , 2 , 3 , 4) 
ProximalSynapsePositions = new Vector(0,0) 
ProximalSynapsePositions .append(0.5   ,      0.5     ,    0.5 ,  0.0041212,   0.0067825) 
for i= 0 , 4 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // #  
} 
 
 // //***** HIPP   
 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 0 
 
 // //***** Sprout   
 
for i= 0 , 4 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 0 
} 

}
	func is_art() { return 0 }

	endtemplate GranuleCell11
//************************************************************************************************************