/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell54

// Original name on neuroMorpho.org 524892a.CNG.hoc


ndend1=29

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 28 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()


	pdend  = new SectionList()
		for i=1, 3  dend[i] pdend.append()
		dend[10] pdend.append()
		dend[15] pdend.append()
		dend[19] pdend.append()
		dend[21] pdend.append()
		
	mdend  = new SectionList()
		dend[7] mdend.append()
		dend[12] mdend.append()
		dend[16] mdend.append()
		dend[26] mdend.append()

	ddend  = new SectionList()
		
		for i=4, 6 dend[i] ddend.append()
		for i=8, 9 dend[i] ddend.append()
		dend[11] ddend.append()
		for i=13, 14 dend[i] ddend.append()
		for i=17, 18 dend[i] ddend.append()
		dend[20] ddend.append()
		for i=22, 25 dend[i] ddend.append()
		for i=27, 28 dend[i] ddend.append()
		  
		  
}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }


  connect dend(0), soma(1)
  for i = 1, 5 connect dend[i](0), dend[i-1](1)
  connect dend[6](0), dend[4](1)
  connect dend[7](0), dend[3](1)
  for i = 8, 9 connect dend[i](0), dend[7](1)
  connect dend[10](0), dend[2](1)
  for i = 11, 12 connect dend[i](0), dend[10](1)
  for i = 13, 14 connect dend[i](0), dend[12](1)
  connect dend[15](0), dend[1](1)
  for i = 16, 17 connect dend[i](0), dend[i-1](1)
  connect dend[18](0), dend[16](1)
  connect dend[19](0), dend[15](1)
  for i = 20, 21 connect dend[i](0), dend[19](1)
  for i = 22, 23 connect dend[i](0), dend[21](1)
  for i = 24, 25 connect dend[i](0), dend[23](1)
  connect dend[26](0), dend(1)
  for i = 27, 28 connect dend[i](0), dend[26](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 3.50292)
	pt3dadd(2.91, 11.06, 0, 4.51)
  }
  dend {pt3dclear()
	pt3dadd(2.91, 11.06, 0, 3.6)
	pt3dadd(3.97, 15.34, 0.65, 3.6)
	pt3dadd(4.5, 18.72, 0.65, 2.25)
	pt3dadd(4.25, 21.29, 0.65, 2.25)
  }
  dend[1] {pt3dclear()
	pt3dadd(4.25, 21.29, 0.65, 2.25)
	pt3dadd(5.04, 24.22, 0.65, 2.25)
	pt3dadd(5.84, 26.92, 0.65, 2.25)
	pt3dadd(6.9, 28.95, 2.36, 2.25)
  }
  dend[2] {pt3dclear()
	pt3dadd(6.9, 28.95, 2.36, 2.25)
	pt3dadd(9.01, 31.42, 0.96, 1.8)
	pt3dadd(11.12, 34.78, 3.32, 1.8)
	pt3dadd(13.77, 38.83, 3.17, 1.8)
	pt3dadd(17.21, 45.14, 4.66, 1.8)
	pt3dadd(18.53, 48.07, 4.66, 1.8)
  }
  dend[3] {pt3dclear()
	pt3dadd(18.53, 48.07, 4.66, 1.8)
	pt3dadd(20.92, 51.22, 5.1, 1.8)
	pt3dadd(24.64, 55.71, 5.1, 1.8)
	pt3dadd(26.23, 57.73, 6.57, 1.8)
	pt3dadd(29.14, 62.24, 6.57, 1.8)
	pt3dadd(31.79, 66.52, 8.74, 1.8)
	pt3dadd(33.38, 70.12, 8.78, 1.8)
	pt3dadd(36.25, 75.61, 11.77, 1.8)
	pt3dadd(38.63, 80.79, 12.03, 1.8)
	pt3dadd(41.01, 85.74, 13.81, 1.8)
	pt3dadd(43.4, 91.83, 13.81, 1.8)
	pt3dadd(44.99, 99.01, 16.72, 1.8)
  }
  dend[4] {pt3dclear()
	pt3dadd(44.99, 99.01, 16.72, 1.8)
	pt3dadd(50.02, 106.44, 18.55, 1.8)
	pt3dadd(52.93, 112.75, 20.8, 1.8)
	pt3dadd(56.97, 120.68, 23.07, 1.8)
	pt3dadd(63.06, 129.7, 25.32, 1.8)
	pt3dadd(66.5, 135.55, 27.38, 1.8)
	pt3dadd(70.51, 143.43, 31.35, 1.8)
	pt3dadd(75.01, 149.52, 34.02, 1.8)
	pt3dadd(78.98, 153.57, 34.63, 1.8)
	pt3dadd(82.16, 156.72, 36.5, 1.8)
	pt3dadd(86.37, 161.08, 38.25, 1.8)
	pt3dadd(91.67, 166.49, 38.25, 1.8)
	pt3dadd(96.7, 170.99, 38.31, 1.8)
	pt3dadd(100.41, 175.95, 40.5, 1.8)
	pt3dadd(105.9, 182.76, 42.57, 1.8)
	pt3dadd(109.6, 187.26, 43.17, 1.8)
	pt3dadd(114.63, 192.7, 45.36, 1.8)
	pt3dadd(118.87, 195.85, 47.45, 1.8)
	pt3dadd(121.58, 198.5, 50.64, 1.8)
	pt3dadd(125.03, 201.88, 53.31, 1.8)
	pt3dadd(128.47, 206.84, 53.31, 1.8)
	pt3dadd(132.7, 211.34, 55.84, 1.8)
	pt3dadd(134.82, 214.5, 58.53, 1.8)
	pt3dadd(137.12, 218.03, 60.73, 1.8)
	pt3dadd(138.44, 220.28, 62.82, 1.8)
	pt3dadd(139.77, 222.31, 64.98, 1.8)
	pt3dadd(141.09, 223.91, 65.48, 1.8)
	pt3dadd(143.21, 225.71, 69.16, 1.8)
	pt3dadd(145.33, 227.74, 71.15, 1.8)
	pt3dadd(147.18, 230.22, 72.58, 1.8)
	pt3dadd(148.77, 235.63, 74.51, 1.8)
	pt3dadd(151.65, 240.08, 76.59, 1.8)
	pt3dadd(153.5, 243.01, 76.59, 1.8)
	pt3dadd(156.41, 245.04, 76.64, 1.8)
	pt3dadd(158.8, 246.16, 74.78, 1.8)
	pt3dadd(161.97, 249.77, 74.01, 1.8)
	pt3dadd(164.89, 253.15, 74.82, 1.8)
	pt3dadd(167.27, 256.98, 73.59, 1.8)
	pt3dadd(168.46, 260.6, 79.54, 1.8)
  }
  dend[5] {pt3dclear()
	pt3dadd(168.46, 260.6, 79.54, 1.8)
	pt3dadd(172.43, 265.11, 82.53, 1.8)
	pt3dadd(177.2, 270.07, 84.02, 1.8)
	pt3dadd(181.17, 275.02, 84.02, 1.8)
	pt3dadd(183.55, 279.3, 84.61, 1.8)
	pt3dadd(184.13, 283.43, 87.05, 1.8)
	pt3dadd(185.98, 287.26, 86.68, 1.8)
	pt3dadd(188.37, 291.31, 86.26, 1.8)
	pt3dadd(189.95, 293.57, 89.58, 1.8)
	pt3dadd(192.34, 297.87, 92.67, 1.8)
	pt3dadd(194.78, 301.38, 95.17, 1.8)
	pt3dadd(196.11, 303.63, 95.17, 1.8)
	pt3dadd(198.23, 308.59, 94.47, 1.8)
	pt3dadd(200.08, 312.87, 94.47, 1.8)
	pt3dadd(201.67, 316.7, 96.3, 1.8)
	pt3dadd(203.45, 319.75, 95.98, 1.8)
	pt3dadd(206.37, 323.81, 97.89, 1.8)
	pt3dadd(209.28, 327.64, 100.46, 1.8)
	pt3dadd(212.99, 331.69, 100.46, 1.8)
	pt3dadd(215.37, 335.97, 103.32, 1.8)
	pt3dadd(217.75, 339.8, 105.23, 1.8)
	pt3dadd(219, 341.93, 108, 1.8)
	pt3dadd(220.59, 343.28, 107.19, 1.8)
	pt3dadd(222.18, 343.51, 107.19, 1.8)
	pt3dadd(223.77, 343.73, 109.64, 1.8)
	pt3dadd(224.83, 343.51, 109.97, 1.8)
	pt3dadd(225.09, 343.51, 109.97, 1.8)
  }
  dend[6] {pt3dclear()
	pt3dadd(168.46, 260.6, 79.54, 1.8)
	pt3dadd(168.72, 266.01, 80.46, 1.8)
	pt3dadd(168.46, 268.71, 82.97, 1.8)
	pt3dadd(166.87, 270.74, 83.4, 1.8)
	pt3dadd(166.08, 273.22, 85.4, 1.8)
	pt3dadd(166.34, 275.47, 88.1, 1.8)
	pt3dadd(166.07, 279.18, 87.36, 1.8)
	pt3dadd(165.28, 284.36, 80.9, 1.8)
	pt3dadd(164.22, 286.39, 80.9, 1.8)
	pt3dadd(161.83, 288.64, 80.9, 1.8)
	pt3dadd(159.19, 290.44, 80.9, 1.8)
	pt3dadd(156.8, 294.27, 80.9, 1.8)
	pt3dadd(154.69, 297.75, 80.02, 1.8)
  }
  dend[7] {pt3dclear()
	pt3dadd(44.99, 99.01, 16.72, 1.8)
	pt3dadd(44.87, 107.71, 16.62, 1.8)
	pt3dadd(44.87, 116.27, 15.1, 1.8)
	pt3dadd(44.34, 122.48, 18.42, 1.8)
	pt3dadd(44.61, 130.59, 19.8, 1.8)
	pt3dadd(44.61, 136.9, 21.46, 1.8)
	pt3dadd(46.52, 145.53, 22.83, 1.8)
	pt3dadd(47.32, 151.62, 22.95, 1.8)
	pt3dadd(47.58, 156.12, 24.4, 1.8)
	pt3dadd(48.46, 160.68, 26.11, 1.8)
	pt3dadd(49.79, 170.14, 26.11, 1.8)
	pt3dadd(50.32, 175.77, 27.44, 1.8)
	pt3dadd(51.06, 181.86, 28.74, 1.8)
	pt3dadd(52.12, 188.39, 29.17, 1.8)
	pt3dadd(52.65, 193.35, 27.66, 1.8)
	pt3dadd(52.92, 198.3, 31.7, 1.8)
	pt3dadd(53.34, 203.76, 31.7, 1.8)
	pt3dadd(53.86, 207.59, 31.87, 1.8)
	pt3dadd(54.13, 208.94, 31.87, 1.8)
  }
  dend[8] {pt3dclear()
	pt3dadd(54.13, 208.94, 31.87, 1.8)
	pt3dadd(55.45, 213.89, 31.87, 1.8)
	pt3dadd(56.51, 218.62, 32.02, 1.8)
	pt3dadd(57, 224.21, 30.35, 1.8)
	pt3dadd(58.06, 228.26, 32.78, 1.8)
	pt3dadd(59.12, 235.04, 32.78, 1.8)
	pt3dadd(60.18, 241.13, 35.38, 1.8)
	pt3dadd(61.79, 247.43, 36.15, 1.8)
	pt3dadd(63.38, 253.74, 34.37, 1.8)
	pt3dadd(64.71, 259.15, 35.78, 1.8)
	pt3dadd(64.97, 264.1, 35.78, 1.8)
	pt3dadd(65.78, 274.86, 35.78, 1.8)
	pt3dadd(67.11, 281.4, 35.78, 1.8)
	pt3dadd(68.13, 288.56, 35.78, 1.8)
	pt3dadd(69.45, 296.89, 35.78, 1.8)
	pt3dadd(70.51, 304.1, 35.78, 1.8)
	pt3dadd(73.05, 312.93, 35.78, 1.8)
	pt3dadd(74.38, 321.95, 35.78, 1.8)
	pt3dadd(74.64, 330.28, 36.98, 1.8)
	pt3dadd(74.08, 336.18, 39.34, 1.8)
	pt3dadd(74.61, 341.14, 39.34, 1.8)
	pt3dadd(75.4, 344.74, 39.34, 1.8)
	pt3dadd(76.46, 350.82, 39.34, 1.8)
	pt3dadd(76.67, 358.18, 39.62, 1.8)
	pt3dadd(77.99, 363.82, 39.62, 1.8)
	pt3dadd(79.58, 366.29, 39.62, 1.8)
	pt3dadd(79.85, 370.35, 38.06, 1.8)
	pt3dadd(78.68, 373.28, 35.7, 1.8)
	pt3dadd(77.36, 375.98, 34.5, 1.8)
  }
  dend[9] {pt3dclear()
	pt3dadd(54.13, 208.94, 31.87, 1.8)
	pt3dadd(55.06, 219.94, 34.3, 1.8)
	pt3dadd(55.59, 225.12, 34.3, 1.8)
	pt3dadd(55.33, 230.53, 34.3, 1.8)
	pt3dadd(54.07, 237.11, 35.56, 1.8)
	pt3dadd(54.34, 242.29, 39.85, 1.8)
	pt3dadd(54.07, 247.24, 39.85, 1.8)
	pt3dadd(55.13, 254.23, 42.24, 1.8)
	pt3dadd(54.81, 263.84, 39.42, 1.8)
	pt3dadd(54.28, 268.57, 42.32, 1.8)
	pt3dadd(54.28, 273.52, 47.06, 1.8)
	pt3dadd(53.15, 276.48, 47.43, 1.8)
	pt3dadd(53.94, 280.31, 50.98, 1.8)
	pt3dadd(55.26, 284.81, 50.98, 1.8)
	pt3dadd(57.12, 292.02, 50.98, 1.8)
	pt3dadd(58.13, 301.19, 52.42, 1.8)
	pt3dadd(59.45, 306.37, 52.42, 1.8)
	pt3dadd(59.45, 308.39, 52.42, 1.8)
	pt3dadd(61.04, 313.8, 54.18, 1.8)
	pt3dadd(63.92, 319.83, 54.18, 1.8)
	pt3dadd(66.57, 325.01, 54.18, 1.8)
	pt3dadd(68.95, 329.97, 54.18, 1.8)
	pt3dadd(70.8, 334.92, 54.18, 1.8)
	pt3dadd(71.86, 339.91, 54.18, 1.8)
	pt3dadd(72.66, 345.56, 54.18, 1.8)
	pt3dadd(72.39, 349.84, 54.18, 1.8)
	pt3dadd(72.13, 354.35, 54.18, 1.8)
	pt3dadd(70.22, 358.65, 56.34, 1.8)
	pt3dadd(68.36, 365.19, 56.34, 1.8)
	pt3dadd(68.1, 366.99, 56.34, 1.8)
	pt3dadd(67.3, 369.92, 57.5, 1.8)
	pt3dadd(67.04, 371.27, 53.54, 1.8)
	pt3dadd(66.51, 372.85, 54.38, 1.8)
  }
  dend[10] {pt3dclear()
	pt3dadd(18.53, 48.07, 4.66, 1.8)
	pt3dadd(19.86, 56.63, 3.42, 1.8)
	pt3dadd(21.18, 64.51, 3.42, 1.8)
	pt3dadd(21.71, 66.77, 3.42, 1.8)
  }
  dend[11] {pt3dclear()
	pt3dadd(21.71, 66.77, 3.42, 1.8)
	pt3dadd(24.92, 71.73, 3.42, 1.8)
	pt3dadd(28.09, 77.36, 3.42, 1.8)
	pt3dadd(29.95, 83.44, 2.55, 1.8)
	pt3dadd(31.8, 88.4, 0.29, 1.8)
	pt3dadd(33.39, 94.63, 0.29, 1.8)
	pt3dadd(35.77, 101.39, 0.29, 1.8)
	pt3dadd(38.69, 107.72, -0.94, 1.8)
  }
}
proc shape3d_2() {
  dend[11] {	pt3dadd(40.66, 112.7, -0.94, 1.8)
	pt3dadd(43.04, 118.11, -0.94, 1.8)
	pt3dadd(45.69, 124.42, -3.08, 1.8)
	pt3dadd(46.75, 131.4, -0.87, 1.8)
	pt3dadd(47.86, 139.4, -0.87, 1.8)
	pt3dadd(49.45, 148.89, -0.87, 1.8)
	pt3dadd(50.51, 153.4, -0.87, 1.8)
	pt3dadd(50.87, 159.18, -0.87, 1.8)
	pt3dadd(53.25, 169.09, -1.67, 1.8)
	pt3dadd(55.37, 180.35, -1.67, 1.8)
	pt3dadd(56.2, 188.18, -1.67, 1.8)
	pt3dadd(58.05, 194.71, -1.67, 1.8)
	pt3dadd(60.96, 201.47, -4.92, 1.8)
	pt3dadd(63.32, 206.45, -6.9, 1.8)
	pt3dadd(65.44, 210.51, -8.99, 1.8)
	pt3dadd(67.03, 215.01, -10.88, 1.8)
	pt3dadd(68.35, 219.52, -12.79, 1.8)
	pt3dadd(71.26, 223.57, -12.79, 1.8)
	pt3dadd(73.26, 228.95, -15.68, 1.8)
	pt3dadd(75.37, 234.13, -19.03, 1.8)
	pt3dadd(78.02, 239.31, -21.43, 1.8)
	pt3dadd(80.14, 243.82, -23.26, 1.8)
	pt3dadd(83.05, 249.58, -25.2, 1.8)
	pt3dadd(85.17, 252.76, -25.2, 1.8)
	pt3dadd(87.02, 260.64, -27.32, 1.8)
	pt3dadd(89.14, 267.17, -29.44, 1.8)
	pt3dadd(91.59, 273.43, -30.91, 1.8)
	pt3dadd(93.97, 279.74, -32.8, 1.8)
	pt3dadd(96.88, 285.14, -34.19, 1.8)
	pt3dadd(99.53, 290.77, -34.19, 1.8)
	pt3dadd(102.52, 298.1, -36.36, 1.8)
	pt3dadd(103.84, 303.29, -36.81, 1.8)
	pt3dadd(104.1, 306.46, -36.81, 1.8)
	pt3dadd(102.78, 313.45, -38.7, 1.8)
	pt3dadd(100.88, 321.43, -41.55, 1.8)
	pt3dadd(101.15, 328.19, -40.36, 1.8)
	pt3dadd(101.94, 332.47, -39.74, 1.8)
	pt3dadd(102.2, 338.4, -41.06, 1.8)
	pt3dadd(103.53, 341.33, -37.94, 1.8)
	pt3dadd(104.59, 344.26, -39.46, 1.8)
  }
  dend[12] {pt3dclear()
	pt3dadd(21.71, 66.77, 3.42, 1.8)
	pt3dadd(19.33, 76.45, 5.54, 1.8)
	pt3dadd(17.74, 85.01, 8.54, 1.8)
	pt3dadd(16.41, 92.67, 8.73, 1.8)
	pt3dadd(15.09, 98.53, 10.38, 1.8)
	pt3dadd(13.5, 106.87, 9.86, 1.8)
	pt3dadd(11.49, 116.13, 9.86, 1.8)
	pt3dadd(9.64, 124.46, 12.34, 1.8)
	pt3dadd(8.05, 131.67, 10.98, 1.8)
	pt3dadd(5.5, 138.42, 10.98, 1.8)
	pt3dadd(3.64, 147.01, 12.75, 1.8)
	pt3dadd(1.26, 153.77, 10.85, 1.8)
	pt3dadd(0.28, 156.62, 12.02, 1.8)
	pt3dadd(-2.36, 160.67, 12.29, 1.8)
	pt3dadd(-2.1, 164.5, 12.29, 1.8)
	pt3dadd(-0.77, 168.11, 12.29, 1.8)
	pt3dadd(1.08, 174.64, 15.48, 1.8)
	pt3dadd(0.81, 180.35, 17.7, 1.8)
	pt3dadd(0.81, 189.13, 17.7, 1.8)
	pt3dadd(0.02, 197.69, 19.97, 1.8)
	pt3dadd(-1.18, 204.67, 23.38, 1.8)
	pt3dadd(-2.24, 217.51, 25.41, 1.8)
	pt3dadd(-4.64, 229.71, 28.2, 1.8)
	pt3dadd(-5.43, 238.72, 28.7, 1.8)
	pt3dadd(-5.19, 249.5, 30.45, 1.8)
	pt3dadd(-5.19, 258.96, 31.22, 1.8)
	pt3dadd(-5.26, 265.87, 33.22, 1.8)
	pt3dadd(-4.46, 270.15, 33.12, 1.8)
	pt3dadd(-4.71, 272.61, 37.43, 1.8)
	pt3dadd(-4.71, 273.96, 37.43, 1.8)
  }
  dend[13] {pt3dclear()
	pt3dadd(-4.71, 273.96, 37.43, 1.8)
	pt3dadd(-3.65, 277.34, 37.28, 1.8)
	pt3dadd(-4.18, 282.07, 35.42, 1.8)
	pt3dadd(-4.45, 286.12, 38.69, 1.8)
	pt3dadd(-3.65, 290.18, 42.26, 1.8)
	pt3dadd(-2.86, 294.23, 44.26, 1.8)
	pt3dadd(-1.8, 299.19, 47.92, 1.8)
	pt3dadd(-0.33, 304.05, 50.66, 1.8)
	pt3dadd(0.2, 307.65, 52.91, 1.8)
	pt3dadd(-0.07, 312.16, 55.64, 1.8)
	pt3dadd(-0.33, 316.44, 54.37, 1.8)
	pt3dadd(0.2, 322.29, 55.39, 1.8)
	pt3dadd(0.81, 327.22, 57.5, 1.8)
	pt3dadd(1.07, 329.02, 60.25, 1.8)
	pt3dadd(0.54, 331.95, 63.22, 1.8)
	pt3dadd(0.28, 334.2, 65.72, 1.8)
	pt3dadd(0.54, 336.23, 67.21, 1.8)
	pt3dadd(1.6, 338.93, 69.41, 1.8)
	pt3dadd(2.4, 342.76, 72.82, 1.8)
	pt3dadd(0.75, 348.35, 75.4, 1.8)
	pt3dadd(-0.3, 353.53, 77.79, 1.8)
	pt3dadd(-1.63, 358.03, 76.61, 1.8)
	pt3dadd(-2.16, 361.41, 76.61, 1.8)
	pt3dadd(-3.85, 363.49, 76.61, 1.8)
	pt3dadd(-3.58, 366.87, 76.61, 1.8)
  }
  dend[14] {pt3dclear()
	pt3dadd(-4.71, 273.96, 37.43, 1.8)
	pt3dadd(-8.36, 278.77, 38.61, 1.8)
	pt3dadd(-11.54, 282.15, 38.61, 1.8)
	pt3dadd(-14.72, 285.75, 39.49, 1.8)
	pt3dadd(-18.43, 289.81, 44.5, 1.8)
	pt3dadd(-21.07, 295.67, 44.62, 1.8)
	pt3dadd(-24.23, 301.57, 47.28, 1.8)
	pt3dadd(-27.41, 308.78, 49.17, 1.8)
	pt3dadd(-28.21, 313.76, 52.57, 1.8)
	pt3dadd(-29.26, 319.62, 53.11, 1.8)
	pt3dadd(-30.58, 325.62, 55.64, 1.8)
	pt3dadd(-31.37, 327.87, 56.44, 1.8)
	pt3dadd(-31.37, 329.23, 56.44, 1.8)
  }
  dend[15] {pt3dclear()
	pt3dadd(6.9, 28.95, 2.36, 2.25)
	pt3dadd(6.68, 39, 2.22, 2.25)
	pt3dadd(6.68, 51.17, 2.66, 2.25)
  }
  dend[16] {pt3dclear()
	pt3dadd(6.68, 51.17, 2.66, 2.25)
	pt3dadd(7.8, 56.8, 5.65, 1.8)
	pt3dadd(9.39, 62.88, 7.86, 1.8)
	pt3dadd(11.25, 68.28, 9.2, 1.8)
	pt3dadd(14.42, 77.29, 11.58, 1.8)
	pt3dadd(16.46, 86.35, 14.17, 1.8)
	pt3dadd(18.32, 97.16, 16.58, 1.8)
	pt3dadd(19.14, 103, 16.8, 1.8)
	pt3dadd(20.73, 112.01, 18.18, 1.8)
	pt3dadd(23.37, 123.72, 16.86, 1.8)
	pt3dadd(25.13, 134.33, 21.51, 1.8)
	pt3dadd(27.52, 150.55, 24.06, 1.8)
	pt3dadd(29.33, 162.95, 25.37, 1.8)
	pt3dadd(31.45, 173.32, 24.75, 1.8)
	pt3dadd(32.6, 183.03, 25.24, 1.8)
	pt3dadd(34.19, 189.11, 27.14, 1.8)
	pt3dadd(37.63, 196.54, 27.53, 1.8)
	pt3dadd(42.25, 205.07, 27.53, 1.8)
	pt3dadd(44.89, 212.31, 29.15, 1.8)
	pt3dadd(46.48, 217.94, 29.15, 1.8)
	pt3dadd(47.27, 221.77, 30.23, 1.8)
  }
  dend[17] {pt3dclear()
	pt3dadd(47.27, 221.77, 30.23, 1.8)
	pt3dadd(49.13, 229.2, 32.5, 1.8)
	pt3dadd(50.19, 234.38, 34.86, 1.8)
	pt3dadd(51.51, 240.24, 34.69, 1.8)
	pt3dadd(52.6, 247.35, 38.38, 1.8)
	pt3dadd(54.72, 254.33, 40.87, 1.8)
	pt3dadd(56.57, 260.19, 42.05, 1.8)
	pt3dadd(56.81, 263.99, 42.85, 1.8)
	pt3dadd(56.54, 270.08, 47.88, 1.8)
	pt3dadd(56.01, 273.68, 46, 1.8)
	pt3dadd(56.54, 277.96, 45.9, 1.8)
	pt3dadd(57.34, 282.47, 46.86, 1.8)
	pt3dadd(57.28, 287.97, 48.12, 1.8)
	pt3dadd(57.01, 296.53, 48.5, 1.8)
	pt3dadd(56.48, 304.87, 48.5, 1.8)
	pt3dadd(56.21, 309.67, 51.92, 1.8)
	pt3dadd(55.95, 314.17, 51.71, 1.8)
	pt3dadd(55.68, 318.68, 53.94, 1.8)
	pt3dadd(55.42, 325.66, 56.15, 1.8)
	pt3dadd(55.08, 332.7, 58.91, 1.8)
	pt3dadd(56.14, 339, 59.06, 1.8)
	pt3dadd(57.2, 347.56, 60.93, 1.8)
	pt3dadd(58.47, 353.37, 63.1, 1.8)
	pt3dadd(59.53, 359.68, 62.22, 1.8)
	pt3dadd(61.12, 365.53, 62.68, 1.8)
	pt3dadd(62.7, 368.46, 62.52, 1.8)
	pt3dadd(63.94, 370.34, 64.34, 1.8)
	pt3dadd(66.06, 373.27, 64.08, 1.8)
	pt3dadd(67.65, 375.07, 64.22, 1.8)
  }
  dend[18] {pt3dclear()
	pt3dadd(47.27, 221.77, 30.23, 1.8)
	pt3dadd(47.34, 227.8, 30.93, 1.8)
	pt3dadd(48.67, 234.78, 28.03, 1.8)
	pt3dadd(49.99, 241.54, 30.34, 1.8)
	pt3dadd(49.74, 246.07, 31.04, 1.8)
	pt3dadd(50.8, 253.28, 31.22, 1.8)
	pt3dadd(51.6, 258.01, 31.34, 1.8)
	pt3dadd(52.39, 262.74, 31.12, 1.8)
	pt3dadd(53.14, 269.72, 31.85, 1.8)
	pt3dadd(54.2, 276.93, 34.47, 1.8)
	pt3dadd(54.46, 283.01, 33.55, 1.8)
	pt3dadd(54.54, 289.05, 34.53, 1.8)
	pt3dadd(55.6, 294.45, 32.06, 1.8)
	pt3dadd(56.93, 299.86, 33.47, 1.8)
	pt3dadd(58.25, 305.49, 34.79, 1.8)
	pt3dadd(58.54, 310.02, 34.79, 1.8)
	pt3dadd(59.07, 318.8, 32.41, 1.8)
	pt3dadd(59.6, 324.44, 34.38, 1.8)
	pt3dadd(60.27, 329.97, 33.48, 1.8)
	pt3dadd(62.13, 335.15, 32.92, 1.8)
	pt3dadd(62.92, 340.78, 32.89, 1.8)
	pt3dadd(63.45, 345.51, 32.89, 1.8)
	pt3dadd(63.74, 352.95, 32.89, 1.8)
	pt3dadd(63.48, 358.8, 33, 1.8)
	pt3dadd(63.48, 361.51, 33, 1.8)
	pt3dadd(64.01, 364.89, 31.95, 1.8)
	pt3dadd(64.67, 368.09, 31.95, 1.8)
	pt3dadd(64.94, 371.02, 31.95, 1.8)
	pt3dadd(65.67, 374.4, 34.16, 1.8)
	pt3dadd(65.67, 376.65, 34.16, 1.8)
  }
  dend[19] {pt3dclear()
	pt3dadd(6.68, 51.17, 2.66, 2.25)
	pt3dadd(2.77, 62.81, 3.68, 1.8)
	pt3dadd(0.84, 70.24, 3.68, 1.8)
	pt3dadd(-2.17, 75.57, 3.91, 1.8)
	pt3dadd(-2.96, 80.3, 2.35, 1.8)
	pt3dadd(-3.29, 85.93, 1.73, 1.8)
	pt3dadd(-3.82, 90.89, 3.3, 1.8)
	pt3dadd(-5.45, 97.5, 0.6, 1.8)
	pt3dadd(-7.56, 103.35, 0.25, 1.8)
  }
}
proc shape3d_3() {
  dend[19] {	pt3dadd(-7.3, 104.25, 0.25, 1.8)
  }
  dend[20] {pt3dclear()
	pt3dadd(-7.3, 104.25, 0.25, 1.8)
	pt3dadd(-7.3, 106.06, -0.85, 1.8)
	pt3dadd(-8.09, 108.08, -2.68, 1.8)
	pt3dadd(-7.03, 110.79, -2.68, 1.8)
	pt3dadd(-8.05, 113.47, -6.62, 1.8)
	pt3dadd(-6.73, 115.94, -5.56, 1.8)
	pt3dadd(-6.99, 119.1, -8, 1.8)
	pt3dadd(-6.46, 124.28, -13.04, 1.8)
	pt3dadd(-7.26, 128.56, -12.46, 1.8)
	pt3dadd(-6.99, 133.07, -14.75, 1.8)
	pt3dadd(-8.12, 138.09, -17.33, 1.8)
	pt3dadd(-9.17, 140.8, -19.14, 1.8)
	pt3dadd(-10.23, 143.95, -19.94, 1.8)
	pt3dadd(-11.56, 149.36, -22.51, 1.8)
	pt3dadd(-11.82, 154.54, -24.74, 1.8)
	pt3dadd(-12.32, 159.49, -26.47, 1.8)
	pt3dadd(-12.06, 164.9, -28.22, 1.8)
	pt3dadd(-11.79, 170.08, -27.86, 1.8)
	pt3dadd(-11.26, 174.84, -29.82, 1.8)
	pt3dadd(-11.26, 179.92, -32.45, 1.8)
	pt3dadd(-10.73, 184.43, -34.62, 1.8)
	pt3dadd(-10.73, 187.58, -34.03, 1.8)
	pt3dadd(-10.2, 192.31, -36.62, 1.8)
	pt3dadd(-10.2, 197.72, -39.51, 1.8)
	pt3dadd(-11.58, 205.82, -43.82, 1.8)
	pt3dadd(-12.37, 211.91, -45.82, 1.8)
	pt3dadd(-12.64, 218.01, -48.27, 1.8)
	pt3dadd(-13.39, 224.47, -50.89, 1.8)
	pt3dadd(-14.18, 228.75, -50.78, 1.8)
	pt3dadd(-13.92, 233.26, -53.6, 1.8)
	pt3dadd(-15.24, 239.11, -57.7, 1.8)
	pt3dadd(-14.99, 244.8, -57.15, 1.8)
	pt3dadd(-14.46, 250.88, -59.86, 1.8)
	pt3dadd(-12.34, 258.09, -60.84, 1.8)
	pt3dadd(-13.12, 266.05, -63.72, 1.8)
	pt3dadd(-13.38, 272.58, -64.7, 1.8)
	pt3dadd(-13.65, 279.34, -65.45, 1.8)
	pt3dadd(-13.92, 282.97, -67.77, 1.8)
	pt3dadd(-12.86, 287.47, -71.05, 1.8)
	pt3dadd(-13.39, 295.36, -74.02, 1.8)
	pt3dadd(-14.19, 301.44, -75.95, 1.8)
	pt3dadd(-15.65, 308.12, -78.04, 1.8)
	pt3dadd(-17.23, 315.78, -80.74, 1.8)
	pt3dadd(-20.41, 322.09, -81.18, 1.8)
	pt3dadd(-25.75, 326.42, -84.41, 1.8)
	pt3dadd(-29.72, 330.92, -86.45, 1.8)
	pt3dadd(-33.7, 332.73, -87.62, 1.8)
	pt3dadd(-35.81, 334.08, -90.21, 1.8)
	pt3dadd(-38.2, 335.65, -90.21, 1.8)
	pt3dadd(-40.05, 338.36, -88.95, 1.8)
	pt3dadd(-42.43, 341.51, -86.43, 1.8)
	pt3dadd(-43.05, 341.81, -84.94, 1.8)
  }
  dend[21] {pt3dclear()
	pt3dadd(-7.3, 104.25, 0.25, 1.8)
	pt3dadd(-9.9, 113.08, -1.11, 1.8)
	pt3dadd(-11.23, 121.19, -1.12, 1.8)
	pt3dadd(-13.11, 129.3, 0.31, 1.8)
	pt3dadd(-13.64, 131.78, 0.29, 1.8)
  }
  dend[22] {pt3dclear()
	pt3dadd(-13.64, 131.78, 0.29, 1.8)
	pt3dadd(-12.58, 134.48, -2.94, 1.8)
	pt3dadd(-12.58, 140.11, -0.91, 1.8)
	pt3dadd(-12.46, 144.24, -3.73, 1.8)
	pt3dadd(-12.99, 148.75, -3.73, 1.8)
	pt3dadd(-13.52, 153.25, -3.73, 1.8)
	pt3dadd(-14.05, 157.99, -6.27, 1.8)
	pt3dadd(-15.71, 161.09, -5.34, 1.8)
	pt3dadd(-16.5, 163.8, -5.53, 1.8)
	pt3dadd(-17.03, 170.55, -4.56, 1.8)
	pt3dadd(-15.97, 177.54, -5.99, 1.8)
	pt3dadd(-15.79, 183.87, -7.38, 1.8)
	pt3dadd(-15.79, 192.66, -6.9, 1.8)
	pt3dadd(-15.53, 199.87, -8.54, 1.8)
	pt3dadd(-15.99, 208.72, -10.1, 1.8)
	pt3dadd(-16.78, 215.48, -10.1, 1.8)
	pt3dadd(-17.05, 222.69, -10.1, 1.8)
	pt3dadd(-17.06, 230.4, -10.1, 1.8)
	pt3dadd(-16.26, 236.71, -10.1, 1.8)
	pt3dadd(-16.53, 241.89, -10.1, 1.8)
	pt3dadd(-17.05, 247.6, -10.92, 1.8)
	pt3dadd(-19.43, 254.83, -10.92, 1.8)
	pt3dadd(-21.02, 262.71, -12.34, 1.8)
	pt3dadd(-22.91, 272.43, -14.19, 1.8)
	pt3dadd(-22.65, 282.11, -11.54, 1.8)
	pt3dadd(-22.13, 290.5, -11.54, 1.8)
	pt3dadd(-20.8, 298.83, -14.03, 1.8)
	pt3dadd(-21.07, 306.04, -17.19, 1.8)
	pt3dadd(-21.32, 314.22, -16.7, 1.8)
	pt3dadd(-22.12, 321.66, -17.67, 1.8)
	pt3dadd(-24.14, 328.62, -18.63, 1.8)
	pt3dadd(-23.35, 333.8, -19.51, 1.8)
	pt3dadd(-22.03, 339.88, -20.91, 1.8)
	pt3dadd(-21.5, 345.74, -20.95, 1.8)
	pt3dadd(-22.58, 352.92, -22.8, 1.8)
	pt3dadd(-23.37, 358.1, -23.3, 1.8)
	pt3dadd(-25.23, 362.38, -25.09, 1.8)
	pt3dadd(-26.55, 365.31, -23.9, 1.8)
	pt3dadd(-27.78, 367.82, -21.22, 1.8)
  }
  dend[23] {pt3dclear()
	pt3dadd(-13.64, 131.78, 0.29, 1.8)
	pt3dadd(-14.45, 140.03, 0.29, 1.8)
	pt3dadd(-16.57, 145.21, 0.29, 1.8)
	pt3dadd(-18.69, 150.61, 0.44, 1.8)
	pt3dadd(-21.9, 154.62, 2.04, 1.8)
	pt3dadd(-24.55, 159.12, 2.04, 1.8)
	pt3dadd(-26.14, 162.5, 2.62, 1.8)
	pt3dadd(-27.72, 167.46, 2.69, 1.8)
	pt3dadd(-29.31, 173.54, 1.28, 1.8)
	pt3dadd(-33.69, 182.1, 3.85, 1.8)
	pt3dadd(-38.72, 195.61, 3.85, 1.8)
	pt3dadd(-42.43, 204.75, 6.25, 1.8)
	pt3dadd(-44.81, 211.51, 7.34, 1.8)
	pt3dadd(-46.14, 214.66, 7.44, 1.8)
	pt3dadd(-50.29, 223.97, 9.09, 1.8)
	pt3dadd(-53.21, 230.51, 8.67, 1.8)
	pt3dadd(-55.32, 234.56, 8.34, 1.8)
	pt3dadd(-57.84, 238.82, 13.14, 1.8)
	pt3dadd(-59.49, 242.42, 13.23, 1.8)
	pt3dadd(-63.99, 247.15, 16.99, 1.8)
	pt3dadd(-67.97, 254.81, 17.87, 1.8)
	pt3dadd(-72.82, 260.6, 18.97, 1.8)
	pt3dadd(-74.41, 264.2, 18.97, 1.8)
	pt3dadd(-76.53, 269.16, 18.97, 1.8)
	pt3dadd(-77.32, 274.56, 18.21, 1.8)
	pt3dadd(-79.37, 283.32, 19.45, 1.8)
	pt3dadd(-81.76, 291.88, 18.9, 1.8)
  }
  dend[24] {pt3dclear()
	pt3dadd(-81.76, 291.88, 18.9, 1.8)
	pt3dadd(-82.02, 294.14, 16.64, 1.8)
	pt3dadd(-83.38, 295.72, 16.39, 1.8)
	pt3dadd(-87.35, 298.64, 14.48, 1.8)
	pt3dadd(-89.21, 300.9, 12.15, 1.8)
	pt3dadd(-91.06, 303.37, 10.1, 1.8)
	pt3dadd(-92.12, 306.08, 10.44, 1.8)
	pt3dadd(-93.18, 308.11, 10.44, 1.8)
	pt3dadd(-94.77, 310.36, 7.52, 1.8)
	pt3dadd(-97.15, 311.93, 5.94, 1.8)
	pt3dadd(-99.8, 314.41, 6.21, 1.8)
	pt3dadd(-103.63, 317.72, 4.51, 1.8)
	pt3dadd(-106.01, 321.77, 4.51, 1.8)
	pt3dadd(-106.81, 324.48, 3.57, 1.8)
	pt3dadd(-107.86, 328.08, 1.7, 1.8)
	pt3dadd(-107.86, 329.88, 3.59, 1.8)
	pt3dadd(-109.45, 333.04, 1.91, 1.8)
	pt3dadd(-113.16, 336.34, 1.1, 1.8)
	pt3dadd(-115.28, 339.05, -1.33, 1.8)
	pt3dadd(-116.87, 341.07, -1.03, 1.8)
  }
  dend[25] {pt3dclear()
	pt3dadd(-81.76, 291.88, 18.9, 1.8)
	pt3dadd(-83.25, 293.64, 23.46, 1.8)
	pt3dadd(-84.3, 297.47, 23.46, 1.8)
	pt3dadd(-84.83, 299.73, 24.73, 1.8)
	pt3dadd(-85.36, 304.46, 22.34, 1.8)
	pt3dadd(-85.63, 307.39, 23.26, 1.8)
	pt3dadd(-87.77, 314.52, 23.4, 1.8)
	pt3dadd(-89.63, 321.05, 26.74, 1.8)
	pt3dadd(-91.22, 324.66, 28.07, 1.8)
	pt3dadd(-93.07, 330.07, 29.48, 1.8)
	pt3dadd(-96.5, 336.7, 29.95, 1.8)
	pt3dadd(-98.09, 341.65, 32.18, 1.8)
	pt3dadd(-99.68, 345.93, 35.1, 1.8)
	pt3dadd(-99.94, 347.73, 37.53, 1.8)
	pt3dadd(-99.68, 351.11, 40.27, 1.8)
	pt3dadd(-102.57, 354.77, 42.96, 1.8)
	pt3dadd(-104.16, 355.67, 44.58, 1.8)
	pt3dadd(-105.22, 357.25, 48.18, 1.8)
	pt3dadd(-107.6, 359.72, 50.03, 1.8)
	pt3dadd(-108.13, 359.95, 48.3, 1.8)
  }
  dend[26] {pt3dclear()
	pt3dadd(4.25, 21.29, 0.65, 2.25)
	pt3dadd(2.95, 23.09, -3.05, 1.8)
	pt3dadd(2.95, 25.12, -4.09, 1.8)
	pt3dadd(3.22, 26.7, -7.26, 1.8)
	pt3dadd(2.95, 27.15, -9.91, 1.8)
	pt3dadd(0.57, 28.05, -12.56, 1.8)
	pt3dadd(-1.81, 29.4, -15.3, 1.8)
	pt3dadd(-3.4, 31.65, -17.8, 1.8)
	pt3dadd(-5.25, 35.93, -20.42, 1.8)
	pt3dadd(-8.17, 40.21, -23.12, 1.8)
	pt3dadd(-10.52, 44.17, -24.4, 1.8)
	pt3dadd(-10.78, 46.2, -24.65, 1.8)
	pt3dadd(-11.57, 47.1, -27.8, 1.8)
	pt3dadd(-12.63, 52.28, -28.5, 1.8)
	pt3dadd(-13.69, 57.24, -31.5, 1.8)
	pt3dadd(-15.25, 61.64, -32.04, 1.8)
	pt3dadd(-15.77, 66.6, -32.04, 1.8)
	pt3dadd(-15.77, 71.56, -33.65, 1.8)
	pt3dadd(-15.51, 78.76, -36.03, 1.8)
	pt3dadd(-15.72, 84.37, -38.97, 1.8)
	pt3dadd(-15.19, 88.68, -40.75, 1.8)
	pt3dadd(-13.87, 94.76, -40.75, 1.8)
	pt3dadd(-13.07, 99.71, -42.1, 1.8)
	pt3dadd(-12.99, 108.77, -42.53, 1.8)
	pt3dadd(-12.73, 115.31, -44.21, 1.8)
	pt3dadd(-12.73, 121.61, -45.18, 1.8)
	pt3dadd(-12.66, 127.87, -47.19, 1.8)
	pt3dadd(-12.13, 137.11, -48.85, 1.8)
	pt3dadd(-11.86, 143.19, -47.69, 1.8)
	pt3dadd(-11.59, 150.57, -50.5, 1.8)
	pt3dadd(-11.06, 157.33, -51.25, 1.8)
	pt3dadd(-10.53, 165.44, -53.65, 1.8)
	pt3dadd(-10.19, 169.34, -55.53, 1.8)
	pt3dadd(-9.13, 177.9, -55.56, 1.8)
  }
  dend[27] {pt3dclear()
	pt3dadd(-9.13, 177.9, -55.56, 1.8)
	pt3dadd(-8.07, 183.53, -57.3, 1.8)
  }
}
proc shape3d_4() {
  dend[27] {	pt3dadd(-8.87, 188.04, -56.51, 1.8)
	pt3dadd(-7.8, 192.84, -58.18, 1.8)
	pt3dadd(-7.8, 200.95, -59.98, 1.8)
	pt3dadd(-8.06, 208.84, -61.08, 1.8)
	pt3dadd(-7.79, 216.15, -63.9, 1.8)
	pt3dadd(-6.73, 221.33, -65.23, 1.8)
	pt3dadd(-3.55, 228.09, -66.31, 1.8)
	pt3dadd(-0.54, 234, -69.9, 1.8)
	pt3dadd(2.1, 240.53, -70.99, 1.8)
	pt3dadd(5.02, 246.16, -72.1, 1.8)
	pt3dadd(6.34, 251.34, -72.78, 1.8)
	pt3dadd(6.87, 259.47, -75.14, 1.8)
	pt3dadd(7.4, 265.33, -77.45, 1.8)
	pt3dadd(7.93, 272.09, -79.18, 1.8)
	pt3dadd(7.68, 276.87, -80.06, 1.8)
	pt3dadd(9.27, 282.05, -82.78, 1.8)
	pt3dadd(9.27, 286.11, -85.06, 1.8)
	pt3dadd(10.86, 292.86, -87.21, 1.8)
	pt3dadd(12.27, 297.47, -89.7, 1.8)
	pt3dadd(13.59, 301.07, -92.33, 1.8)
	pt3dadd(14.65, 303.55, -94.86, 1.8)
	pt3dadd(14.12, 307.61, -94.64, 1.8)
	pt3dadd(14.12, 310.31, -98.58, 1.8)
	pt3dadd(14.12, 312.56, -100.46, 1.8)
	pt3dadd(15.47, 314.37, -102.94, 1.8)
	pt3dadd(15.73, 317.29, -106.19, 1.8)
	pt3dadd(16.26, 320, -109.91, 1.8)
	pt3dadd(17.59, 322.7, -108.46, 1.8)
	pt3dadd(18.65, 324.95, -110.16, 1.8)
	pt3dadd(18.12, 327.88, -110.16, 1.8)
	pt3dadd(18.12, 330.13, -110.16, 1.8)
	pt3dadd(18.38, 332.16, -107.37, 1.8)
	pt3dadd(18.81, 333.97, -107.37, 1.8)
  }
  dend[28] {pt3dclear()
	pt3dadd(-9.13, 177.9, -55.56, 1.8)
	pt3dadd(-11.37, 184.87, -59.01, 1.8)
	pt3dadd(-11.9, 189.83, -60.74, 1.8)
	pt3dadd(-12.17, 193.43, -59.85, 1.8)
	pt3dadd(-12.7, 196.59, -61.83, 1.8)
	pt3dadd(-12.99, 200.59, -63.06, 1.8)
	pt3dadd(-13.52, 206.68, -62.7, 1.8)
	pt3dadd(-13.78, 211.86, -63.05, 1.8)
	pt3dadd(-13.25, 216.14, -64.7, 1.8)
	pt3dadd(-11.93, 222, -64.7, 1.8)
	pt3dadd(-9.81, 228.08, -62.66, 1.8)
	pt3dadd(-6.9, 233.48, -64.06, 1.8)
	pt3dadd(-5.05, 238.21, -62.9, 1.8)
	pt3dadd(-2.74, 241.72, -65.54, 1.8)
	pt3dadd(-0.88, 246.67, -67.79, 1.8)
	pt3dadd(3.09, 255.23, -67.79, 1.8)
	pt3dadd(5.21, 259.74, -70.56, 1.8)
	pt3dadd(7.73, 266.72, -70.56, 1.8)
	pt3dadd(10.11, 271.9, -72.02, 1.8)
	pt3dadd(11.43, 276.41, -72.02, 1.8)
	pt3dadd(12.49, 282.07, -73.38, 1.8)
	pt3dadd(11.48, 286.64, -76.15, 1.8)
	pt3dadd(9.9, 294.08, -77.94, 1.8)
	pt3dadd(8.84, 300.39, -79.82, 1.8)
	pt3dadd(6.1, 308.27, -81.26, 1.8)
	pt3dadd(3.98, 313.91, -83.73, 1.8)
	pt3dadd(2.92, 318.41, -84.5, 1.8)
	pt3dadd(1.29, 322.39, -84.39, 1.8)
	pt3dadd(-0.83, 327.15, -86.33, 1.8)
	pt3dadd(-2.42, 329.85, -85.46, 1.8)
	pt3dadd(-5.06, 333.23, -89.06, 1.8)
	pt3dadd(-7.45, 335.93, -89.06, 1.8)
	pt3dadd(-11.42, 338.41, -91.36, 1.8)
	pt3dadd(-13.57, 339.04, -87.86, 1.8)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
  shape3d_4()
}

proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() {
	
 
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(4, 5, 6, 8, 9,11,12,13,14,17,18,20,22,23,24,25,27,28) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.77423,    0.5,    0.5,0.52299,0.52231,0.76884,0.87345,    0.5,    0.5,0.51138,0.51175,0.72973,0.70023,0.77479,    0.5,    0.5,0.59219,0.58854) 
for i= 0 , 17 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0  
pre_list.append(syn) // 
} 
 
 // //***** MC syn   
 
dend[0] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 18 
dend[1] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 19 
dend[2] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 20 
dend[3] syn = new Exp2Syn(0.12216) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 21 
dend[10] syn = new Exp2Syn(0.38685) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 22 
dend[15] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 23 
dend[16] syn = new Exp2Syn(0.044507) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 24 
dend[19] syn = new Exp2Syn(0.14203) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 25 
dend[26] syn = new Exp2Syn(0.12898) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 26 
 
 // //***** HIPP   
 
dend[4] syn = new Exp2Syn(0.77423) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 27 
dend[5] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 28 
dend[6] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 29 
dend[8] syn = new Exp2Syn(0.52299) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 30 
dend[9] syn = new Exp2Syn(0.52231) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 31 
dend[11] syn = new Exp2Syn(0.76884) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 32 
dend[12] syn = new Exp2Syn(0.87345) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 33 
dend[13] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 34 
dend[14] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 35 
dend[17] syn = new Exp2Syn(0.51138) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 36 
dend[18] syn = new Exp2Syn(0.51175) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 37 
dend[20] syn = new Exp2Syn(0.72973) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 38 
dend[22] syn = new Exp2Syn(0.70023) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 39 
dend[23] syn = new Exp2Syn(0.77479) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 40 
dend[24] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 41 
dend[25] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 42 
dend[27] syn = new Exp2Syn(0.59219) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 43 
dend[28] syn = new Exp2Syn(0.58854) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 44 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 45 
 
 // //***** Sprout   
 
dend[0] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 46 
dend[1] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 47 
dend[2] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 48 
dend[3] syn = new Exp2Syn(0.12216) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 49 
dend[10] syn = new Exp2Syn(0.38685) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 50 
dend[15] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 51 
dend[16] syn = new Exp2Syn(0.044507) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 52 
dend[19] syn = new Exp2Syn(0.14203) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 53 
dend[26] syn = new Exp2Syn(0.12898) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 54 

	  
	  
}
	func is_art() { return 0 }

	endtemplate GranuleCell54
//************************************************************************************************************