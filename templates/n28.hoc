/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell28


// Original name on neuroMorpho.org n28-r01-03-sl1.CNG.swc

ndend1=15

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 14 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()


	pdend  = new SectionList()
		dend[2] pdend.append()


	mdend  = new SectionList()
		dend[1] mdend.append()
		for i=3, 6 dend[i] mdend.append()
		dend[8] mdend.append()
		dend[10] mdend.append()


	ddend  = new SectionList()
		dend[7] ddend.append()
		dend[9] ddend.append()
		for i=11, 14  dend[i] ddend.append()

}



proc gctemp() {

// 	soma {nseg=1 L=16.8 diam=16.8} // changed L & diam
	
/*	dend [0] {nseg=1  L=27.5855 diam=2.3784}
	dend [1] {nseg=1  L=3.90655 diam=1.546}
	dend [2] {nseg=1  L=49.90057 diam=1.048}
	dend [3] {nseg=1  L=58.66612 diam=1.2018}
	dend [4] {nseg=1  L=77.90403 diam=0.8822}
	dend [5] {nseg=1  L=65.45236 diam=0.7149}
	dend [6] {nseg=1  L=39.08021 diam=0.8525}
	dend [7] {nseg=1  L=28.99695 diam=0.6966}
	dend [8] {nseg=1  L=34.99227 diam=0.6848}
	dend [9] {nseg=1  L=42.50559 diam=0.6237}
	dend [10] {nseg=1 L=59.65832 diam=0.5661}
	dend [11] {nseg=1 L=87.08064 diam=0.6372}
	dend [12] {nseg=1 L=11.72373 diam=0.7863}
	dend [13] {nseg=1 L=78.56052 diam=0.5773}
	dend [14] {nseg=1 L=65.70179 diam=0.6466}
	dend [15] {nseg=1 L=135.75229 diam=0.6171}
	dend [16] {nseg=1 L=23.22847 diam=0.5976}
	dend [17] {nseg=1 L=54.47258 diam=0.6512}
	dend [18] {nseg=1 L=38.29144 diam=0.6966}
	dend [19] {nseg=1 L=42.69891 diam=0.5877}*/
	
	
// 	dend [20] {nseg=1 L=53.60330 diam=0.5795}
// 	for i = 1, 20	dend [i] {nseg=1 L=150 diam=3}

// 	gcdend2 [0] {nseg=1 L=50 diam=3}
// 	for i = 1, 3	gcdend2 [i] {nseg=1 L=150 diam=3}	 	

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	connect dend[0](0), soma(1)
// 	connect gcdend2[0](0), soma(1)
// 	for i=1,3 {
// 	connect dend[i](0), dend[i-1](1)
// 	}
// 	for i=1,3 {
// 	connect gcdend2[i](0), gcdend2[i-1](1)
// 	}

  connect dend(0), soma(1)
  for i = 1, 2 connect dend[i](0), dend(1)
  for i = 3, 4 connect dend[i](0), dend[1](1)
  for i = 5, 6 connect dend[i](0), dend[3](1)
  for i = 7, 8 connect dend[i](0), dend[4](1)
  for i = 9, 10 connect dend[i](0), dend[5](1)
  for i = 11, 12 connect dend[i](0), dend[6](1)
  for i = 13, 14 connect dend[i](0), dend[11](1)
// 	  connect /*axon*/(1), soma(0)
	  basic_shape()

	forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90  el_ichan2 =-70  cao_ccanl=2 }  // make catau slower70e-3 	cao=2 cai=50.e-6 

// current injection
//for i=0,0 {
//stimdel[i]=500
//stimdur[i]=200
//stimamp[i]=0.2

//soma stim[i] = new IClamp(0.5)
//stim.del[i]=stimdel[i]
//stim.dur[i]=stimdur[i]
//stim.amp[i]=stimamp[i]
//}


		}
		
proc shape3d_1() {
//   axon {pt3dclear()
// 	pt3dadd(0.36, -38, 0.01, 0.2)
// 	pt3dadd(0.36, -18, 0.01, 10)
//   }
  soma {pt3dclear()
	pt3dadd(0.36, -18, 0.01, 10)
	pt3dadd(0.36, 0.075, 0, 7.502)
  }
  dend {pt3dclear()
	pt3dadd(0.36, 0.075, 0, 7.502)
	pt3dadd(4.73, -0.92, 0.09, 2.41)
	pt3dadd(6.4, -0.64, 0.09, 2.04)
	pt3dadd(8.44, 0.09, -0.4, 1.58)
	pt3dadd(10.02, 0.55, -0.4, 0.93)
	pt3dadd(11.22, 0.83, -0.39, 0.93)
	pt3dadd(12.99, 1.38, -0.03, 1.3)
	pt3dadd(14.19, 1.01, -0.03, 1.3)
	pt3dadd(15.77, 1.38, 0.03, 1.3)
	pt3dadd(17.25, 1.47, 0.45, 1.3)
	pt3dadd(18.27, 1.38, -0.26, 1.48)
  }
  dend[1] {pt3dclear()
	pt3dadd(18.27, 1.38, -0.26, 1.48)
	pt3dadd(19.47, 1.87, -0.26, 1.3)
	pt3dadd(21.05, 1.68, -0.26, 1.3)
	pt3dadd(22.53, 1.87, -0.53, 1.58)
	pt3dadd(24.02, 1.96, -0.69, 1.86)
	pt3dadd(25.78, 2.42, -0.69, 1.67)
	pt3dadd(27.26, 2.05, -0.22, 1.76)
	pt3dadd(28.75, 2.14, -1.09, 1.58)
	pt3dadd(29.77, 1.96, -1.09, 1.3)
	pt3dadd(31.16, 1.87, -0.55, 1.11)
	pt3dadd(32.37, 2.05, -0.97, 1.11)
	pt3dadd(33.02, 2.14, -0.55, 1.11)
	pt3dadd(33.94, 2.33, -0.55, 1.21)
	pt3dadd(35.3, 2.26, -1.36, 1.21)
	pt3dadd(36.6, 2.35, -0.86, 1.21)
	pt3dadd(37.71, 2.81, -0.39, 1.3)
	pt3dadd(38.73, 2.9, -0.39, 1.3)
	pt3dadd(40.03, 2.54, -0.67, 1.21)
	pt3dadd(40.96, 2.08, -0.67, 1.21)
	pt3dadd(41.7, 1.16, -0.67, 1.11)
	pt3dadd(42.81, -0.04, -0.43, 1.02)
	pt3dadd(43.46, -0.87, -0.43, 1.02)
	pt3dadd(44.67, -1.78, -0.66, 1.02)
	pt3dadd(46.06, -2.15, -0.66, 1.02)
	pt3dadd(47.17, -1.6, -0.44, 1.02)
	pt3dadd(47.73, -0.92, -0.59, 1.02)
	pt3dadd(48.56, -0.65, -0.59, 1.21)
	pt3dadd(49.67, -1.2, -0.59, 1.21)
	pt3dadd(50.51, -1.2, 0.12, 1.21)
  }
  dend[2] {pt3dclear()
	pt3dadd(18.27, 1.38, -0.26, 1.48)
	pt3dadd(19.02, 0, 0.22, 0.93)
	pt3dadd(19.76, -0.64, -0.87, 0.74)
	pt3dadd(20.59, -1.38, -1.63, 0.65)
	pt3dadd(20.12, -2.18, -1.63, 0.56)
	pt3dadd(19.47, -2.73, -1.63, 0.56)
	pt3dadd(19.56, -3.83, -2.24, 0.56)
	pt3dadd(20.68, -3.92, -2.85, 0.65)
	pt3dadd(21.33, -4.11, -2.85, 0.65)
  }
  dend[3] {pt3dclear()
	pt3dadd(50.51, -1.2, 0.12, 1.21)
	pt3dadd(51.53, -1.06, -0.4, 0.65)
	pt3dadd(53.1, -0.61, -0.4, 0.65)
	pt3dadd(54.22, -0.42, -0.4, 0.74)
	pt3dadd(55.24, -0.24, 0.09, 1.02)
	pt3dadd(56.35, -0.42, -0.76, 1.02)
	pt3dadd(57.28, -0.79, -1.08, 0.65)
	pt3dadd(58.39, -0.97, -0.34, 0.83)
	pt3dadd(59.6, -0.88, -0.34, 0.93)
	pt3dadd(60.99, -0.79, -0.84, 0.65)
	pt3dadd(62.01, -0.88, -1.11, 0.65)
	pt3dadd(63.03, -1.06, -0.51, 0.65)
	pt3dadd(64.05, -1.34, -0.54, 0.65)
	pt3dadd(65.11, -1.06, -0.84, 0.56)
	pt3dadd(65.95, -0.97, -0.92, 0.74)
  }
  dend[4] {pt3dclear()
	pt3dadd(50.51, -1.2, 0.12, 1.21)
	pt3dadd(51.62, -2.58, 0.12, 0.74)
	pt3dadd(52.55, -3.31, -0.84, 0.65)
	pt3dadd(53.76, -4.05, -0.84, 0.65)
	pt3dadd(54.78, -4.51, -1.02, 0.65)
	pt3dadd(56.45, -5.24, -0.87, 0.65)
	pt3dadd(57.65, -5.52, 0.05, 0.65)
	pt3dadd(58.95, -5.52, -0.99, 0.74)
	pt3dadd(59.69, -5.7, -0.99, 1.3)
	pt3dadd(60.79, -6, -0.47, 0.83)
	pt3dadd(61.72, -6.55, -1.05, 0.65)
	pt3dadd(62.65, -7.1, -1.24, 0.65)
	pt3dadd(63.85, -6.92, -1.3, 0.65)
	pt3dadd(64.69, -6.92, -1.38, 0.65)
	pt3dadd(65.52, -7.1, -1.38, 0.83)
  }
  dend[5] {pt3dclear()
	pt3dadd(65.95, -0.97, -0.92, 0.74)
	pt3dadd(67.2, -1.03, -1.21, 0.65)
	pt3dadd(68.22, -1.4, -1.93, 0.65)
	pt3dadd(69.24, -1.95, -1.23, 0.74)
	pt3dadd(70.35, -2.23, -2.13, 0.83)
	pt3dadd(71.65, -2.04, -2.13, 0.83)
	pt3dadd(72.39, -2.14, -2.58, 0.65)
	pt3dadd(73.69, -2.69, -2.58, 0.56)
	pt3dadd(75.08, -2.96, -2.08, 0.56)
	pt3dadd(76.2, -3.42, -1.65, 0.56)
	pt3dadd(77.4, -3.7, -1.77, 0.56)
	pt3dadd(78.42, -3.79, -1.85, 0.65)
	pt3dadd(79.44, -3.79, -1.85, 0.65)
	pt3dadd(80.31, -3.82, -1.15, 0.65)
	pt3dadd(80.87, -4.09, -1.15, 0.65)
	pt3dadd(81.8, -4.55, -1.34, 0.65)
	pt3dadd(82.45, -5.1, -1.73, 0.56)
	pt3dadd(83.19, -5.29, -1.11, 0.56)
	pt3dadd(84.12, -4.74, -1.11, 0.65)
	pt3dadd(84.86, -5.29, -0.41, 0.65)
	pt3dadd(85.97, -5.84, -0.89, 0.65)
	pt3dadd(87.18, -6.39, -0.89, 0.65)
	pt3dadd(88.57, -6.39, -0.76, 0.65)
	pt3dadd(89.59, -5.93, -1, 0.65)
	pt3dadd(90.98, -5.93, -0.64, 0.65)
	pt3dadd(91.82, -6.39, -0.17, 0.65)
	pt3dadd(92.65, -6.57, -0.17, 0.65)
	pt3dadd(93.97, -6.72, -0.17, 0.56)
	pt3dadd(94.62, -5.98, -0.17, 0.56)
	pt3dadd(96.1, -6.07, -0.63, 0.56)
	pt3dadd(97.4, -6.26, -0.81, 0.56)
	pt3dadd(98.7, -6.16, -0.24, 0.56)
	pt3dadd(99.63, -6.26, -0.24, 0.56)
	pt3dadd(100.2, -6.44, -0.24, 0.74)
  }
  dend[6] {pt3dclear()
	pt3dadd(65.95, -0.97, -0.92, 0.74)
	pt3dadd(66.5, -2.17, -0.15, 0.56)
	pt3dadd(67.62, -2.44, 0.24, 0.56)
	pt3dadd(68.54, -3.09, 0.51, 0.56)
	pt3dadd(69.19, -2.9, 0.51, 0.56)
	pt3dadd(70.21, -3.64, -0.02, 0.56)
	pt3dadd(70.86, -4.47, -0.02, 0.56)
	pt3dadd(71.42, -5.38, 0.5, 0.93)
	pt3dadd(71.79, -6.12, 0.5, 0.74)
	pt3dadd(72.16, -7.13, 0.5, 0.56)
	pt3dadd(72.81, -7.96, 0.19, 0.83)
	pt3dadd(73.46, -9.25, 0.65, 0.65)
	pt3dadd(74.3, -9.61, 0.22, 0.65)
	pt3dadd(74.67, -10.16, 0.22, 0.65)
	pt3dadd(75.32, -10.99, 0.22, 0.74)
	pt3dadd(75.69, -12, 0.15, 0.74)
	pt3dadd(76.43, -12.74, 0.15, 0.56)
	pt3dadd(76.71, -13.66, 0.83, 0.56)
	pt3dadd(77.36, -14.39, 0.83, 0.56)
	pt3dadd(77.66, -15.34, 1.19, 0.56)
	pt3dadd(78.77, -15.25, 1.19, 0.65)
	pt3dadd(79.42, -15.99, 1.19, 0.56)
	pt3dadd(79.79, -16.72, 1.28, 0.83)
	pt3dadd(79.7, -17.73, 0.92, 0.65)
	pt3dadd(79.79, -18.47, 1.29, 0.56)
	pt3dadd(80.72, -18.38, 1.4, 0.74)
	pt3dadd(81.55, -18.84, 1.71, 0.74)
	pt3dadd(82.39, -19.3, 2.07, 0.74)
	pt3dadd(82.76, -20.4, 2.39, 0.74)
	pt3dadd(81.46, -20.95, 2.82, 0.65)
	pt3dadd(81.64, -22.24, 1.82, 0.65)
	pt3dadd(82.2, -23.89, 2.52, 0.65)
	pt3dadd(83.22, -24.9, 1.96, 0.65)
	pt3dadd(84.89, -25.36, 1.94, 0.65)
	pt3dadd(85.63, -26.56, 1.3, 0.74)
	pt3dadd(85.91, -28.3, 1.17, 0.74)
	pt3dadd(86.38, -29.77, 2.64, 0.93)
	pt3dadd(86.75, -30.69, 2.03, 1.11)
  }
  dend[7] {pt3dclear()
	pt3dadd(65.52, -7.1, -1.38, 0.83)
	pt3dadd(66.3, -7.7, -0.75, 0.56)
	pt3dadd(67.32, -7.98, -0.75, 0.56)
	pt3dadd(68.62, -8.25, -1.4, 0.56)
	pt3dadd(69.82, -8.62, -1.61, 0.56)
	pt3dadd(71.12, -8.81, -1.93, 0.65)
	pt3dadd(71.96, -9.45, -2.36, 0.65)
	pt3dadd(72.98, -10, -2.56, 0.65)
	pt3dadd(73.72, -9.82, -2.72, 0.56)
	pt3dadd(74.93, -9.63, -2.13, 0.56)
	pt3dadd(76.13, -10.28, -2.75, 0.56)
	pt3dadd(77.15, -11.01, -2.75, 0.56)
	pt3dadd(78.27, -11.66, -2.93, 0.56)
	pt3dadd(79.38, -11.47, -3.17, 0.56)
	pt3dadd(80.21, -11.47, -3.17, 0.74)
	pt3dadd(80.77, -11.66, -3.17, 0.74)
	pt3dadd(81.7, -12.02, -2.97, 0.56)
	pt3dadd(82.81, -12.11, -2.97, 0.56)
	pt3dadd(83.65, -12.39, -2.97, 0.56)
	pt3dadd(84.11, -13.49, -2.53, 0.56)
	pt3dadd(84.76, -14.23, -3.21, 0.56)
	pt3dadd(85.32, -14.96, -3.33, 0.56)
	pt3dadd(86.06, -15.52, -3.33, 0.56)
	pt3dadd(86.72, -16.28, -3.33, 0.56)
	pt3dadd(88.2, -16.74, -3.33, 0.56)
	pt3dadd(89.32, -17.2, -3.57, 0.56)
	pt3dadd(90.43, -17.39, -3.57, 0.65)
	pt3dadd(91.82, -17.48, -2.69, 0.65)
	pt3dadd(92.47, -17.66, -3.11, 0.65)
	pt3dadd(93.03, -18.58, -3.11, 0.56)
	pt3dadd(93.68, -19.32, -3.11, 0.56)
	pt3dadd(94.7, -20.33, -3.62, 0.56)
	pt3dadd(95.16, -20.79, -3.62, 0.56)
	pt3dadd(95.35, -21.71, -3.62, 0.65)
	pt3dadd(96.09, -22.26, -3.43, 0.56)
	pt3dadd(96.74, -22.81, -3.43, 0.65)
	pt3dadd(97.48, -23.55, -3.68, 0.56)
	pt3dadd(98.13, -24.19, -3.68, 0.56)
	pt3dadd(98.69, -24.46, -3.68, 0.56)
	pt3dadd(99.7, -25.17, -3.92, 0.56)
	pt3dadd(100.2, -26.09, -4.26, 0.56)
	pt3dadd(100.8, -26.91, -4.47, 0.65)
	pt3dadd(101.3, -27.56, -4.47, 0.56)
	pt3dadd(101.8, -27.93, -4.47, 0.74)
	pt3dadd(102.5, -28.38, -3.81, 0.56)
	pt3dadd(103.3, -29.3, -4.1, 0.65)
	pt3dadd(103.8, -30.41, -4.15, 0.56)
  }
}
proc shape3d_2() {
  dend[7] {	pt3dadd(104.6, -30.77, -4.37, 0.56)
	pt3dadd(105.5, -31.33, -3.8, 0.46)
	pt3dadd(105.7, -32.34, -3.8, 0.46)
	pt3dadd(106.1, -33.26, -4.05, 0.46)
	pt3dadd(106.4, -34.63, -4.05, 0.46)
	pt3dadd(107.1, -35.28, -3.94, 0.46)
	pt3dadd(107.4, -36.29, -3.94, 0.46)
	pt3dadd(107.8, -37.21, -3.94, 0.46)
  }
  dend[8] {pt3dclear()
	pt3dadd(65.52, -7.1, -1.38, 0.83)
	pt3dadd(66.36, -6.74, -1.65, 0.56)
	pt3dadd(67.47, -7.01, -1.65, 0.56)
	pt3dadd(68.3, -7.19, -2.05, 0.65)
	pt3dadd(69.42, -7.1, -2.12, 0.65)
	pt3dadd(70.07, -6.55, -2.5, 0.56)
	pt3dadd(70.44, -6.09, -2.5, 0.56)
	pt3dadd(71.27, -6.18, -2.63, 0.56)
	pt3dadd(72.02, -6.37, -3.19, 0.56)
	pt3dadd(73.04, -6.28, -3.19, 0.56)
	pt3dadd(74, -5.96, -3.21, 0.65)
	pt3dadd(74.83, -5.96, -3.64, 0.65)
	pt3dadd(75.57, -5.5, -3.92, 0.56)
	pt3dadd(76.87, -5.31, -3.92, 0.56)
	pt3dadd(77.99, -5.22, -3.18, 0.65)
	pt3dadd(78.91, -4.76, -4.06, 0.65)
	pt3dadd(79.93, -4.49, -4.06, 0.65)
	pt3dadd(80.21, -3.75, -4.46, 0.56)
	pt3dadd(80.86, -3.38, -4.04, 0.56)
  }
  dend[9] {pt3dclear()
	pt3dadd(100.2, -6.44, -0.24, 0.74)
	pt3dadd(101.3, -6.44, -0.24, 0.56)
	pt3dadd(102.5, -6.53, -0.64, 0.56)
	pt3dadd(103.9, -6.62, -1.04, 0.56)
	pt3dadd(104.8, -6.53, -1.12, 0.56)
	pt3dadd(105.5, -6.16, -1.18, 0.56)
	pt3dadd(106.8, -5.66, -1.26, 0.74)
	pt3dadd(107.8, -5.2, -0.52, 0.56)
	pt3dadd(109, -5.2, -0.52, 0.56)
	pt3dadd(110.2, -5.29, 0, 0.56)
	pt3dadd(111, -5.66, -0.51, 0.56)
	pt3dadd(112.2, -5.75, 0.21, 0.56)
	pt3dadd(113.6, -5.93, -0.06, 0.56)
	pt3dadd(114.3, -6.58, -0.06, 0.56)
	pt3dadd(115.3, -6.67, 0.64, 0.56)
	pt3dadd(115.9, -7.13, -0.23, 0.56)
	pt3dadd(116.1, -7.68, -0.23, 0.74)
	pt3dadd(116.8, -7.95, 0.46, 0.74)
  }
  dend[10] {pt3dclear()
	pt3dadd(100.2, -6.44, -0.24, 0.74)
	pt3dadd(100.6, -7.54, -0.24, 0.56)
	pt3dadd(101.4, -8.28, -0.33, 0.56)
	pt3dadd(102.1, -9.29, 0.18, 0.46)
	pt3dadd(102.7, -9.93, 0.7, 0.37)
	pt3dadd(103.3, -10.58, 0.02, 0.37)
	pt3dadd(103.9, -10.48, 0.02, 0.37)
  }
  dend[11] {pt3dclear()
	pt3dadd(86.75, -30.69, 2.03, 1.11)
	pt3dadd(87.7, -30.59, 2.03, 0.56)
	pt3dadd(88.45, -30.31, 2.03, 0.56)
	pt3dadd(88.72, -31.23, 2.03, 0.56)
	pt3dadd(89.84, -32.24, 3.17, 0.56)
	pt3dadd(90.77, -33.16, 3.66, 0.56)
	pt3dadd(91.32, -34.45, 3.66, 0.56)
	pt3dadd(92.06, -35.18, 3.27, 0.56)
	pt3dadd(92.81, -35.64, 3.9, 0.56)
	pt3dadd(93.36, -36.38, 3.89, 0.74)
  }
  dend[12] {pt3dclear()
	pt3dadd(86.75, -30.69, 2.03, 1.11)
	pt3dadd(86.38, -31.61, 2.29, 0.56)
	pt3dadd(85.54, -32.44, 2.29, 0.56)
	pt3dadd(85.01, -33.07, 2.1, 0.56)
	pt3dadd(84.27, -33.53, 2.22, 0.56)
	pt3dadd(83.53, -35.09, 3.26, 0.56)
	pt3dadd(83.07, -36.56, 3.55, 0.56)
	pt3dadd(83.34, -37.76, 3.55, 0.56)
	pt3dadd(83.44, -38.49, 3.55, 0.56)
  }
  dend[13] {pt3dclear()
	pt3dadd(93.36, -36.38, 3.89, 0.74)
	pt3dadd(94.1, -36.74, 3.49, 0.56)
	pt3dadd(94.85, -37.3, 3.49, 0.56)
	pt3dadd(95.31, -37.3, 3.49, 0.65)
	pt3dadd(96.52, -37.76, 4.41, 0.46)
	pt3dadd(97.44, -38.12, 5.15, 0.46)
	pt3dadd(98.28, -38.4, 4.6, 0.46)
	pt3dadd(99.21, -38.98, 5.38, 0.46)
	pt3dadd(100.4, -39.54, 5.77, 0.46)
	pt3dadd(101.1, -41.1, 6.05, 0.56)
	pt3dadd(102.2, -41.56, 6.5, 0.46)
	pt3dadd(102.9, -42.29, 6.48, 0.46)
	pt3dadd(103.7, -42.66, 5.92, 0.46)
  }
  dend[14] {pt3dclear()
	pt3dadd(93.36, -36.38, 3.89, 0.74)
	pt3dadd(93.64, -37.57, 3.89, 0.56)
	pt3dadd(94.2, -38.03, 3.54, 0.56)
	pt3dadd(94.66, -38.77, 3.54, 0.56)
	pt3dadd(94.57, -39.59, 3.97, 0.56)
	pt3dadd(94.2, -40.24, 3.89, 0.56)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
}		
		
	proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref ProximalSynapses 
	objref ProximalSynapsePositions 
	proc synapse() { 
  
 // //***** PP syn   
 
 
 // //***** MC syn   
 
ProximalSynapses = new Vector(0,0) 
ProximalSynapses .append(0 , 1 , 2) 
ProximalSynapsePositions = new Vector(0,0) 
ProximalSynapsePositions .append(0.5  ,   0.43809    ,     0.5) 
for i= 0 , 2 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // #  
} 
 
 // //***** HIPP   
 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 0 
 
 // //***** Sprout   
 
for i= 0 , 2 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 0 
} 

}
	func is_art() { return 0 }

	endtemplate GranuleCell28