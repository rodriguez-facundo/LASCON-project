/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell64
	
// Original name on neuroMorpho.org 803887b.CNG.hoc

ndend1=27

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 26 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()


	pdend  = new SectionList()
		for i=4, 5  dend[i] pdend.append()
		for i=10, 11  dend[i] pdend.append()
		dend[16] pdend.append()


	mdend  = new SectionList()
		dend[1] mdend.append()
		dend[6] mdend.append()		  
		dend[13] mdend.append()
		dend[17] mdend.append()
		dend[19] mdend.append()		  
		dend[22] mdend.append()	
		dend[24] mdend.append()


	ddend  = new SectionList()
		
		for i=2, 3 dend[i] ddend.append()
		for i=7, 9 dend[i] ddend.append()
		dend[12] ddend.append()
		for i=14, 15 dend[i] ddend.append()
		dend[18] ddend.append()
		for i=20, 21 dend[i] ddend.append()
		dend[23] ddend.append()
		for i=25, 26 dend[i] ddend.append()
		

}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }


  connect dend(0), soma(1)
  for i = 1, 2 connect dend[i](0), dend[i-1](1)
  connect dend[3](0), dend[1](1)
  connect dend[4](0), dend(1)
  for i = 5, 7 connect dend[i](0), dend[i-1](1)
  connect dend[8](0), dend[6](1)
  connect dend[9](0), dend[5](1)
  connect dend[10](0), dend[4](1)
  for i = 11, 12 connect dend[i](0), dend[i-1](1)
  connect dend[13](0), dend[11](1)
  for i = 14, 15 connect dend[i](0), dend[13](1)
  connect dend[16](0), dend[10](1)
  for i = 17, 18 connect dend[i](0), dend[i-1](1)
  connect dend[19](0), dend[17](1)
  for i = 20, 21 connect dend[i](0), dend[19](1)
  connect dend[22](0), dend[16](1)
  for i = 23, 24 connect dend[i](0), dend[22](1)
  for i = 25, 26 connect dend[i](0), dend[24](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 2.75292)
	pt3dadd(-1.59, 13.99, -3.06, 4.51)
  }
  dend {pt3dclear()
	pt3dadd(-1.59, 13.99, -3.06, 4.05)
	pt3dadd(-1.32, 17.82, -1.14, 4.05)
	pt3dadd(-1.06, 19.62, -1.14, 4.05)
	pt3dadd(-1.94, 22.1, -1.14, 4.05)
  }
  dend[1] {pt3dclear()
	pt3dadd(-1.94, 22.1, -1.14, 4.05)
	pt3dadd(-3.26, 26.38, -1.14, 1.8)
	pt3dadd(-4.32, 32.46, -3.89, 1.8)
	pt3dadd(-5.38, 35.19, -7.98, 1.8)
	pt3dadd(-5.91, 41.27, -9.81, 1.8)
	pt3dadd(-6.18, 43.97, -11.14, 1.8)
	pt3dadd(-8.03, 48.03, -11.14, 1.8)
	pt3dadd(-9.86, 51.23, -11.14, 1.8)
	pt3dadd(-10.12, 55.28, -14.06, 1.8)
	pt3dadd(-9.86, 60.24, -14.2, 1.8)
	pt3dadd(-8.8, 66.32, -16.33, 1.8)
	pt3dadd(-8.54, 71.81, -17.74, 1.8)
	pt3dadd(-8.27, 78.11, -19.9, 1.8)
	pt3dadd(-8.54, 83.07, -19.59, 1.8)
	pt3dadd(-8.54, 87.12, -19.59, 1.8)
	pt3dadd(-9.07, 91.93, -23.8, 1.8)
	pt3dadd(-9.07, 98.46, -23.8, 1.8)
	pt3dadd(-9.34, 104.55, -25.46, 1.8)
	pt3dadd(-9.6, 110.63, -27.24, 1.8)
	pt3dadd(-10.86, 114.71, -27.49, 1.8)
	pt3dadd(-11.92, 118.31, -27.99, 1.8)
	pt3dadd(-13.78, 122.14, -30.26, 1.8)
	pt3dadd(-15.9, 128.9, -30.26, 1.8)
	pt3dadd(-17.54, 134.56, -31.97, 1.8)
	pt3dadd(-19.65, 140.87, -31.97, 1.8)
	pt3dadd(-20.71, 144.92, -34.86, 1.8)
	pt3dadd(-22.04, 151.68, -36.2, 1.8)
	pt3dadd(-23.39, 155.88, -38.94, 1.8)
	pt3dadd(-23.92, 160.61, -39.54, 1.8)
	pt3dadd(-26.04, 166.02, -40.53, 1.8)
	pt3dadd(-27.63, 169.62, -42.2, 1.8)
	pt3dadd(-28.68, 175.7, -43.42, 1.8)
	pt3dadd(-30.73, 177.43, -43.42, 1.8)
	pt3dadd(-30.46, 180.36, -43.42, 1.8)
	pt3dadd(-31.79, 182.16, -45.7, 1.8)
	pt3dadd(-33.11, 185.99, -48.1, 1.8)
	pt3dadd(-33.91, 192.3, -48.74, 1.8)
	pt3dadd(-34.7, 196.8, -51.31, 1.8)
	pt3dadd(-36.66, 203.14, -53.74, 1.8)
	pt3dadd(-37.72, 206.52, -57.46, 1.8)
	pt3dadd(-38.25, 210.8, -57.46, 1.8)
	pt3dadd(-39.05, 215.98, -59.64, 1.8)
  }
  dend[2] {pt3dclear()
	pt3dadd(-39.05, 215.98, -59.64, 1.8)
	pt3dadd(-41.19, 219.56, -59.51, 1.8)
	pt3dadd(-41.72, 226.31, -63.43, 1.8)
	pt3dadd(-41.99, 233.52, -66.34, 1.8)
	pt3dadd(-43.39, 237, -68.28, 1.8)
	pt3dadd(-45.51, 248.72, -73.26, 1.8)
	pt3dadd(-46.57, 255.03, -74.03, 1.8)
	pt3dadd(-48.65, 258.38, -74.46, 1.8)
	pt3dadd(-49.98, 265.36, -74.45, 1.8)
	pt3dadd(-50.51, 271.9, -77.95, 1.8)
	pt3dadd(-50.77, 279.78, -80.94, 1.8)
	pt3dadd(-53.18, 288.14, -84.93, 1.8)
	pt3dadd(-54.77, 295.34, -87.06, 1.8)
	pt3dadd(-55.83, 300.07, -90.1, 1.8)
	pt3dadd(-58.91, 309.04, -93.01, 1.8)
	pt3dadd(-58.91, 313.77, -94.79, 1.8)
	pt3dadd(-62.62, 322.55, -97.5, 1.8)
  }
  dend[3] {pt3dclear()
	pt3dadd(-39.05, 215.98, -59.64, 1.8)
	pt3dadd(-38.74, 222.28, -59.64, 1.8)
	pt3dadd(-38.21, 230.62, -59.89, 1.8)
	pt3dadd(-39.79, 238.05, -59.89, 1.8)
	pt3dadd(-41.85, 242.53, -59.89, 1.8)
	pt3dadd(-42.91, 246.59, -60.26, 1.8)
	pt3dadd(-45.03, 249.51, -60.26, 1.8)
	pt3dadd(-48.74, 256.72, -61.66, 1.8)
	pt3dadd(-53.38, 262.86, -61.17, 1.8)
	pt3dadd(-57.08, 271.67, -60.53, 1.8)
	pt3dadd(-60, 279.78, -62.1, 1.8)
	pt3dadd(-62.38, 286.56, -63.19, 1.8)
	pt3dadd(-62.38, 293.99, -61.55, 1.8)
	pt3dadd(-63.18, 297.15, -61.55, 1.8)
	pt3dadd(-64.24, 303.45, -60.88, 1.8)
	pt3dadd(-64.2, 309.48, -62.59, 1.8)
	pt3dadd(-64.2, 313.76, -63.37, 1.8)
	pt3dadd(-64.73, 318.94, -64.93, 1.8)
	pt3dadd(-65.52, 325.93, -66.93, 1.8)
	pt3dadd(-66.86, 334.31, -68.66, 1.8)
	pt3dadd(-68.18, 339.04, -68.66, 1.8)
	pt3dadd(-68.18, 341.07, -68.52, 1.8)
  }
  dend[4] {pt3dclear()
	pt3dadd(-1.94, 22.1, -1.14, 4.05)
	pt3dadd(-0.48, 23.03, -1.77, 2.7)
	pt3dadd(-0.22, 23.93, -1.77, 2.7)
  }
  dend[5] {pt3dclear()
	pt3dadd(-0.22, 23.93, -1.77, 2.7)
	pt3dadd(1.37, 27.53, -1.77, 2.25)
	pt3dadd(1.64, 32.04, -4.63, 2.25)
	pt3dadd(2.17, 34.52, -4.7, 2.25)
	pt3dadd(1.37, 38.57, -6.26, 2.25)
	pt3dadd(0.58, 44.43, -4.8, 2.25)
	pt3dadd(-0.66, 56.22, -1.4, 2.25)
	pt3dadd(0.39, 71.31, -5.29, 2.25)
	pt3dadd(0.67, 79.81, -4.86, 2.25)
	pt3dadd(1.99, 86.35, -4.86, 2.25)
	pt3dadd(4.11, 93.55, -4.98, 2.25)
	pt3dadd(5.66, 102.04, -6.86, 2.25)
	pt3dadd(6.19, 109.7, -8.09, 2.25)
	pt3dadd(5.66, 117.81, -9.46, 2.25)
	pt3dadd(4.08, 121.71, -9.46, 2.25)
	pt3dadd(4.35, 127.56, -8.53, 2.25)
	pt3dadd(4.61, 132.97, -10.31, 2.25)
	pt3dadd(3.79, 139.64, -10.45, 2.25)
  }
  dend[6] {pt3dclear()
	pt3dadd(3.79, 139.64, -10.45, 2.25)
	pt3dadd(5.38, 142.79, -10.11, 1.8)
	pt3dadd(5.64, 144.82, -9.18, 1.8)
  }
  dend[7] {pt3dclear()
	pt3dadd(5.64, 144.82, -9.18, 1.8)
	pt3dadd(7.23, 149.1, -7.03, 1.8)
	pt3dadd(9.08, 154.51, -4.02, 1.8)
	pt3dadd(8.34, 158.73, -4.25, 1.8)
	pt3dadd(9.66, 167.07, -2.62, 1.8)
	pt3dadd(10.46, 171.57, -2.62, 1.8)
	pt3dadd(12.58, 177.88, -2.62, 1.8)
	pt3dadd(15.05, 185.09, 0.62, 1.8)
	pt3dadd(16.91, 190.94, 0.62, 1.8)
	pt3dadd(18.23, 195.9, 3.13, 1.8)
	pt3dadd(20.61, 201.53, 3.66, 1.8)
	pt3dadd(23.52, 206.41, 3.66, 1.8)
	pt3dadd(26.7, 212.94, 6.43, 1.8)
	pt3dadd(29.34, 220.15, 8.49, 1.8)
	pt3dadd(28.74, 223.01, 7.66, 1.8)
	pt3dadd(31.92, 232.47, 9.98, 1.8)
	pt3dadd(34.04, 240.8, 13.42, 1.8)
	pt3dadd(37.25, 250.54, 15.58, 1.8)
	pt3dadd(38.84, 259.78, 17.38, 1.8)
	pt3dadd(40.46, 266.01, 19.48, 1.8)
	pt3dadd(43.37, 274.35, 19.48, 1.8)
	pt3dadd(45.49, 282.23, 19.93, 1.8)
	pt3dadd(48.12, 289.89, 23.19, 1.8)
	pt3dadd(50.44, 293.94, 24.46, 1.8)
	pt3dadd(53.35, 297.55, 23.79, 1.8)
	pt3dadd(56.26, 301.83, 23.51, 1.8)
	pt3dadd(60.24, 307.03, 24.21, 1.8)
	pt3dadd(63.15, 312.89, 24.21, 1.8)
	pt3dadd(63.95, 316.27, 21.86, 1.8)
	pt3dadd(64.74, 323.25, 21.46, 1.8)
  }
  dend[8] {pt3dclear()
	pt3dadd(5.64, 144.82, -9.18, 1.8)
	pt3dadd(5.24, 150, -10.62, 1.8)
	pt3dadd(6.83, 156.31, -10.62, 1.8)
	pt3dadd(6.83, 162.17, -10.62, 1.8)
	pt3dadd(6.04, 169.15, -10.62, 1.8)
	pt3dadd(5.51, 174.4, -10.62, 1.8)
	pt3dadd(7.37, 181.16, -10.62, 1.8)
	pt3dadd(8.69, 186.11, -10.62, 1.8)
	pt3dadd(9.22, 188.37, -10.62, 1.8)
	pt3dadd(6.45, 195.35, -10.62, 1.8)
	pt3dadd(5.65, 203.24, -8.33, 1.8)
	pt3dadd(4.86, 209.1, -8.33, 1.8)
	pt3dadd(3.52, 218.23, -8.62, 1.8)
	pt3dadd(2.19, 225.66, -8.62, 1.8)
	pt3dadd(1.4, 234.45, -9.03, 1.8)
	pt3dadd(-0.48, 242.28, -7.23, 1.8)
	pt3dadd(-2.59, 250.41, -7.23, 1.8)
	pt3dadd(-4.98, 256.95, -8.54, 1.8)
	pt3dadd(-8.66, 265.38, -8.54, 1.8)
	pt3dadd(-9.46, 271.69, -8.54, 1.8)
	pt3dadd(-11.31, 279.35, -5.46, 1.8)
	pt3dadd(-13.41, 290.91, -5.46, 1.8)
	pt3dadd(-14.47, 297.67, -5.06, 1.8)
	pt3dadd(-17.67, 303.28, -5.06, 1.8)
	pt3dadd(-17.41, 308.68, -6.18, 1.8)
	pt3dadd(-18.99, 312.06, -6.18, 1.8)
	pt3dadd(-19.26, 317.92, -4.47, 1.8)
	pt3dadd(-23.06, 327.06, -4.77, 1.8)
	pt3dadd(-25.18, 330.66, -4.77, 1.8)
	pt3dadd(-24.39, 336.97, -6.32, 1.8)
	pt3dadd(-25.95, 342.23, -8.51, 1.8)
  }
  dend[9] {pt3dclear()
	pt3dadd(3.79, 139.64, -10.45, 2.25)
	pt3dadd(3.59, 148.78, -14.07, 1.8)
	pt3dadd(4.38, 155.54, -14.07, 1.8)
	pt3dadd(3.85, 160.04, -14.07, 1.8)
	pt3dadd(5.63, 166.55, -14.05, 1.8)
	pt3dadd(9.07, 177.14, -14.44, 1.8)
	pt3dadd(10.93, 182.32, -14.44, 1.8)
	pt3dadd(10.04, 186.75, -14.44, 1.8)
	pt3dadd(12.35, 195.31, -14.44, 1.8)
	pt3dadd(13.94, 205.9, -14.44, 1.8)
	pt3dadd(15.63, 217.11, -17.69, 1.8)
	pt3dadd(16.43, 224.99, -20.58, 1.8)
	pt3dadd(16.97, 231.78, -23.22, 1.8)
	pt3dadd(18.56, 238.99, -25.93, 1.8)
	pt3dadd(18.83, 248, -28.02, 1.8)
	pt3dadd(19.37, 251.85, -28.45, 1.8)
	pt3dadd(21.49, 258.38, -31.53, 1.8)
	pt3dadd(23.08, 266.94, -34.54, 1.8)
	pt3dadd(25.63, 272.45, -36.22, 1.8)
	pt3dadd(26.68, 273.8, -36.22, 1.8)
	pt3dadd(27.48, 281.91, -39.26, 1.8)
	pt3dadd(28.01, 287.32, -41.12, 1.8)
	pt3dadd(27.05, 291.5, -43.91, 1.8)
	pt3dadd(28.64, 296.46, -46.11, 1.8)
	pt3dadd(30.49, 301.41, -50.9, 1.8)
	pt3dadd(32.34, 307.27, -54.64, 1.8)
	pt3dadd(34.1, 315.58, -58.39, 1.8)
	pt3dadd(34.63, 323.69, -62.09, 1.8)
  }
}
proc shape3d_2() {
  dend[9] {	pt3dadd(34.89, 330.22, -62.09, 1.8)
	pt3dadd(35.37, 333.12, -64.85, 1.8)
  }
  dend[10] {pt3dclear()
	pt3dadd(-0.22, 23.93, -1.77, 2.7)
	pt3dadd(-0.01, 32.12, -2.26, 2.7)
	pt3dadd(-0.54, 38.88, -2.26, 2.7)
	pt3dadd(-1.61, 41.01, -2.26, 2.7)
	pt3dadd(-1.08, 43.26, -2.26, 2.7)
  }
  dend[11] {pt3dclear()
	pt3dadd(-1.08, 43.26, -2.26, 2.7)
	pt3dadd(3.69, 48.89, -1.74, 2.25)
	pt3dadd(7.66, 54.52, -5.74, 2.25)
	pt3dadd(9.52, 60.6, -8.74, 2.25)
	pt3dadd(10.31, 68.46, -10.57, 2.25)
	pt3dadd(13.23, 78.6, -13.21, 2.25)
	pt3dadd(15.08, 87.16, -16.27, 2.25)
	pt3dadd(17.44, 96.39, -16.27, 2.25)
	pt3dadd(20.61, 106.08, -16.27, 2.25)
	pt3dadd(21.98, 111.39, -16.27, 2.25)
	pt3dadd(24.1, 120.85, -15.1, 2.25)
	pt3dadd(25.15, 124.23, -18.23, 2.25)
  }
  dend[12] {pt3dclear()
	pt3dadd(25.15, 124.23, -18.23, 2.25)
	pt3dadd(27.57, 128.71, -18.23, 1.8)
	pt3dadd(29.16, 132.54, -17.37, 1.8)
	pt3dadd(29.95, 136.37, -17.37, 1.8)
	pt3dadd(30.22, 139.52, -20.28, 1.8)
	pt3dadd(33.66, 145.38, -20.28, 1.8)
	pt3dadd(34.45, 149.41, -20.28, 1.8)
	pt3dadd(37.89, 154.82, -19.89, 1.8)
	pt3dadd(39.21, 159.1, -19.89, 1.8)
	pt3dadd(42.13, 163.83, -19.89, 1.8)
	pt3dadd(44.37, 170.56, -21.26, 1.8)
	pt3dadd(47.28, 176.87, -21.94, 1.8)
	pt3dadd(50.99, 181.6, -24.31, 1.8)
	pt3dadd(56.29, 189.49, -24.31, 1.8)
	pt3dadd(59.17, 197.04, -24.31, 1.8)
	pt3dadd(63.93, 203.35, -25.13, 1.8)
	pt3dadd(67.11, 207.18, -25.13, 1.8)
	pt3dadd(68.43, 212.36, -27.3, 1.8)
	pt3dadd(68.44, 214.96, -26.15, 1.8)
	pt3dadd(72.94, 219.24, -26.15, 1.8)
	pt3dadd(76.65, 221.72, -27.52, 1.8)
	pt3dadd(81.42, 229.38, -27.2, 1.8)
	pt3dadd(84.86, 234.56, -29.98, 1.8)
	pt3dadd(89.82, 242.66, -32.26, 1.8)
	pt3dadd(92.73, 247.17, -32.4, 1.8)
	pt3dadd(99.09, 257.08, -32.4, 1.8)
	pt3dadd(102.23, 263.24, -33.62, 1.8)
	pt3dadd(106.2, 269.99, -36.22, 1.8)
	pt3dadd(108.32, 275.18, -36.22, 1.8)
	pt3dadd(109.91, 279.68, -36.46, 1.8)
	pt3dadd(112.3, 286.99, -37.76, 1.8)
	pt3dadd(116.27, 292.84, -41.83, 1.8)
	pt3dadd(120.51, 300.28, -41.83, 1.8)
	pt3dadd(123.7, 304.91, -45.17, 1.8)
	pt3dadd(127.67, 309.42, -45.17, 1.8)
	pt3dadd(129.26, 310.32, -45.17, 1.8)
	pt3dadd(131.9, 310.77, -46.2, 1.8)
  }
  dend[13] {pt3dclear()
	pt3dadd(25.15, 124.23, -18.23, 2.25)
	pt3dadd(25.85, 128.86, -14.42, 1.8)
	pt3dadd(27.97, 133.82, -14.42, 1.8)
	pt3dadd(29.69, 138.76, -15.07, 1.8)
	pt3dadd(33.66, 147.77, -13.98, 1.8)
	pt3dadd(36.84, 155.88, -14.25, 1.8)
	pt3dadd(38.97, 163.14, -11.42, 1.8)
	pt3dadd(42.68, 169.7, -10.28, 1.8)
	pt3dadd(44.8, 173.52, -7.83, 1.8)
	pt3dadd(47.91, 175.78, -7.83, 1.8)
	pt3dadd(50.24, 175.33, -3.22, 1.8)
	pt3dadd(51.56, 176, -1.8, 1.8)
	pt3dadd(49.97, 179.38, -0.8, 1.8)
	pt3dadd(47.59, 182.54, -1.28, 1.8)
	pt3dadd(47.32, 191.32, -2.27, 1.8)
	pt3dadd(48.12, 198.98, -0.17, 1.8)
	pt3dadd(49.64, 205.49, 1.63, 1.8)
	pt3dadd(52.55, 212.24, 3.21, 1.8)
	pt3dadd(53.88, 219.9, 2.91, 1.8)
	pt3dadd(54.98, 225.39, 3.8, 1.8)
	pt3dadd(56.3, 229.67, 5.98, 1.8)
	pt3dadd(56.57, 231.02, 4.82, 1.8)
  }
  dend[14] {pt3dclear()
	pt3dadd(56.57, 231.02, 4.82, 1.8)
	pt3dadd(58.61, 239.99, 4.57, 1.8)
	pt3dadd(61.79, 249.68, 4.57, 1.8)
	pt3dadd(61.85, 256.36, 6.81, 1.8)
	pt3dadd(63.71, 262.9, 7.05, 1.8)
	pt3dadd(66.09, 268.53, 8.97, 1.8)
	pt3dadd(68.11, 279.84, 12.06, 1.8)
	pt3dadd(68.64, 282.55, 12.06, 1.8)
	pt3dadd(72.08, 290.66, 12.03, 1.8)
	pt3dadd(73.51, 296.96, 14.95, 1.8)
	pt3dadd(76.42, 302.59, 17.22, 1.8)
	pt3dadd(78.01, 306.64, 18.69, 1.8)
	pt3dadd(78.54, 312.05, 21.83, 1.8)
	pt3dadd(78.52, 313.81, 22.06, 1.8)
	pt3dadd(79.05, 314.93, 22.06, 1.8)
  }
  dend[15] {pt3dclear()
	pt3dadd(56.57, 231.02, 4.82, 1.8)
	pt3dadd(57.45, 245.2, 7.72, 1.8)
	pt3dadd(57.71, 252.4, 12.58, 1.8)
	pt3dadd(57.05, 259.91, 14.77, 1.8)
	pt3dadd(58.64, 269.37, 15.9, 1.8)
	pt3dadd(58.64, 274.33, 18.69, 1.8)
	pt3dadd(59.91, 279.36, 23.53, 1.8)
	pt3dadd(61.24, 282.51, 25.06, 1.8)
  }
  dend[16] {pt3dclear()
	pt3dadd(-1.08, 43.26, -2.26, 2.7)
	pt3dadd(-1.48, 49.89, -3.65, 2.25)
	pt3dadd(-1.21, 58.22, -0.7, 2.25)
	pt3dadd(-1.48, 60.93, -0.7, 2.25)
	pt3dadd(-2.87, 63.46, -0.7, 2.25)
	pt3dadd(-3.66, 65.51, -0.7, 2.25)
  }
  dend[17] {pt3dclear()
	pt3dadd(-3.66, 65.51, -0.7, 2.25)
	pt3dadd(-6.84, 68.21, -0.7, 2.25)
	pt3dadd(-15.05, 76.55, -0.7, 2.25)
	pt3dadd(-19.02, 81.5, -1.04, 2.25)
	pt3dadd(-23.74, 86.36, -2.26, 2.25)
	pt3dadd(-28.24, 93.12, -2.34, 2.25)
	pt3dadd(-31.68, 98.52, -3.86, 2.25)
	pt3dadd(-34.59, 104.38, -5.06, 2.25)
	pt3dadd(-37.34, 109.01, -7.6, 2.25)
	pt3dadd(-39.72, 116.22, -6.74, 2.25)
	pt3dadd(-42.1, 124.78, -8.85, 2.25)
	pt3dadd(-46.66, 131.51, -7.69, 2.25)
	pt3dadd(-47.98, 136.7, -7.69, 2.25)
	pt3dadd(-49.04, 139.4, -8.87, 2.25)
  }
  dend[18] {pt3dclear()
	pt3dadd(-49.04, 139.4, -8.87, 2.25)
	pt3dadd(-51.16, 142.55, -8.19, 1.8)
	pt3dadd(-52.48, 149.54, -8.19, 1.8)
	pt3dadd(-53.28, 154.94, -6.95, 1.8)
	pt3dadd(-54.87, 160.35, -6.95, 1.8)
	pt3dadd(-57.82, 167.58, -5.18, 1.8)
	pt3dadd(-60.73, 175.46, -5.18, 1.8)
	pt3dadd(-62.32, 181.32, -5.18, 1.8)
	pt3dadd(-67.01, 189.28, -5.18, 1.8)
	pt3dadd(-68.33, 193.56, -5.18, 1.8)
	pt3dadd(-70.98, 197.64, -2.97, 1.8)
	pt3dadd(-72.57, 198.99, -2.97, 1.8)
	pt3dadd(-77.6, 209.81, -2.97, 1.8)
	pt3dadd(-82.35, 216.6, -2.97, 1.8)
	pt3dadd(-85.53, 223.39, -2.97, 1.8)
	pt3dadd(-86.85, 228.34, -2.97, 1.8)
	pt3dadd(-90.48, 234.48, -2.97, 1.8)
	pt3dadd(-94.72, 242.36, -2.93, 1.8)
	pt3dadd(-99.75, 250.02, -3.11, 1.8)
	pt3dadd(-106.2, 259.26, -3.36, 1.8)
	pt3dadd(-110.17, 267.14, -5.16, 1.8)
	pt3dadd(-113.08, 273, -5.17, 1.8)
	pt3dadd(-115.69, 280.2, -7.74, 1.8)
	pt3dadd(-118.07, 285.39, -7.74, 1.8)
	pt3dadd(-121.52, 291.24, -8.25, 1.8)
	pt3dadd(-122.97, 292.15, -10.14, 1.8)
	pt3dadd(-123.76, 299.13, -10.14, 1.8)
	pt3dadd(-127.47, 308.82, -10.38, 1.8)
	pt3dadd(-130.38, 317.83, -12.27, 1.8)
	pt3dadd(-134.82, 324.4, -13.77, 1.8)
	pt3dadd(-135.61, 329.81, -15.98, 1.8)
	pt3dadd(-140.38, 340.17, -18.83, 1.8)
	pt3dadd(-145.94, 348.76, -18.31, 1.8)
	pt3dadd(-146.47, 352.14, -18.92, 1.8)
  }
  dend[19] {pt3dclear()
	pt3dadd(-49.04, 139.4, -8.87, 2.25)
	pt3dadd(-48.51, 143.85, -8.87, 1.8)
	pt3dadd(-48.51, 149.26, -8.87, 1.8)
	pt3dadd(-48.51, 156.69, -8.87, 1.8)
	pt3dadd(-49.57, 163.45, -7.07, 1.8)
	pt3dadd(-51.43, 173.53, -6.61, 1.8)
	pt3dadd(-53.02, 180.97, -4.96, 1.8)
	pt3dadd(-55.4, 189.75, -4.96, 1.8)
	pt3dadd(-58.88, 201.74, -3.58, 1.8)
	pt3dadd(-60.21, 209.39, -3.58, 1.8)
	pt3dadd(-64.94, 221.09, -3.35, 1.8)
	pt3dadd(-68.12, 230.12, -1.84, 1.8)
	pt3dadd(-70.89, 236.05, -0.9, 1.8)
  }
  dend[20] {pt3dclear()
	pt3dadd(-70.89, 236.05, -0.9, 1.8)
	pt3dadd(-70.1, 242.16, -0.9, 1.8)
	pt3dadd(-69.83, 249.37, -0.9, 1.8)
	pt3dadd(-70.31, 256.63, -2.27, 1.8)
	pt3dadd(-70.04, 262.49, -2.27, 1.8)
	pt3dadd(-68.72, 268.57, -3.83, 1.8)
	pt3dadd(-67.98, 272.88, -3.83, 1.8)
	pt3dadd(-65.86, 278.96, -5.62, 1.8)
	pt3dadd(-64.01, 283.01, -8.82, 1.8)
	pt3dadd(-61.63, 284.14, -10.24, 1.8)
	pt3dadd(-62.16, 286.62, -10.24, 1.8)
	pt3dadd(-64.01, 290.22, -10.24, 1.8)
	pt3dadd(-63.45, 296.98, -12.64, 1.8)
	pt3dadd(-64.51, 302.16, -12.64, 1.8)
	pt3dadd(-65.04, 307.57, -15.7, 1.8)
	pt3dadd(-65.57, 312.3, -19.45, 1.8)
	pt3dadd(-64.85, 322.78, -22.54, 1.8)
	pt3dadd(-63.26, 328.19, -23.52, 1.8)
	pt3dadd(-61.67, 334.5, -26.43, 1.8)
	pt3dadd(-60.91, 342.26, -27.14, 1.8)
	pt3dadd(-61.18, 342.26, -26.68, 1.8)
  }
  dend[21] {pt3dclear()
	pt3dadd(-70.89, 236.05, -0.9, 1.8)
	pt3dadd(-75.14, 242.5, 0.57, 1.8)
	pt3dadd(-77.52, 250.64, 0.57, 1.8)
	pt3dadd(-78.85, 258.3, 3.2, 1.8)
	pt3dadd(-81.75, 266.71, 3.2, 1.8)
	pt3dadd(-84.67, 273.69, 4.76, 1.8)
	pt3dadd(-87.05, 280.45, 5.22, 1.8)
	pt3dadd(-91.74, 287.35, 7.19, 1.8)
	pt3dadd(-93.33, 290.96, 4.46, 1.8)
  }
  dend[22] {pt3dclear()
	pt3dadd(-3.66, 65.51, -0.7, 2.25)
	pt3dadd(-3.14, 73.84, -1.22, 2.25)
  }
}
proc shape3d_3() {
  dend[22] {	pt3dadd(-2.34, 82.18, -2.32, 2.25)
	pt3dadd(-1.28, 87.14, -2.32, 2.25)
	pt3dadd(-1.27, 96.07, -2.82, 2.25)
	pt3dadd(-1.01, 103.05, -3.19, 2.25)
	pt3dadd(-0.48, 108.69, -4.6, 2.25)
	pt3dadd(-1.33, 119.05, -1.09, 2.25)
	pt3dadd(-1.33, 125.8, -1.09, 2.25)
	pt3dadd(-0.01, 131.89, 0.06, 2.25)
	pt3dadd(0.92, 136.19, 0.88, 2.25)
	pt3dadd(1.65, 142.95, 0.88, 2.25)
	pt3dadd(2.45, 152.41, 3.21, 1.8)
	pt3dadd(2.4, 160.39, 3.71, 2.25)
	pt3dadd(3.92, 168.12, 6.74, 2.25)
	pt3dadd(4.45, 172.62, 6.74, 2.25)
	pt3dadd(4.45, 178.48, 6.74, 2.25)
	pt3dadd(5.51, 184.79, 9.24, 2.25)
	pt3dadd(5.99, 190.72, 8.93, 2.25)
	pt3dadd(7.58, 196.6, 10.87, 2.25)
	pt3dadd(8.91, 202.91, 10.25, 2.25)
	pt3dadd(9.97, 208.09, 10.68, 2.25)
	pt3dadd(7.47, 211.01, 10.68, 2.25)
	pt3dadd(7.21, 220.47, 13.06, 2.25)
	pt3dadd(6.94, 227.91, 14.33, 2.25)
	pt3dadd(7.33, 234.42, 14.43, 2.25)
	pt3dadd(7.33, 237.12, 14.43, 2.25)
  }
  dend[23] {pt3dclear()
	pt3dadd(7.33, 237.12, 14.43, 2.25)
	pt3dadd(6.27, 238.92, 17.69, 1.8)
	pt3dadd(6.01, 244.1, 17.69, 1.8)
	pt3dadd(5.48, 251.31, 20.3, 1.8)
	pt3dadd(7.32, 258.04, 22.43, 1.8)
	pt3dadd(9.7, 264.8, 27.4, 1.8)
	pt3dadd(11.29, 272.69, 29.58, 1.8)
	pt3dadd(11.86, 279.69, 31.63, 1.8)
	pt3dadd(12.92, 286, 34.21, 1.8)
	pt3dadd(13.45, 288.93, 37.16, 1.8)
	pt3dadd(16.1, 294.79, 37.7, 1.8)
	pt3dadd(18.71, 305.02, 40.11, 1.8)
	pt3dadd(20.3, 315.38, 40.28, 1.8)
	pt3dadd(16.23, 322.04, 40.28, 1.8)
	pt3dadd(13.05, 325.87, 39.37, 1.8)
	pt3dadd(11.73, 329.03, 39.71, 1.8)
	pt3dadd(11.73, 330.38, 39.71, 1.8)
  }
  dend[24] {pt3dclear()
	pt3dadd(7.33, 237.12, 14.43, 2.25)
	pt3dadd(8.85, 246.07, 16.83, 2.25)
	pt3dadd(9.38, 251.48, 16.83, 2.25)
	pt3dadd(9.65, 252.6, 16.82, 2.25)
  }
  dend[25] {pt3dclear()
	pt3dadd(9.65, 252.6, 16.82, 2.25)
	pt3dadd(12.3, 254.18, 16.82, 1.8)
	pt3dadd(15.74, 256.43, 17.81, 1.8)
	pt3dadd(20.43, 259.41, 20.14, 1.8)
	pt3dadd(24.14, 261.44, 20.14, 1.8)
	pt3dadd(28.64, 264.82, 21.06, 1.8)
	pt3dadd(33.14, 267.52, 23.74, 1.8)
	pt3dadd(36.32, 270.45, 26.02, 1.8)
	pt3dadd(38.17, 272.7, 26.02, 1.8)
	pt3dadd(40.31, 274.49, 25.66, 1.8)
	pt3dadd(44.28, 276.96, 27.04, 1.8)
	pt3dadd(49.05, 281.47, 27.04, 1.8)
	pt3dadd(52.22, 285.07, 28.19, 1.8)
	pt3dadd(56.46, 288, 28.19, 1.8)
	pt3dadd(62.81, 292.28, 28.19, 1.8)
	pt3dadd(67.04, 297.04, 27.27, 1.8)
	pt3dadd(71.27, 300.87, 27.27, 1.8)
	pt3dadd(74.98, 306.95, 25.25, 1.8)
	pt3dadd(77.63, 311.23, 24.48, 1.8)
	pt3dadd(79.78, 315.84, 23.94, 1.8)
  }
  dend[26] {pt3dclear()
	pt3dadd(9.65, 252.6, 16.82, 2.25)
	pt3dadd(8.33, 255.44, 16.82, 1.8)
	pt3dadd(8.86, 259.27, 16.82, 1.8)
	pt3dadd(11.77, 267.15, 19.65, 1.8)
	pt3dadd(14.42, 274.14, 19.65, 1.8)
	pt3dadd(18.17, 287.58, 21.94, 1.8)
	pt3dadd(20.55, 296.59, 21.42, 1.8)
	pt3dadd(21.19, 305.67, 21.42, 1.8)
	pt3dadd(23.58, 315.36, 21.42, 1.8)
	pt3dadd(23.6, 319.34, 21.42, 1.8)
	pt3dadd(25.72, 323.62, 20.65, 1.8)
	pt3dadd(27.84, 327.45, 20.65, 1.8)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
}

proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() { 
 // //***** PP syn   
 
 
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(1, 2, 3, 7, 8,9,12,13,14,15,18,19,20,21,22,23,24,25,26) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.99539,    0.5,    0.5,0.71527, 0.7058,0.71589,0.72402,0.89989,    0.5,    0.5,0.66259,0.88777,    0.5,    0.5,0.97481,    0.5,    0.5,    0.5,    0.5) 
for i= 0 , 18 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // 
} 
 
 // //***** MC syn   
 
dend[0] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 19 
dend[1] syn = new Exp2Syn(0.10593) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 20 
dend[4] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 21 
dend[5] syn = new Exp2Syn(0.17849) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 22 
dend[10] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 23 
dend[11] syn = new Exp2Syn(0.12888) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 24 
dend[16] syn = new Exp2Syn(0.49691) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 25 
 
 // //***** HIPP   
 
dend[1] syn = new Exp2Syn(0.99539) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 26 
dend[2] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 27 
dend[3] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 28 
dend[7] syn = new Exp2Syn(0.71527) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 29 
dend[8] syn = new Exp2Syn(0.7058) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 30 
dend[9] syn = new Exp2Syn(0.71589) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 31 
dend[12] syn = new Exp2Syn(0.72402) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 32 
dend[13] syn = new Exp2Syn(0.89989) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 33 
dend[14] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 34 
dend[15] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 35 
dend[18] syn = new Exp2Syn(0.66259) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 36 
dend[19] syn = new Exp2Syn(0.88777) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 37 
dend[20] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 38 
dend[21] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 39 
dend[22] syn = new Exp2Syn(0.97481) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 40 
dend[23] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 41 
dend[24] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 42 
dend[25] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 43 
dend[26] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 44 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 45 
 
 // //***** Sprout   
 
dend[0] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 46 
dend[1] syn = new Exp2Syn(0.10593) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 47 
dend[4] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 48 
dend[5] syn = new Exp2Syn(0.17849) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 49 
dend[10] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 50 
dend[11] syn = new Exp2Syn(0.12888) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 51 
dend[16] syn = new Exp2Syn(0.49691) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 52 

}
	func is_art() { return 0 }

	endtemplate GranuleCell64
//************************************************************************************************************