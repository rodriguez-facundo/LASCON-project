/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */
//Defining granule cell

	begintemplate GranuleCell65
	
// Original name on neuroMorpho.org 805881.CNG.swc

ndend1=27

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 26 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()
		dend[9] gcldend.append()
		dend[12] gcldend.append()


	pdend  = new SectionList()
		dend[1] pdend.append()
		dend[3] pdend.append()
		dend[6] pdend.append()
		dend[13] pdend.append()
		dend[18] pdend.append()
		


	mdend  = new SectionList()
		dend[5] mdend.append()
		dend[8] mdend.append()		  
		for i=10, 11  dend[i] mdend.append()
		dend[15] mdend.append()		  
		for i=19, 24  dend[i] mdend.append()

	ddend  = new SectionList()
		dend[2] ddend.append()
		dend[4] ddend.append()
		dend[7] ddend.append()
		dend[14] ddend.append()
		for i=16, 17 dend[i] ddend.append()
		for i=25, 26 dend[i] ddend.append()

}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }


  connect dend(0), soma(1)
  for i = 1, 2 connect dend[i](0), dend[i-1](1)
  connect dend[3](0), dend[1](1)
  for i = 4, 5 connect dend[i](0), dend[3](1)
  connect dend[6](0), dend(1)
  for i = 7, 8 connect dend[i](0), dend[6](1)
  connect dend[9](0), soma(1)
  for i = 10, 11 connect dend[i](0), dend[9](1)
  connect dend[12](0), soma(0)
  for i = 13, 14 connect dend[i](0), dend[i-1](1)
  connect dend[15](0), dend[13](1)
  for i = 16, 17 connect dend[i](0), dend[15](1)
  connect dend[18](0), dend[12](1)
  for i = 19, 20 connect dend[i](0), dend[i-1](1)
  connect dend[21](0), dend[19](1)
  for i = 22, 23 connect dend[i](0), dend[21](1)
  connect dend[24](0), dend[18](1)
  for i = 25, 26 connect dend[i](0), dend[24](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 5.53872)
	pt3dadd(8.47, 17.62, -1.05, 5.41)
  }
  dend {pt3dclear()
	pt3dadd(8.47, 17.62, -1.05, 3.15)
	pt3dadd(10.86, 18.3, -1.05, 3.15)
	pt3dadd(11.26, 20.9, -1.05, 2.7)
	pt3dadd(12.85, 24.06, -0.74, 2.7)
	pt3dadd(15.24, 27.44, -3.58, 2.7)
  }
  dend[1] {pt3dclear()
	pt3dadd(15.24, 27.44, -3.58, 2.7)
	pt3dadd(19.47, 30.59, -1.1, 2.25)
	pt3dadd(22.39, 33.07, -0.31, 2.25)
	pt3dadd(25.3, 36.9, -1.26, 2.25)
	pt3dadd(28.05, 41.08, -2.49, 2.25)
	pt3dadd(30.43, 45.13, -2.49, 2.25)
	pt3dadd(33.08, 49.19, -2.49, 2.7)
	pt3dadd(34.93, 52.12, -3.17, 2.7)
	pt3dadd(36.52, 54.15, -3.1, 2.7)
  }
  dend[2] {pt3dclear()
	pt3dadd(36.52, 54.15, -3.1, 2.7)
	pt3dadd(41.82, 61.58, -6.79, 1.8)
	pt3dadd(45.51, 69.71, -8.27, 1.8)
	pt3dadd(48.68, 75.79, -8.27, 1.8)
	pt3dadd(51.33, 82.55, -9.37, 1.8)
	pt3dadd(53.52, 93.41, -9.37, 1.8)
	pt3dadd(55.11, 99.95, -8.67, 1.8)
	pt3dadd(56.7, 105.13, -8.67, 1.8)
	pt3dadd(58.19, 112.38, -8.67, 1.8)
	pt3dadd(61.1, 120.72, -9.9, 1.8)
	pt3dadd(62.69, 127.25, -9.9, 1.8)
	pt3dadd(64.72, 137.36, -9.9, 1.8)
	pt3dadd(67.1, 145.7, -9.9, 1.8)
	pt3dadd(70.31, 155.04, -9.9, 1.8)
	pt3dadd(73.23, 160.69, -9.9, 1.8)
	pt3dadd(77.73, 168.58, -9.9, 1.8)
	pt3dadd(81.51, 176.26, -10.99, 1.8)
	pt3dadd(83.1, 179.19, -10.99, 1.8)
	pt3dadd(86.27, 185.95, -10.99, 1.8)
	pt3dadd(88.92, 191.35, -11, 1.8)
	pt3dadd(92.91, 198.83, -11, 1.8)
	pt3dadd(97.67, 206.27, -11, 1.8)
	pt3dadd(100.85, 213.7, -12.98, 1.8)
	pt3dadd(104.24, 223.26, -13.34, 1.8)
	pt3dadd(107.68, 232.27, -16.02, 1.8)
	pt3dadd(110.71, 238.28, -16.02, 1.8)
	pt3dadd(117.07, 249.1, -17.39, 1.8)
	pt3dadd(120.25, 255.63, -18.83, 1.8)
	pt3dadd(122.32, 261.41, -18.83, 1.8)
	pt3dadd(124.97, 264.79, -20.06, 1.8)
	pt3dadd(128.94, 270.87, -20.06, 1.8)
	pt3dadd(131.85, 274.25, -20.06, 1.8)
	pt3dadd(136.63, 277.33, -19.65, 1.8)
	pt3dadd(141.66, 279.58, -19.65, 1.8)
	pt3dadd(146.16, 283.86, -16.58, 1.8)
  }
  dend[3] {pt3dclear()
	pt3dadd(36.52, 54.15, -3.1, 2.7)
	pt3dadd(41.55, 64.06, -3.47, 2.25)
	pt3dadd(44.2, 71.04, -3.47, 2.25)
	pt3dadd(46.32, 76.45, -3.47, 2.25)
	pt3dadd(47.97, 83.53, -3.47, 2.25)
	pt3dadd(50.09, 90.74, -3.47, 2.25)
	pt3dadd(52.21, 96.82, -3.47, 2.25)
	pt3dadd(53.77, 103.3, -3.47, 2.25)
	pt3dadd(55.1, 109.84, -3.47, 2.25)
	pt3dadd(56.16, 114.34, -3.47, 2.25)
	pt3dadd(56.95, 117.27, -3.47, 2.25)
  }
  dend[4] {pt3dclear()
	pt3dadd(56.95, 117.27, -3.47, 2.25)
	pt3dadd(59.9, 124.35, -3.47, 2.25)
	pt3dadd(62.55, 131.79, -1.62, 2.25)
	pt3dadd(65.46, 138.55, -1.62, 2.25)
	pt3dadd(69.09, 146.66, -1.64, 2.25)
	pt3dadd(72.27, 152.51, -0.18, 2.25)
	pt3dadd(74.65, 157.47, -0.18, 2.25)
	pt3dadd(78.36, 165.68, -0.78, 2.25)
	pt3dadd(82.33, 173.34, -0.78, 2.25)
	pt3dadd(86.3, 181, 1.19, 2.25)
	pt3dadd(91.95, 189.51, 0.37, 2.25)
	pt3dadd(96.45, 197.39, 1.82, 2.25)
	pt3dadd(101.21, 204.6, 4.25, 2.25)
	pt3dadd(104.63, 213.11, 6.61, 2.25)
	pt3dadd(107.01, 218.96, 5.97, 2.25)
	pt3dadd(109.39, 223.92, 6.9, 2.25)
	pt3dadd(113.56, 230.25, 7.19, 2.25)
	pt3dadd(117.79, 236.34, 8.74, 2.25)
	pt3dadd(120.97, 240.62, 8.74, 2.25)
	pt3dadd(127.06, 245.8, 8.74, 2.25)
	pt3dadd(131.49, 251.83, 7.61, 2.25)
	pt3dadd(135.46, 255.66, 6.53, 2.25)
	pt3dadd(141.28, 261.06, 6.53, 2.25)
	pt3dadd(147.37, 266.7, 6.53, 2.25)
	pt3dadd(151.09, 271.5, 5.93, 2.25)
	pt3dadd(156.65, 279.39, 4.41, 2.25)
	pt3dadd(160.89, 285.47, 4.41, 2.25)
	pt3dadd(165.75, 293.46, 5.11, 2.25)
	pt3dadd(170.25, 299.31, 3.69, 2.25)
	pt3dadd(173.7, 300.89, 4.16, 2.25)
	pt3dadd(174.76, 302.24, 1.94, 2.25)
  }
  dend[5] {pt3dclear()
	pt3dadd(56.95, 117.27, -3.47, 2.25)
	pt3dadd(58.11, 126.78, -3.47, 2.25)
	pt3dadd(59.96, 136.25, -2.06, 2.25)
	pt3dadd(60.52, 144.03, -2.06, 2.25)
	pt3dadd(61.31, 151.24, -2.28, 2.25)
	pt3dadd(62.37, 157.55, -2.44, 2.25)
	pt3dadd(63.97, 164.53, -2.44, 2.25)
	pt3dadd(65.03, 169.94, -2.44, 2.25)
	pt3dadd(65.3, 176.69, -0.94, 2.25)
	pt3dadd(63.8, 184.66, -0.94, 2.25)
	pt3dadd(63.27, 190.96, -1.94, 2.25)
	pt3dadd(63.27, 196.14, -1.47, 2.25)
	pt3dadd(63.78, 201.55, 0.48, 2.25)
	pt3dadd(65.9, 207.18, -0.33, 2.25)
	pt3dadd(67.22, 211.49, -0.34, 2.25)
	pt3dadd(68.28, 214.42, 2.13, 2.25)
	pt3dadd(69.25, 222, 4.71, 2.25)
	pt3dadd(71.63, 227.19, 5.69, 2.25)
	pt3dadd(71.89, 230.34, 5.69, 2.25)
	pt3dadd(75.34, 235.52, 8.67, 2.25)
	pt3dadd(78.63, 243.03, 7.64, 2.25)
	pt3dadd(81.28, 246.41, 8.56, 2.25)
	pt3dadd(83.92, 250.24, 7.78, 2.25)
	pt3dadd(86.31, 253.39, 7.78, 2.25)
	pt3dadd(88.69, 256.09, 8.62, 1.8)
	pt3dadd(89.85, 257.95, 8.54, 1.8)
  }
  dend[6] {pt3dclear()
	pt3dadd(15.24, 27.44, -3.58, 2.7)
	pt3dadd(14.72, 28.87, -3.84, 2.25)
	pt3dadd(16.05, 30.68, -4.21, 2.25)
  }
  dend[7] {pt3dclear()
	pt3dadd(16.05, 30.68, -4.21, 2.25)
	pt3dadd(19.49, 34.73, -4.21, 2.25)
	pt3dadd(23.19, 39.46, -3.79, 2.25)
	pt3dadd(25.58, 43.52, -3.79, 1.8)
	pt3dadd(28.23, 48.25, -5.65, 1.8)
	pt3dadd(30.24, 52.9, -5.65, 1.8)
	pt3dadd(33.15, 60.34, -6.42, 2.25)
	pt3dadd(36.06, 67.54, -4.83, 2.25)
	pt3dadd(37.76, 73.88, -4.83, 2.25)
	pt3dadd(40.41, 81.54, -6.94, 2.25)
	pt3dadd(43.32, 89.65, -8.01, 2.25)
	pt3dadd(45.77, 96.28, -9.89, 2.25)
	pt3dadd(47.09, 99.43, -9.89, 2.25)
	pt3dadd(50.54, 106.64, -11.47, 2.25)
	pt3dadd(52.65, 110.47, -11.47, 2.25)
	pt3dadd(54.97, 114.8, -14.42, 2.25)
	pt3dadd(57.88, 119.08, -14.42, 2.25)
	pt3dadd(61.32, 123.36, -14.71, 2.25)
	pt3dadd(62.91, 126.06, -14.74, 2.25)
	pt3dadd(65.03, 128.99, -15.33, 1.8)
	pt3dadd(69.16, 139.56, -16.75, 2.25)
	pt3dadd(71.01, 144.74, -18.18, 2.25)
	pt3dadd(72.86, 149.47, -18.43, 2.25)
	pt3dadd(75.23, 156.53, -19.03, 2.25)
	pt3dadd(78.94, 163.96, -20.57, 2.25)
	pt3dadd(81.85, 168.69, -22.34, 1.8)
	pt3dadd(85.49, 175.08, -23.22, 1.8)
	pt3dadd(89.2, 181.16, -25.29, 2.25)
	pt3dadd(92.91, 187.24, -25.31, 2.25)
	pt3dadd(95.96, 191.93, -26.7, 2.25)
	pt3dadd(100.73, 198.23, -26.7, 2.25)
	pt3dadd(104.97, 203.42, -28.94, 2.25)
	pt3dadd(107.61, 206.12, -28.94, 2.25)
	pt3dadd(112.88, 212.48, -29.92, 2.25)
	pt3dadd(116.85, 219.46, -32.67, 2.25)
	pt3dadd(121.36, 225.54, -34.63, 2.25)
	pt3dadd(125.36, 230.53, -35.31, 2.25)
	pt3dadd(130.12, 235.93, -36.97, 2.25)
	pt3dadd(134.36, 241.34, -38.31, 2.25)
	pt3dadd(138.33, 246.52, -39.58, 2.25)
	pt3dadd(142.42, 251.3, -39.58, 2.25)
	pt3dadd(146.92, 257.38, -41.15, 2.25)
	pt3dadd(151.96, 261.89, -41.58, 2.25)
	pt3dadd(156.72, 266.62, -43.29, 2.25)
	pt3dadd(159.7, 269.5, -43.67, 2.25)
	pt3dadd(165.52, 273.1, -41.99, 2.25)
  }
  dend[8] {pt3dclear()
	pt3dadd(16.05, 30.68, -4.21, 2.25)
	pt3dadd(14.2, 35.63, -5.3, 2.25)
	pt3dadd(13.93, 35.65, -6.08, 1.8)
	pt3dadd(15.26, 41.29, -6.08, 1.8)
	pt3dadd(17.11, 47.82, -6.28, 1.8)
	pt3dadd(17.44, 53.88, -6.28, 1.8)
	pt3dadd(17.7, 59.29, -6.78, 1.8)
	pt3dadd(17.17, 67.17, -6.78, 1.8)
	pt3dadd(15.33, 75.76, -8.39, 1.8)
	pt3dadd(14.54, 77.78, -8.39, 1.8)
	pt3dadd(13.74, 85.67, -10.5, 1.8)
	pt3dadd(12.93, 92.08, -11.1, 1.8)
	pt3dadd(12.4, 101.77, -11.28, 1.8)
	pt3dadd(10.81, 111.45, -12.38, 1.8)
	pt3dadd(9.2, 121.66, -12.77, 1.8)
	pt3dadd(9.2, 126.16, -14.27, 1.8)
	pt3dadd(12.37, 133.82, -14.87, 1.8)
	pt3dadd(16.16, 142.28, -17.62, 1.8)
	pt3dadd(19.6, 151.29, -18.85, 1.8)
	pt3dadd(22.25, 159.85, -21.58, 1.8)
	pt3dadd(24.83, 168.51, -23.94, 1.8)
	pt3dadd(27.22, 176.84, -26.12, 1.8)
	pt3dadd(29.6, 182.7, -28.26, 1.8)
	pt3dadd(32.43, 193.28, -30.41, 1.8)
	pt3dadd(34.02, 198.91, -33.32, 1.8)
	pt3dadd(34.82, 205.67, -35.1, 1.8)
	pt3dadd(35.38, 213.2, -36.8, 1.8)
	pt3dadd(37.76, 220.86, -39.47, 1.8)
	pt3dadd(39.62, 226.5, -41.86, 1.8)
	pt3dadd(41.11, 236.03, -44.8, 1.8)
	pt3dadd(42.7, 242.34, -47.21, 1.8)
	pt3dadd(44.29, 250.9, -49.63, 1.8)
  }
}
proc shape3d_2() {
  dend[8] {	pt3dadd(46.57, 258.35, -52.12, 1.8)
	pt3dadd(49.75, 262.41, -55.68, 1.8)
	pt3dadd(51.86, 266.01, -57.82, 1.8)
  }
  dend[9] {pt3dclear()
	pt3dadd(8.47, 17.62, -1.05, 2.7)
	pt3dadd(8.28, 23, 2.46, 2.7)
	pt3dadd(10.4, 26.38, 1.23, 2.25)
	pt3dadd(13.05, 29.08, -0.04, 2.25)
	pt3dadd(16.49, 35.61, -2.34, 2.25)
	pt3dadd(20.19, 44.17, -4.44, 2.25)
	pt3dadd(20.55, 46.42, -5.9, 2.25)
	pt3dadd(21.34, 49.58, -6.01, 2.25)
	pt3dadd(21.87, 50.7, -6.01, 2.25)
  }
  dend[10] {pt3dclear()
	pt3dadd(21.87, 50.7, -6.01, 2.25)
	pt3dadd(25.58, 54.53, -7.88, 1.8)
	pt3dadd(28.49, 59.49, -6.88, 1.8)
	pt3dadd(30.08, 63.32, -6.88, 1.8)
	pt3dadd(32.93, 70.38, -9.36, 1.8)
	pt3dadd(33.99, 74.89, -9.36, 1.8)
	pt3dadd(34.52, 79.84, -10.82, 1.8)
	pt3dadd(35.58, 84.8, -10.82, 1.8)
	pt3dadd(35.22, 88.22, -10.82, 1.8)
	pt3dadd(38.13, 96.56, -10.74, 1.8)
	pt3dadd(41.05, 102.64, -12.69, 1.8)
	pt3dadd(42.63, 106.02, -13.12, 1.8)
	pt3dadd(45.33, 113.2, -15.18, 1.8)
	pt3dadd(47.72, 119.51, -14.18, 1.8)
	pt3dadd(49.3, 124.02, -16.81, 1.8)
	pt3dadd(52.13, 130.7, -15.76, 1.8)
	pt3dadd(53.72, 135.43, -15.76, 1.8)
	pt3dadd(57.16, 142.19, -18.5, 1.8)
	pt3dadd(58.22, 145.6, -18.5, 1.8)
	pt3dadd(59.94, 151, -18.55, 1.8)
	pt3dadd(64.44, 158.89, -18.55, 1.8)
	pt3dadd(67.09, 164.97, -18.55, 1.8)
	pt3dadd(70.79, 173.11, -19.33, 1.8)
	pt3dadd(75.29, 181.22, -21.7, 1.8)
	pt3dadd(78.47, 186.4, -23.53, 1.8)
	pt3dadd(80.07, 189.32, -23.53, 1.8)
	pt3dadd(83.52, 195.18, -25.54, 1.8)
	pt3dadd(86.16, 199.24, -26.53, 1.8)
	pt3dadd(90.66, 207.35, -28.38, 1.8)
	pt3dadd(94.33, 213.48, -28.38, 1.8)
	pt3dadd(99.09, 220.69, -30.8, 1.8)
	pt3dadd(103.33, 227.9, -32.46, 1.8)
	pt3dadd(106.26, 235.43, -34.67, 1.8)
	pt3dadd(109.17, 241.51, -36.87, 1.8)
	pt3dadd(112.09, 246.47, -38.39, 1.8)
	pt3dadd(114.67, 251.8, -37.87, 1.8)
  }
  dend[11] {pt3dclear()
	pt3dadd(21.87, 50.7, -6.01, 2.25)
	pt3dadd(19.6, 55.25, -11.72, 2.25)
	pt3dadd(20.13, 62.69, -13.66, 2.25)
	pt3dadd(21.19, 69.45, -18.09, 1.8)
	pt3dadd(21.54, 74.98, -19.11, 1.8)
	pt3dadd(21.8, 77.68, -19.11, 1.8)
	pt3dadd(21.01, 84.66, -21.86, 1.8)
	pt3dadd(20.74, 89.39, -23.99, 1.8)
	pt3dadd(20.08, 94.08, -25.41, 1.8)
	pt3dadd(20.87, 104.44, -27.19, 1.8)
	pt3dadd(21.14, 113.45, -30.59, 1.8)
	pt3dadd(19.95, 120.5, -32.35, 1.8)
	pt3dadd(19.95, 130.42, -34.1, 1.8)
	pt3dadd(20.21, 138.75, -36.43, 1.8)
	pt3dadd(21.13, 145.25, -39.66, 1.8)
	pt3dadd(22.99, 150.21, -42.18, 1.8)
	pt3dadd(24.84, 156.52, -44.47, 1.8)
	pt3dadd(25.9, 161.25, -46.6, 1.8)
	pt3dadd(25.54, 167.88, -50.17, 1.8)
	pt3dadd(26.87, 175.31, -54.54, 1.8)
	pt3dadd(29.78, 186.8, -57.54, 1.8)
	pt3dadd(31.07, 191.93, -59.58, 1.8)
	pt3dadd(34.77, 199.59, -60.87, 1.8)
	pt3dadd(37.42, 205.22, -64.42, 1.8)
	pt3dadd(39.33, 213.28, -68.51, 1.8)
	pt3dadd(41.71, 222.77, -71.57, 1.8)
	pt3dadd(43.56, 229.07, -71.07, 1.8)
	pt3dadd(46.12, 236.1, -72.81, 1.8)
	pt3dadd(47.97, 239.03, -74.94, 1.8)
	pt3dadd(49.03, 243.09, -73.62, 1.8)
	pt3dadd(48.24, 244.21, -73.62, 1.8)
	pt3dadd(47.18, 242.41, -73.62, 1.8)
	pt3dadd(47.45, 241.06, -73.62, 1.8)
	pt3dadd(50.89, 236.1, -75.81, 1.8)
	pt3dadd(52.74, 232.27, -74.52, 1.8)
  }
  dend[12] {pt3dclear()
	pt3dadd(0, 0, 0, 3.6)
	pt3dadd(-8.54, 19.98, 0.97, 3.6)
	pt3dadd(-12.25, 21.78, 1.33, 3.6)
	pt3dadd(-17.01, 26.06, 4.7, 3.6)
	pt3dadd(-22.84, 30.79, 4.7, 3.6)
	pt3dadd(-27.56, 34, 4.7, 3.6)
	pt3dadd(-32.33, 39.41, 5.65, 3.6)
  }
  dend[13] {pt3dclear()
	pt3dadd(-32.33, 39.41, 5.65, 3.6)
	pt3dadd(-38.15, 43.01, 5.65, 2.25)
	pt3dadd(-42.66, 47.29, 7.38, 2.25)
	pt3dadd(-46.89, 51.12, 7.71, 2.25)
	pt3dadd(-48.45, 51.3, 8.78, 2.25)
  }
  dend[14] {pt3dclear()
	pt3dadd(-48.45, 51.3, 8.78, 2.25)
	pt3dadd(-50.33, 58.08, 9.15, 1.8)
	pt3dadd(-52.45, 63.26, 9.15, 1.8)
	pt3dadd(-56.17, 67.95, 10.19, 1.8)
	pt3dadd(-57.76, 72.23, 13.93, 1.8)
	pt3dadd(-58.55, 74.04, 13.93, 1.8)
	pt3dadd(-59.88, 74.94, 13.93, 1.8)
	pt3dadd(-63.58, 80.79, 14.75, 1.8)
	pt3dadd(-67.43, 84.35, 16.34, 1.8)
	pt3dadd(-70.61, 89.31, 17.57, 1.8)
	pt3dadd(-74.32, 95.39, 19.29, 1.8)
	pt3dadd(-77.23, 100.12, 19.7, 1.8)
	pt3dadd(-79.77, 101.02, 19.7, 1.8)
	pt3dadd(-83.22, 107.33, 22.21, 1.8)
	pt3dadd(-86.13, 112.96, 21.84, 1.8)
	pt3dadd(-89.57, 118.37, 23.48, 1.8)
	pt3dadd(-93.28, 123.1, 23.48, 1.8)
	pt3dadd(-98.62, 128.3, 23.48, 1.8)
	pt3dadd(-100.74, 130.78, 23.48, 1.8)
	pt3dadd(-104.18, 133.48, 23.76, 1.8)
	pt3dadd(-108.95, 140.69, 23.15, 1.8)
	pt3dadd(-111.07, 143.39, 25.34, 1.8)
	pt3dadd(-113.77, 149.7, 25.26, 1.8)
	pt3dadd(-115.1, 155.79, 24.37, 1.8)
	pt3dadd(-117.22, 164.8, 23.58, 1.8)
	pt3dadd(-121.83, 173.78, 26.31, 1.8)
	pt3dadd(-124.21, 181.44, 25.85, 1.8)
	pt3dadd(-128.18, 187.75, 26.15, 1.8)
	pt3dadd(-131.3, 192, 27.05, 1.8)
	pt3dadd(-132.63, 203.26, 28.06, 1.8)
	pt3dadd(-133.95, 214.98, 30.4, 1.8)
	pt3dadd(-137.1, 229.59, 34.22, 1.8)
	pt3dadd(-138.69, 238.37, 34.12, 1.8)
	pt3dadd(-140.85, 245.98, 33.61, 1.8)
	pt3dadd(-141.33, 247.07, 32.18, 1.8)
  }
  dend[15] {pt3dclear()
	pt3dadd(-48.45, 51.3, 8.78, 2.25)
	pt3dadd(-56.6, 55.3, 8.78, 2.25)
	pt3dadd(-66.66, 60.71, 7.9, 2.25)
	pt3dadd(-73.55, 64.09, 6.68, 2.25)
	pt3dadd(-80.62, 66.02, 6.68, 2.25)
	pt3dadd(-86.71, 68.95, 8.5, 2.25)
	pt3dadd(-93.33, 72.78, 8.13, 2.25)
	pt3dadd(-97.56, 75.71, 6.22, 2.25)
	pt3dadd(-103.88, 79.15, 6.22, 2.25)
	pt3dadd(-110.5, 84.33, 4.87, 2.25)
	pt3dadd(-116.59, 88.61, 2.92, 2.25)
	pt3dadd(-121.89, 91.54, 2.49, 2.25)
	pt3dadd(-128.76, 93.82, 2.49, 2.25)
	pt3dadd(-133.79, 96.98, 0.17, 2.25)
	pt3dadd(-138.29, 101.03, -0.51, 2.25)
	pt3dadd(-142.53, 105.31, -1.5, 2.25)
	pt3dadd(-148.35, 110.27, -3.06, 2.25)
	pt3dadd(-153.62, 112.82, -3.06, 2.25)
	pt3dadd(-159.98, 115.75, -3.06, 2.25)
	pt3dadd(-165.01, 119.13, -3.06, 2.25)
	pt3dadd(-170.04, 122.51, -4.45, 2.25)
	pt3dadd(-174.16, 124.8, -4.45, 2.25)
  }
  dend[16] {pt3dclear()
	pt3dadd(-174.16, 124.8, -4.45, 2.25)
	pt3dadd(-179.72, 125.92, -7.42, 1.8)
	pt3dadd(-185.02, 126.83, -8.83, 1.8)
	pt3dadd(-191.37, 128.63, -10.71, 1.8)
	pt3dadd(-197.68, 130.55, -12.54, 1.8)
	pt3dadd(-202.98, 134.38, -14.43, 1.8)
	pt3dadd(-208.8, 135.95, -16.51, 1.8)
	pt3dadd(-215.95, 136.63, -16.51, 1.8)
	pt3dadd(-222.02, 137.45, -18.2, 1.8)
	pt3dadd(-227.84, 142.4, -21.82, 1.8)
	pt3dadd(-234.2, 148.26, -23.58, 1.8)
	pt3dadd(-239.76, 153.67, -25.79, 1.8)
	pt3dadd(-245.75, 156.45, -28.48, 1.8)
	pt3dadd(-250.52, 158.93, -30.71, 1.8)
	pt3dadd(-257.4, 159.83, -32, 1.8)
	pt3dadd(-262.96, 161.63, -33.7, 1.8)
	pt3dadd(-271.34, 163.32, -36.82, 1.8)
	pt3dadd(-274.25, 163.32, -38.58, 1.8)
	pt3dadd(-275.84, 163.1, -38.58, 1.8)
	pt3dadd(-279.01, 159.72, -38.58, 1.8)
	pt3dadd(-281.13, 159.27, -41.44, 1.8)
	pt3dadd(-281.4, 162.65, -40.06, 1.8)
  }
  dend[17] {pt3dclear()
	pt3dadd(-174.16, 124.8, -4.45, 2.25)
	pt3dadd(-177.1, 128.63, -7.21, 2.25)
	pt3dadd(-179.49, 130.65, -7.21, 1.8)
	pt3dadd(-184.78, 134.48, -9.39, 1.8)
	pt3dadd(-188.49, 137.86, -9.39, 1.8)
	pt3dadd(-192.73, 143.27, -10.79, 1.8)
	pt3dadd(-196.7, 145.15, -10.79, 1.8)
	pt3dadd(-201.73, 151, -13.76, 1.8)
	pt3dadd(-206.23, 158.66, -16.4, 1.8)
	pt3dadd(-209.41, 164.07, -17.72, 1.8)
	pt3dadd(-214.62, 170.45, -19.72, 1.8)
	pt3dadd(-220.18, 176.54, -22.56, 1.8)
	pt3dadd(-224.15, 180.17, -24.42, 1.8)
	pt3dadd(-226.01, 184.22, -26.9, 1.8)
	pt3dadd(-230.71, 184, -28.76, 1.8)
	pt3dadd(-236.27, 186.02, -28.76, 1.8)
	pt3dadd(-241.3, 186.7, -28.76, 1.8)
	pt3dadd(-246.6, 187.6, -28.76, 1.8)
	pt3dadd(-250.04, 188.5, -28.03, 1.8)
	pt3dadd(-257.54, 185.62, -28.03, 1.8)
	pt3dadd(-261.51, 184.04, -30.73, 1.8)
  }
  dend[18] {pt3dclear()
	pt3dadd(-32.33, 39.41, 5.65, 3.6)
	pt3dadd(-35.16, 43.65, 3.11, 2.25)
	pt3dadd(-38.34, 47.26, 1.3, 2.25)
	pt3dadd(-42.05, 53.11, -0.69, 2.7)
	pt3dadd(-46.72, 58.72, -0.56, 2.7)
  }
}
proc shape3d_3() {
  dend[18] {	pt3dadd(-50.42, 65.03, -0.93, 2.7)
	pt3dadd(-53.34, 69.98, -0.93, 2.7)
	pt3dadd(-56.78, 75.17, -0.93, 2.7)
	pt3dadd(-58.33, 75.7, -3.64, 2.25)
	pt3dadd(-59.13, 76.6, -3.64, 2.25)
  }
  dend[19] {pt3dclear()
	pt3dadd(-59.13, 76.6, -3.64, 2.25)
	pt3dadd(-63.89, 79.75, -5.68, 2.25)
	pt3dadd(-68.39, 84.48, -5.68, 2.25)
	pt3dadd(-70.25, 86.28, -7.84, 2.25)
	pt3dadd(-74.75, 90.79, -7.84, 2.25)
	pt3dadd(-80.05, 96.19, -7.84, 2.25)
	pt3dadd(-83.5, 98.22, -8.98, 2.25)
	pt3dadd(-86.42, 101.83, -10.92, 2.25)
	pt3dadd(-89.06, 104.31, -11.1, 2.25)
	pt3dadd(-91.71, 106.33, -12.62, 2.25)
	pt3dadd(-96.21, 108.59, -13.97, 2.25)
	pt3dadd(-100.98, 112.19, -15.25, 2.25)
	pt3dadd(-106.81, 117.37, -16.6, 2.25)
	pt3dadd(-111.56, 118.9, -20.15, 2.25)
	pt3dadd(-117.12, 123.4, -21.42, 2.25)
	pt3dadd(-121.62, 128.81, -23.92, 2.25)
	pt3dadd(-126.39, 135.12, -26.54, 2.25)
	pt3dadd(-128.24, 138.95, -27.52, 2.25)
	pt3dadd(-131.78, 142.3, -33, 2.25)
  }
  dend[20] {pt3dclear()
	pt3dadd(-131.78, 142.3, -33, 2.25)
	pt3dadd(-134.16, 146.81, -34.82, 1.8)
	pt3dadd(-136.55, 150.64, -37.05, 1.8)
	pt3dadd(-139.99, 154.02, -39.71, 1.8)
	pt3dadd(-143.7, 158.52, -40.39, 1.8)
	pt3dadd(-146.39, 162.55, -42.38, 1.8)
	pt3dadd(-147.97, 168.63, -45.14, 1.8)
	pt3dadd(-149.56, 176.07, -47.64, 1.8)
	pt3dadd(-149.53, 183.83, -50.56, 1.8)
	pt3dadd(-151.12, 188.56, -52, 1.8)
	pt3dadd(-152.97, 194.19, -55.75, 1.8)
	pt3dadd(-155.84, 198.23, -58.01, 1.8)
	pt3dadd(-156.37, 203.63, -59.02, 1.8)
	pt3dadd(-157.96, 205.89, -59.02, 1.8)
	pt3dadd(-159.81, 206.34, -60.48, 1.8)
	pt3dadd(-160.61, 205.89, -60.48, 1.8)
	pt3dadd(-160.87, 202.73, -60.48, 1.8)
  }
  dend[21] {pt3dclear()
	pt3dadd(-131.78, 142.3, -33, 2.25)
	pt3dadd(-135.96, 153.34, -31.29, 2.25)
	pt3dadd(-138.61, 161.9, -33.76, 2.25)
	pt3dadd(-141.19, 165.32, -33.76, 2.25)
	pt3dadd(-144.37, 173.88, -37.16, 2.25)
	pt3dadd(-145.96, 179.06, -38.38, 1.8)
	pt3dadd(-146.49, 185.37, -41.21, 2.25)
	pt3dadd(-148.38, 191.43, -45.51, 2.25)
  }
  dend[22] {pt3dclear()
	pt3dadd(-148.38, 191.43, -45.51, 2.25)
	pt3dadd(-148.65, 196.38, -46.58, 2.25)
	pt3dadd(-149.17, 199.31, -46.58, 2.25)
	pt3dadd(-151.82, 201.34, -46.58, 2.25)
	pt3dadd(-153.15, 205.85, -46.58, 2.25)
	pt3dadd(-158.75, 210.25, -46.54, 2.25)
  }
  dend[23] {pt3dclear()
	pt3dadd(-148.38, 191.43, -45.51, 2.25)
	pt3dadd(-150.18, 196.28, -48.88, 2.25)
	pt3dadd(-150.71, 198.53, -53.73, 2.25)
	pt3dadd(-153.09, 201.23, -54.82, 2.25)
	pt3dadd(-157.33, 204.61, -58.53, 2.25)
	pt3dadd(-163.68, 207.54, -63.09, 2.25)
  }
  dend[24] {pt3dclear()
	pt3dadd(-59.13, 76.6, -3.64, 2.25)
	pt3dadd(-58.85, 79.62, -3.64, 2.25)
	pt3dadd(-60.17, 83.68, -3.64, 2.25)
	pt3dadd(-62.29, 88.18, -6.19, 2.25)
	pt3dadd(-66.53, 93.82, -8.86, 2.25)
	pt3dadd(-69.97, 98.1, -10.78, 2.25)
	pt3dadd(-74.49, 101.75, -12.14, 2.25)
	pt3dadd(-78.46, 105.8, -14.72, 2.25)
	pt3dadd(-82.44, 108.96, -17.14, 2.25)
	pt3dadd(-86.41, 114.59, -20.8, 2.25)
	pt3dadd(-90.12, 118.65, -23.02, 2.25)
	pt3dadd(-93.3, 118.92, -23.02, 2.25)
	pt3dadd(-96.22, 121.4, -25.08, 2.25)
	pt3dadd(-98.6, 122.98, -26.72, 2.25)
  }
  dend[25] {pt3dclear()
	pt3dadd(-98.6, 122.98, -26.72, 2.25)
	pt3dadd(-101.51, 128.16, -28.94, 2.25)
	pt3dadd(-103.63, 131.77, -31.07, 2.25)
	pt3dadd(-106.01, 133.79, -33.39, 2.25)
	pt3dadd(-111.49, 136.9, -35.69, 2.25)
	pt3dadd(-116.52, 141.86, -38.84, 2.25)
	pt3dadd(-120.75, 146.59, -41.63, 2.25)
	pt3dadd(-124.46, 151.32, -44.34, 2.25)
	pt3dadd(-127.64, 156.27, -49.5, 2.25)
	pt3dadd(-130.7, 159.95, -49.33, 2.25)
	pt3dadd(-132.82, 166.48, -55.26, 2.25)
	pt3dadd(-133.62, 173.24, -59.22, 2.25)
	pt3dadd(-135.47, 178.65, -62.22, 2.25)
	pt3dadd(-139.83, 183.45, -64.79, 2.25)
	pt3dadd(-141.42, 187.73, -67.44, 2.25)
	pt3dadd(-142.48, 190.66, -68.86, 2.25)
	pt3dadd(-143.27, 191.56, -68.86, 2.25)
	pt3dadd(-147.51, 191.34, -72.32, 1.8)
	pt3dadd(-150.68, 192.24, -73.9, 1.8)
	pt3dadd(-152.8, 194.04, -73.9, 1.8)
	pt3dadd(-155.45, 196.29, -76, 1.8)
	pt3dadd(-157.57, 196.74, -78.76, 1.8)
	pt3dadd(-162.16, 195.7, -81.78, 1.8)
	pt3dadd(-165.87, 192.32, -83.57, 1.8)
	pt3dadd(-169.31, 187.59, -86.48, 1.8)
  }
  dend[26] {pt3dclear()
	pt3dadd(-98.6, 122.98, -26.72, 2.25)
	pt3dadd(-106.21, 125.22, -28.68, 1.8)
	pt3dadd(-110.97, 127.03, -28.68, 1.8)
	pt3dadd(-116.8, 129.73, -30.61, 1.8)
	pt3dadd(-123.68, 133.33, -31.38, 1.8)
	pt3dadd(-130.61, 135.82, -33.22, 1.8)
	pt3dadd(-135.64, 138.75, -35.17, 1.8)
	pt3dadd(-143.59, 143.26, -37.57, 1.8)
	pt3dadd(-147.29, 146.86, -37.57, 1.8)
	pt3dadd(-149.25, 150.1, -37.57, 1.8)
	pt3dadd(-151.89, 151.45, -37.57, 1.8)
	pt3dadd(-155.6, 155.28, -37.71, 1.8)
	pt3dadd(-161.43, 160.69, -40.8, 1.8)
	pt3dadd(-168.05, 169.47, -40.8, 1.8)
	pt3dadd(-174.36, 175.08, -40.8, 1.8)
	pt3dadd(-177.27, 179.36, -43.82, 1.8)
	pt3dadd(-180.45, 188.37, -45.92, 1.8)
	pt3dadd(-184.7, 195.55, -47.28, 1.8)
	pt3dadd(-187.88, 198.26, -48.62, 1.8)
	pt3dadd(-190.52, 199.38, -50.24, 1.8)
	pt3dadd(-194.5, 201.41, -50.84, 1.8)
	pt3dadd(-194.5, 201.19, -50.76, 1.8)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
}

proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() {
	
 
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(2, 4, 5, 7, 8,10,11,14,16,17,20,21,22,23,25,26) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.82115,0.72578,0.83576,0.83983,0.89496,0.88984,0.88946,0.85656,0.55338,0.55677,0.66922,0.75242,    0.5,    0.5,0.74801,0.74782) 
for i= 0 , 15 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0  
pre_list.append(syn) // 
} 
 
 // //***** MC syn   
 
dend[0] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 16 
dend[1] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 17 
dend[2] syn = new Exp2Syn(0.00035565) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 18 
dend[3] syn = new Exp2Syn(0.0013996) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 19 
dend[6] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 20 
dend[7] syn = new Exp2Syn(0.054058) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 21 
dend[8] syn = new Exp2Syn(0.062828) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 22 
dend[9] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 23 
dend[10] syn = new Exp2Syn(0.022368) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 24 
dend[11] syn = new Exp2Syn(0.022346) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 25 
dend[12] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 26 
dend[13] syn = new Exp2Syn(0.36553) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 27 
dend[18] syn = new Exp2Syn(0.15597) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 28 
 
 // //***** HIPP   
 
dend[2] syn = new Exp2Syn(0.82115) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 29 
dend[4] syn = new Exp2Syn(0.72578) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 30 
dend[5] syn = new Exp2Syn(0.83576) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 31 
dend[7] syn = new Exp2Syn(0.83983) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 32 
dend[8] syn = new Exp2Syn(0.89496) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 33 
dend[10] syn = new Exp2Syn(0.88984) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 34 
dend[11] syn = new Exp2Syn(0.88946) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 35 
dend[14] syn = new Exp2Syn(0.85656) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 36 
dend[16] syn = new Exp2Syn(0.55338) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 37 
dend[17] syn = new Exp2Syn(0.55677) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 38 
dend[20] syn = new Exp2Syn(0.66922) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 39 
dend[21] syn = new Exp2Syn(0.75242) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 40 
dend[22] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 41 
dend[23] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 42 
dend[25] syn = new Exp2Syn(0.74801) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 43 
dend[26] syn = new Exp2Syn(0.74782) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 44 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 45 
 
 // //***** Sprout   
 
dend[0] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 46 
dend[1] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 47 
dend[2] syn = new Exp2Syn(0.00035565) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 48 
dend[3] syn = new Exp2Syn(0.0013996) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 49 
dend[6] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 50 
dend[7] syn = new Exp2Syn(0.054058) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 51 
dend[8] syn = new Exp2Syn(0.062828) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 52 
dend[9] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 53 
dend[10] syn = new Exp2Syn(0.022368) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 54 
dend[11] syn = new Exp2Syn(0.022346) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 55 
dend[12] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 56 
dend[13] syn = new Exp2Syn(0.36553) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 57 
dend[18] syn = new Exp2Syn(0.15597) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 58 

	  
}
	func is_art() { return 0 }

	endtemplate GranuleCell65
//************************************************************************************************************