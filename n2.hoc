/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell2
	
// Original name on neuroMorpho.org n02-cont01-sl4.CNG.swc

ndend1=11
  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, /*pdend,*/ mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, /*pdend,*/ mdend, ddend
proc subsets(){ local i
	objref all, gcldend, /*pdend, */mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 10 dend[i] all.append()


	gcldend  = new SectionList()
		for i=0, 1  dend[i] gcldend.append()


// 	pdend  = new SectionList()
// 		for i=2, 3  dend[i] pdend.append()
// 		for i=6, 7  dend[i] pdend.append()
		


	mdend  = new SectionList()
		for i=1, 2  dend[i] mdend.append()
		for i=5, 6  dend[i] mdend.append()		  
		

	ddend  = new SectionList()
		
		for i=3, 4 dend[i] ddend.append()
		for i=7, 10 dend[i] ddend.append()

}
proc gctemp() {

// 	soma {nseg=1 L=16.329 diam=11.165} // changed L & diam
// 		
// 	dend [0] {nseg=1  L=20.05632 diam=2.6}
// 	dend [1] {nseg=1  L=80.78021 diam=1.6478}
// 	dend [2] {nseg=1  L=10.61434 diam=1.1833}
// 	dend [3] {nseg=1  L=25.82767 diam=1.0346}
// 	dend [4] {nseg=1  L=30.89202 diam=0.7664}
// 	dend [5] {nseg=1  L=43.53635 diam=0.9072}
// 	dend [6] {nseg=1  L=37.46003 diam=0.9215}
// 	dend [7] {nseg=1  L=85.47885 diam=0.5756}
// 	dend [8] {nseg=1  L=121.54242 diam=0.6968}
// 	dend [9] {nseg=1  L=78.91646 diam=0.6705}
// 	dend [10] {nseg=1 L=97.50034 diam=0.7203}
// 	dend [11] {nseg=1 L=19.96318 diam=0.8309}
// 	dend [12] {nseg=1 L=125.23049 diam=0.5746}
// 	dend [13] {nseg=1 L=117.23326 diam=0.6059}
// 	dend [14] {nseg=1 L=31.96199 diam=0.6411}
// 	dend [15] {nseg=1 L=45.48879 diam=0.6389}
// 	dend [16] {nseg=1 L=22.50602 diam=0.5591}
// 	dend [17] {nseg=1 L=37.40208 diam=0.6970}
// 	dend [18] {nseg=1 L=20.88699 diam=0.6050}
// 	dend [19] {nseg=1 L=10.10732 diam=0.5985}
	
// 	for i = 1, 20	dend [i] {nseg=1 L=150 diam=3}

// 	gcdend2 [0] {nseg=1 L=50 diam=3}
// 	for i = 1, 3	gcdend2 [i] {nseg=1 L=150 diam=3}	 	

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
// 		forsec pdend {insert ichan2
// 	gnatbar_ichan2=0.013 
// 	gkfbar_ichan2=0.004
// 	gksbar_ichan2=0.006
// 		insert nca  // HAV-N- Ca channel
// 	gncabar_nca=0.001  // check to modify- original 0.004
// 		insert lca 
// 	glcabar_lca=0.0075
// 		insert cat
// 	gcatbar_cat=0.00025
// 		insert gskch
// 	gskbar_gskch=0.0002
// 		insert cagk
// 	gkbar_cagk=0.001
// 	gl_ichan2 = 0.000063
// // 	cm=1.0 
//         insert pas 
//       g_pas = 4e-05
// 	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	connect dend[0](0), soma(1)
// 	connect gcdend2[0](0), soma(1)
// 	for i=1,3 {
// 	connect dend[i](0), dend[i-1](1)
// 	}
// 	for i=1,3 {
// 	connect gcdend2[i](0), gcdend2[i-1](1)
// 	}
  connect dend(0), soma(1)
  for i = 1, 2 connect dend[i](0), dend(1)
  for i = 3, 4 connect dend[i](0), dend[1](1)
  for i = 5, 6 connect dend[i](0), dend[2](1)
  for i = 7, 8 connect dend[i](0), dend[6](1)
  for i = 9, 10 connect dend[i](0), dend[7](1)
basic_shape()
	    

// 	  connect axon(1), soma(0)


	forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70

		cao_ccanl=2 }  // make catau slower70e-3 	cao=2 cai=50.e-6 

// current injection
//for i=0,0 {
//stimdel[i]=500
//stimdur[i]=200
//stimamp[i]=0.2

//soma stim[i] = new IClamp(0.5)
//stim.del[i]=stimdel[i]
//stim.dur[i]=stimdur[i]
//stim.amp[i]=stimamp[i]
//}


		}
		
		

proc shape3d_1() {
//   axon {pt3dclear() 
//         pt3dadd(-0.03941, -38, 0, 0.2) 
//         pt3dadd(-0.03941, -18, 0, 10)
//   }
  
 soma {pt3dclear()
// 	pt3dadd(-0.121, -0.4145, 0.01, 10.45)
	pt3dadd(1.248, -18, 0, 10)
	pt3dadd(1.248, 0.1378, 0, 10.89)
  }
  dend {pt3dclear()
	pt3dadd(1.248, 0.1378, 0, 10.89)
	pt3dadd(1.3, 7.54, -1.04, 2.04)
	pt3dadd(1.95, 9.56, -0.98, 1.95)
	pt3dadd(2.23, 12.04, -0.99, 1.95)
	pt3dadd(1.86, 14.34, -0.74, 1.95)
	pt3dadd(1.21, 15.81, -1.42, 1.95)
	pt3dadd(0.28, 18.2, -1.27, 1.86)
	pt3dadd(-0.81, 20.55, -2.75, 1.86)
	pt3dadd(-1.73, 22.57, -3.1, 1.95)
	pt3dadd(-3.22, 23.67, -2.84, 1.67)
	pt3dadd(-4.98, 25.33, -3.11, 1.48)
	pt3dadd(-5.82, 26.8, -3.23, 1.39)
	pt3dadd(-5.91, 28.82, -3.23, 1.39)
	pt3dadd(-5.82, 30.48, -3.15, 1.67)
	pt3dadd(-6.19, 31.85, -3.15, 2.04)
	pt3dadd(-6.47, 33.23, -3.15, 1.95)
	pt3dadd(-6.58, 34.92, -3.71, 1.58)
	pt3dadd(-7.04, 36.58, -4.15, 1.39)
	pt3dadd(-7.14, 38.97, -4.25, 1.21)
	pt3dadd(-6.86, 40.44, -4.95, 1.02)
	pt3dadd(-7.6, 42.64, -4.95, 1.02)
	pt3dadd(-7.69, 44.48, -5.64, 1.58)
	pt3dadd(-8.16, 46.14, -5.64, 1.3)
	pt3dadd(-8.9, 47.7, -5.58, 1.21)
	pt3dadd(-9.54, 49.05, -5.63, 1.11)
	pt3dadd(-10.28, 50.53, -5.55, 1.3)
	pt3dadd(-10.93, 52, -5.39, 1.58)
	pt3dadd(-11.48, 53.01, -5.36, 1.67)
  }
//   dendrite {pt3dclear()
// 	pt3dadd(1.248, 0.1378, 0, 10.89)
// 	pt3dadd(4.92, -6.89, -0.44, 2.32)
// 	pt3dadd(6.59, -7.35, -0.76, 1.95)
// 	pt3dadd(8.44, -7.9, -0.43, 1.39)
// 	pt3dadd(9.83, -8.73, -0.43, 1.3)
// 	pt3dadd(11.87, -8.64, -1.11, 1.11)
// 	pt3dadd(13.27, -7.9, -0.83, 1.11)
//   }
  dend[1] {pt3dclear()
	pt3dadd(-11.48, 53.01, -5.36, 1.67)
	pt3dadd(-13.57, 53.62, -4.77, 0.46)
	pt3dadd(-15.33, 53.99, -5.09, 0.46)
	pt3dadd(-16.26, 54.08, -5.13, 0.65)
	pt3dadd(-17, 53.99, -5.13, 0.65)
	pt3dadd(-18.02, 53.81, -5.14, 0.56)
	pt3dadd(-19.41, 53.44, -5.18, 0.56)
	pt3dadd(-21.08, 53.81, -6.24, 0.46)
	pt3dadd(-22.75, 53.9, -6.09, 0.46)
	pt3dadd(-24.52, 53.62, -6.36, 0.46)
	pt3dadd(-26.56, 53.81, -6.9, 0.56)
	pt3dadd(-27.95, 54.08, -7.36, 0.83)
	pt3dadd(-29.15, 53.99, -7.13, 1.11)
	pt3dadd(-29.8, 54.91, -7.13, 0.93)
	pt3dadd(-31.38, 55.37, -7.29, 0.74)
	pt3dadd(-33.7, 55.83, -7.41, 0.74)
	pt3dadd(-36.67, 56.29, -7.75, 0.74)
	pt3dadd(-39.73, 56.38, -8.42, 1.02)
	pt3dadd(-41.03, 57.03, -8.24, 0.74)
	pt3dadd(-42.61, 57.58, -8.17, 0.56)
	pt3dadd(-44.56, 58.41, -8.71, 0.56)
	pt3dadd(-46.13, 58.77, -9.02, 0.56)
	pt3dadd(-47.34, 59.6, -8.83, 0.56)
	pt3dadd(-49.19, 59.69, -9.24, 0.56)
	pt3dadd(-51.33, 60.06, -10, 0.65)
	pt3dadd(-53.09, 60.15, -10.62, 0.56)
	pt3dadd(-54.3, 60.7, -10.48, 1.3)
	pt3dadd(-55.13, 61.35, -10.44, 1.3)
  }
  dend[2] {pt3dclear()
	pt3dadd(-11.48, 53.01, -5.36, 1.67)
	pt3dadd(-11.21, 54.39, -5.44, 0.93)
	pt3dadd(-10.46, 55.03, -5.57, 0.74)
	pt3dadd(-9.07, 55.49, -6.12, 0.74)
	pt3dadd(-8.89, 57.23, -6.15, 0.93)
	pt3dadd(-9.35, 58.71, -6.24, 0.83)
	pt3dadd(-9.91, 60.18, -6.24, 0.74)
	pt3dadd(-10.37, 61.46, -6.06, 1.02)
	pt3dadd(-10.74, 62.66, -6.1, 1.3)
	pt3dadd(-11.18, 64.3, -8.07, 2.04)
	pt3dadd(-11.36, 65.31, -8.07, 2.04)
  }
  dend[3] {pt3dclear()
	pt3dadd(-55.13, 61.35, -10.44, 1.3)
	pt3dadd(-55, 62.98, -10.15, 1.11)
	pt3dadd(-56.3, 64.08, -11.01, 0.65)
	pt3dadd(-57.69, 65.55, -10.93, 0.65)
	pt3dadd(-59.55, 67.3, -12.11, 0.65)
	pt3dadd(-60.2, 69.14, -12.88, 0.65)
	pt3dadd(-60.75, 71.16, -12.53, 0.56)
	pt3dadd(-60.47, 72.63, -12.53, 0.56)
	pt3dadd(-61.68, 74.47, -13.37, 0.56)
	pt3dadd(-63.35, 76.03, -13.63, 0.56)
	pt3dadd(-64.64, 77.31, -13.41, 0.65)
	pt3dadd(-65.48, 78.51, -13.41, 0.56)
	pt3dadd(-66.68, 79.88, -13.51, 0.56)
	pt3dadd(-67.8, 80.99, -13.51, 0.74)
	pt3dadd(-68.54, 82.18, -13.63, 0.56)
	pt3dadd(-69.65, 83.38, -13.28, 0.56)
	pt3dadd(-70.3, 85.22, -13.82, 0.56)
	pt3dadd(-71.51, 86.69, -14.2, 0.46)
	pt3dadd(-72.8, 88.43, -14.33, 0.46)
	pt3dadd(-73.92, 89.63, -13.89, 0.46)
	pt3dadd(-75.22, 90.64, -14.87, 0.46)
	pt3dadd(-77.38, 92.51, -15.31, 0.46)
	pt3dadd(-79.14, 94.08, -15.7, 0.46)
	pt3dadd(-79.79, 95.64, -15.75, 0.46)
	pt3dadd(-81.46, 97.75, -15.29, 0.46)
	pt3dadd(-83.5, 100.1, -15.14, 0.37)
	pt3dadd(-85.35, 102.7, -15.76, 0.37)
	pt3dadd(-86.75, 103.8, -15.6, 0.37)
	pt3dadd(-88.51, 105.5, -16.24, 0.37)
  }
  dend[4] {pt3dclear()
	pt3dadd(-55.13, 61.35, -10.44, 1.3)
	pt3dadd(-56.43, 61.07, -10.34, 0.56)
	pt3dadd(-58.29, 61.81, -10.88, 0.56)
	pt3dadd(-60.33, 62.17, -11.83, 0.56)
	pt3dadd(-63.29, 62.73, -12.44, 0.56)
	pt3dadd(-65.78, 63.06, -13.22, 0.56)
	pt3dadd(-69.03, 63.98, -14.21, 0.56)
	pt3dadd(-72.46, 64.9, -14.75, 0.56)
	pt3dadd(-76.17, 66.28, -15.69, 0.56)
	pt3dadd(-78.86, 66.83, -16.21, 0.46)
	pt3dadd(-81.46, 67.56, -16.01, 0.46)
	pt3dadd(-83.5, 68.57, -16.3, 0.46)
	pt3dadd(-84.34, 68.94, -16.41, 0.37)
	pt3dadd(-85.26, 69.68, -16.41, 1.11)
	pt3dadd(-86.38, 70.32, -16.62, 0.65)
	pt3dadd(-87.58, 71.7, -16.49, 0.46)
	pt3dadd(-88.88, 72.16, -17.08, 0.37)
	pt3dadd(-90.46, 73.31, -17.43, 0.37)
	pt3dadd(-92.22, 74.69, -17.33, 0.37)
	pt3dadd(-94.44, 76.44, -18.25, 0.37)
	pt3dadd(-96.95, 77.91, -18.44, 0.46)
	pt3dadd(-99.08, 79.38, -18.24, 0.46)
	pt3dadd(-100.8, 80.66, -18.13, 0.46)
	pt3dadd(-102.2, 81.68, -17.83, 0.37)
	pt3dadd(-103.1, 82.5, -18.3, 0.37)
  }
  dend[5] {pt3dclear()
	pt3dadd(-11.36, 65.31, -8.07, 2.04)
	pt3dadd(-13.06, 66.66, -7.29, 0.46)
	pt3dadd(-13.71, 67.58, -7.29, 0.46)
	pt3dadd(-15.2, 67.4, -7.78, 0.46)
	pt3dadd(-16.03, 67.4, -8.06, 0.46)
	pt3dadd(-16.87, 68.68, -8.48, 0.56)
	pt3dadd(-17.42, 70.16, -9.36, 0.46)
	pt3dadd(-18.63, 70.52, -9.82, 0.65)
	pt3dadd(-19.56, 71.9, -9.63, 0.56)
	pt3dadd(-20.67, 73.65, -10.32, 0.74)
	pt3dadd(-21.69, 74.93, -10.73, 0.46)
	pt3dadd(-22.99, 76.22, -10.95, 0.46)
	pt3dadd(-23.64, 76.87, -12.91, 0.46)
	pt3dadd(-24.38, 78.61, -12.69, 0.83)
	pt3dadd(-25.31, 80.27, -12.87, 0.56)
	pt3dadd(-25.31, 81.99, -14.12, 0.56)
	pt3dadd(-25.59, 83.92, -14.57, 0.56)
	pt3dadd(-26.61, 86.03, -15.51, 0.65)
	pt3dadd(-27.35, 86.59, -15.39, 0.56)
	pt3dadd(-28.55, 86.13, -16.21, 0.56)
	pt3dadd(-29.2, 86.31, -16.48, 0.56)
	pt3dadd(-29.02, 87.41, -16.48, 0.56)
	pt3dadd(-29.58, 88.06, -16.15, 0.56)
	pt3dadd(-30.78, 88.42, -17.35, 0.56)
	pt3dadd(-30.97, 89.62, -17.19, 0.65)
	pt3dadd(-30.87, 90.72, -17.24, 0.74)
	pt3dadd(-30.97, 91.92, -18.15, 0.56)
  }
  dend[6] {pt3dclear()
	pt3dadd(-11.36, 65.31, -8.07, 2.04)
	pt3dadd(-10.07, 66.96, -7.38, 1.02)
	pt3dadd(-9.14, 68.53, -6.81, 0.83)
	pt3dadd(-8.3, 70.73, -6.89, 0.83)
	pt3dadd(-7.38, 73.4, -7.63, 0.83)
	pt3dadd(-7.93, 75.42, -7.58, 0.83)
	pt3dadd(-9.14, 76.98, -8.47, 0.65)
	pt3dadd(-10.34, 77.43, -8.58, 0.56)
	pt3dadd(-11.17, 78.71, -8.58, 0.74)
	pt3dadd(-11.82, 80.46, -9.44, 0.74)
	pt3dadd(-13.4, 82.11, -10.28, 0.83)
	pt3dadd(-14.42, 83.68, -10.15, 0.74)
	pt3dadd(-14.97, 85.79, -10.21, 0.56)
	pt3dadd(-14.97, 87.54, -10.08, 0.56)
	pt3dadd(-15.81, 89.1, -10.08, 0.65)
	pt3dadd(-16.92, 90.48, -10.03, 0.65)
	pt3dadd(-18.13, 91.86, -10.28, 0.65)
	pt3dadd(-18.76, 93.31, -11.28, 0.65)
	pt3dadd(-20.16, 95.33, -10.95, 0.65)
	pt3dadd(-21.36, 96.8, -10.81, 0.46)
	pt3dadd(-22.48, 99.19, -11.76, 0.74)
	pt3dadd(-22.75, 100.1, -11.76, 0.83)
	pt3dadd(-23.22, 101.7, -12.14, 0.56)
	pt3dadd(-23.22, 104.2, -12.14, 0.56)
	pt3dadd(-23.12, 105.8, -12.16, 0.56)
	pt3dadd(-23.28, 106.9, -12.39, 0.65)
	pt3dadd(-23.93, 108.8, -12.39, 0.56)
	pt3dadd(-24.21, 109.6, -12.43, 0.74)
  }
  dend[7] {pt3dclear()
	pt3dadd(-24.21, 109.6, -12.43, 0.74)
	pt3dadd(-24.75, 110.9, -11.74, 0.65)
	pt3dadd(-25.31, 111.8, -11.74, 0.65)
	pt3dadd(-25.4, 112.5, -12.01, 0.56)
	pt3dadd(-25.68, 113.5, -12.01, 0.74)
	pt3dadd(-26.05, 114.7, -11.81, 0.56)
	pt3dadd(-27.07, 115.7, -12.2, 0.65)
	pt3dadd(-28.37, 116, -12.07, 0.56)
	pt3dadd(-29.11, 117.4, -12.07, 0.56)
	pt3dadd(-29.48, 118.2, -12.61, 0.56)
	pt3dadd(-28.83, 119.6, -13.4, 0.56)
	pt3dadd(-28.92, 121.3, -13.4, 0.74)
	pt3dadd(-29.02, 122.6, -13.4, 0.74)
	pt3dadd(-29.39, 123.6, -13.4, 0.93)
	pt3dadd(-29.57, 124.9, -13.02, 0.74)
  }
}
proc shape3d_2() {
  dend[7] {	pt3dadd(-29.6, 125.6, -12.58, 0.74)
	pt3dadd(-30.44, 127.5, -12.58, 0.74)
	pt3dadd(-31.55, 129, -13.22, 0.74)
	pt3dadd(-32.75, 130.5, -13.26, 0.74)
	pt3dadd(-33.68, 131.4, -13.18, 0.93)
	pt3dadd(-34.8, 132.2, -13.18, 1.21)
	pt3dadd(-36.47, 132.6, -11.63, 0.65)
	pt3dadd(-39.43, 134, -10.84, 0.46)
	pt3dadd(-41.75, 135.2, -10.84, 0.46)
	pt3dadd(-42.4, 137.1, -10.39, 0.56)
	pt3dadd(-43.52, 138.4, -10.39, 0.65)
	pt3dadd(-44.63, 139.5, -9.9, 0.46)
	pt3dadd(-46.28, 140.4, -9.95, 0.46)
	pt3dadd(-47.85, 141.5, -9.84, 0.46)
	pt3dadd(-49.71, 142.4, -9.84, 0.37)
	pt3dadd(-51.19, 143.7, -9.28, 0.37)
	pt3dadd(-52.59, 144.8, -9.65, 0.37)
	pt3dadd(-53.33, 145.4, -9.32, 0.46)
	pt3dadd(-54.26, 145.8, -9.5, 0.56)
	pt3dadd(-55, 146.1, -9.76, 0.83)
  }
  dend[8] {pt3dclear()
	pt3dadd(-24.21, 109.6, -12.43, 0.74)
	pt3dadd(-23.65, 111.2, -12, 0.46)
	pt3dadd(-21.89, 112.9, -13.01, 0.46)
	pt3dadd(-21.42, 115.1, -13.93, 0.46)
	pt3dadd(-21.89, 118.4, -13.93, 0.46)
	pt3dadd(-22.44, 120, -14.03, 0.46)
	pt3dadd(-21.48, 122.4, -15.78, 0.46)
	pt3dadd(-20.74, 124, -15.78, 0.46)
	pt3dadd(-20.55, 126.9, -15.78, 0.46)
	pt3dadd(-20, 128.9, -16.19, 0.46)
	pt3dadd(-18.88, 130.1, -15.52, 0.46)
	pt3dadd(-17.31, 132.5, -16.47, 0.46)
	pt3dadd(-16.19, 134.6, -16.47, 0.46)
	pt3dadd(-15.57, 136.4, -16.46, 0.46)
	pt3dadd(-13.53, 138.9, -17.57, 0.46)
	pt3dadd(-12.51, 141.3, -18.48, 0.46)
	pt3dadd(-11.21, 143.6, -18.58, 0.46)
	pt3dadd(-10.75, 145.7, -18.67, 0.46)
	pt3dadd(-10.29, 147.9, -18.67, 0.46)
	pt3dadd(-10.1, 149.3, -19.44, 0.46)
	pt3dadd(-10.2, 151.2, -18.98, 0.46)
  }
  dend[9] {pt3dclear()
	pt3dadd(-55, 146.1, -9.76, 0.83)
	pt3dadd(-55.83, 147.3, -7.99, 0.46)
	pt3dadd(-57.04, 149.3, -7.7, 0.37)
	pt3dadd(-58.15, 151.5, -7.7, 0.37)
	pt3dadd(-59.64, 153.7, -7.45, 0.37)
	pt3dadd(-60.36, 155.2, -7.19, 0.37)
	pt3dadd(-61.1, 157.9, -7.19, 0.37)
	pt3dadd(-61.66, 159.9, -6.99, 0.37)
	pt3dadd(-62.49, 162, -5.76, 0.37)
	pt3dadd(-63.14, 164.5, -5.33, 0.37)
	pt3dadd(-63.98, 166.6, -5.64, 0.37)
	pt3dadd(-64.44, 168.2, -5.2, 0.37)
	pt3dadd(-65.87, 168.6, -5.37, 0.46)
	pt3dadd(-67.17, 169, -5.37, 0.65)
	pt3dadd(-67.73, 169.5, -6.1, 0.65)
	pt3dadd(-68.28, 170.7, -6.28, 0.46)
	pt3dadd(-69.49, 170.9, -6.28, 0.46)
	pt3dadd(-70.6, 171.6, -5.8, 0.37)
	pt3dadd(-72.46, 172.8, -6.4, 0.46)
	pt3dadd(-73.66, 173.8, -5.68, 0.37)
	pt3dadd(-75.42, 175.8, -5.23, 0.37)
	pt3dadd(-76.63, 176.6, -4.9, 0.74)
	pt3dadd(-78.39, 178.3, -4.79, 0.56)
	pt3dadd(-80.25, 179.1, -4.79, 0.56)
	pt3dadd(-82.57, 179.6, -4.82, 0.56)
	pt3dadd(-83.12, 180.7, -4.82, 0.65)
	pt3dadd(-83.4, 181.5, -4.82, 1.21)
	pt3dadd(-83.31, 182.6, -4.82, 1.21)
	pt3dadd(-83.04, 183.8, -4.67, 0.46)
	pt3dadd(-83.59, 185.3, -4.72, 0.46)
	pt3dadd(-84.34, 186.7, -4.95, 0.46)
	pt3dadd(-85.36, 188.2, -3.79, 0.83)
	pt3dadd(-85.63, 189.4, -3.29, 0.56)
	pt3dadd(-86.28, 190.1, -3.54, 0.56)
	pt3dadd(-86.38, 191.3, -3.54, 0.56)
	pt3dadd(-86.38, 192.4, -4.18, 0.46)
  }
  dend[10] {pt3dclear()
	pt3dadd(-55, 146.1, -9.76, 0.83)
	pt3dadd(-56.57, 145.8, -9.26, 0.56)
	pt3dadd(-59.17, 145.8, -9.08, 0.56)
	pt3dadd(-61.49, 145.7, -9.6, 0.56)
	pt3dadd(-63.81, 145.7, -9.68, 0.65)
	pt3dadd(-65.29, 145.6, -9.92, 0.37)
	pt3dadd(-66.69, 146.2, -10.35, 0.37)
  }
}


proc basic_shape() {
  shape3d_1()
  shape3d_2()
 
  
}

		
	proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	objref ProximalSynapses 
	objref ProximalSynapsePositions 
	proc synapse() { 
 
  
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(9) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.81769) 
for i= 0 , 0 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0  
pre_list.append(syn) // # 0  
} 
 
 // //***** MC syn   
 
ProximalSynapses = new Vector(0,0) 
ProximalSynapses .append(0) 
ProximalSynapsePositions = new Vector(0,0) 
ProximalSynapsePositions .append(0.43943) 
for i= 0 , 0 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // #  
} 
 
 // //***** HIPP   
 
for i= 0 , 0 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // HIPP  
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 0 
} 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 1 
 
 // //***** Sprout   
 
for i= 0 , 0 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 1 
} 

}
 



	func is_art() { return 0 }

	endtemplate GranuleCell2
//************************************************************************************************************