/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell5

// Original name on neuroMorpho.org n05-cont02-sl1.CNG.swc

ndend1=9

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, /*pdend,*/ mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, /*pdend,*/ mdend, ddend
proc subsets(){ local i
	objref all, gcldend, /*pdend,*/ mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 8 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()


// 	pdend  = new SectionList()
// 		for i=1, 4  dend[i] pdend.append()
		


	mdend  = new SectionList()
		for i=1, 2  dend[i] mdend.append()
		

	ddend  = new SectionList()
// 		dend[3] ddend.append()
		for i=3, 8 dend[i] ddend.append()
// 		for i=9, 10 dend[i] ddend.append()
}
proc gctemp() {

// 	soma {nseg=1 L=16.329 diam=11.165} // changed L & diam
// 		
// 	dend [0] {nseg=1  L=20.05632 diam=2.6}
// 	dend [1] {nseg=1  L=80.78021 diam=1.6478}
// 	dend [2] {nseg=1  L=10.61434 diam=1.1833}
// 	dend [3] {nseg=1  L=25.82767 diam=1.0346}
// 	dend [4] {nseg=1  L=30.89202 diam=0.7664}
// 	dend [5] {nseg=1  L=43.53635 diam=0.9072}
// 	dend [6] {nseg=1  L=37.46003 diam=0.9215}
// 	dend [7] {nseg=1  L=85.47885 diam=0.5756}
// 	dend [8] {nseg=1  L=121.54242 diam=0.6968}
// 	dend [9] {nseg=1  L=78.91646 diam=0.6705}
// 	dend [10] {nseg=1 L=97.50034 diam=0.7203}
// 	dend [11] {nseg=1 L=19.96318 diam=0.8309}
// 	dend [12] {nseg=1 L=125.23049 diam=0.5746}
// 	dend [13] {nseg=1 L=117.23326 diam=0.6059}
// 	dend [14] {nseg=1 L=31.96199 diam=0.6411}
// 	dend [15] {nseg=1 L=45.48879 diam=0.6389}
// 	dend [16] {nseg=1 L=22.50602 diam=0.5591}
// 	dend [17] {nseg=1 L=37.40208 diam=0.6970}
// 	dend [18] {nseg=1 L=20.88699 diam=0.6050}
// 	dend [19] {nseg=1 L=10.10732 diam=0.5985}
	
// 	for i = 1, 20	dend [i] {nseg=1 L=150 diam=3}

// 	gcdend2 [0] {nseg=1 L=50 diam=3}
// 	for i = 1, 3	gcdend2 [i] {nseg=1 L=150 diam=3}	 	

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
// 		forsec pdend {insert ichan2
// 	gnatbar_ichan2=0.013 
// 	gkfbar_ichan2=0.004
// 	gksbar_ichan2=0.006
// 		insert nca  // HAV-N- Ca channel
// 	gncabar_nca=0.001  // check to modify- original 0.004
// 		insert lca 
// 	glcabar_lca=0.0075
// 		insert cat
// 	gcatbar_cat=0.00025
// 		insert gskch
// 	gskbar_gskch=0.0002
// 		insert cagk
// 	gkbar_cagk=0.001
// 	gl_ichan2 = 0.000063
// 	cm=1.0 
//         insert pas 
//       g_pas = 4e-05
// 	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	connect dend[0](0), soma(1)
// 	connect gcdend2[0](0), soma(1)
// 	for i=1,3 {
// 	connect dend[i](0), dend[i-1](1)
// 	}
// 	for i=1,3 {
// 	connect gcdend2[i](0), gcdend2[i-1](1)
// 	}
connect dend(0), soma(1)
    for i = 1, 2 connect dend[i](0), dend(1)
  for i = 3, 4 connect dend[i](0), dend[1](1)
  for i = 5, 6 connect dend[i](0), dend[2](1)
  for i = 7, 8 connect dend[i](0), dend[4](1)
basic_shape()
    
	    

// 	  connect axon(1), soma(0)


	forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70

		cao_ccanl=2 }  // make catau slower70e-3 	cao=2 cai=50.e-6 

// current injection
//for i=0,0 {
//stimdel[i]=500
//stimdur[i]=200
//stimamp[i]=0.2

//soma stim[i] = new IClamp(0.5)
//stim.del[i]=stimdel[i]
//stim.dur[i]=stimdur[i]
//stim.amp[i]=stimamp[i]
//}

}


proc shape3d_1() {
//   axon {pt3dclear() 
//         pt3dadd(-0.1761, -38, 0, 0.2) 
//         pt3dadd(-0.1761, -18, 0, 10)
//   }
//   
 soma {pt3dclear()
// 	pt3dadd(-0.121, -0.4145, 0.01, 10.45)
	pt3dadd(0.9829, -18, 0, 10)
	pt3dadd(0.9829, -1.102, 0, 11.34)
  }
  dend {pt3dclear()
	pt3dadd(0.9829, -1.102, 0, 11.34)
	pt3dadd(6.49, -6.16, 0, 2.88)
	pt3dadd(7.05, -7.81, 1, 2.69)
	pt3dadd(7.51, -9.19, 3.3, 1.86)
	pt3dadd(7.98, -10.66, 3.49, 1.39)
	pt3dadd(8.72, -12.04, 3.49, 1.39)
	pt3dadd(9.18, -13.33, 3.62, 1.86)
	pt3dadd(9, -14.71, 3.62, 2.13)
	pt3dadd(8.53, -16.18, 3.94, 1.67)
	pt3dadd(7.79, -17.74, 3.62, 1.39)
	pt3dadd(9, -19.03, 3.62, 1.3)
	pt3dadd(10.3, -20.41, 3.31, 1.21)
	pt3dadd(11.13, -21.51, 3.45, 1.48)
	pt3dadd(11.5, -22.8, 3.45, 1.48)
	pt3dadd(12.06, -24.69, 3.51, 1.39)
	pt3dadd(12.53, -26.72, 3.01, 1.21)
	pt3dadd(12.81, -28.92, 2.85, 1.21)
	pt3dadd(12.9, -30.58, 2.85, 1.11)
	pt3dadd(13.64, -31.96, 3.26, 1.11)
	pt3dadd(14.1, -33.79, 2.56, 1.11)
	pt3dadd(14.1, -35.54, 2.56, 1.21)
	pt3dadd(14.2, -37.01, 2.29, 1.67)
  }
  dend[1] {pt3dclear()
	pt3dadd(14.2, -37.01, 2.29, 1.67)
	pt3dadd(12.79, -37.7, 2, 1.11)
	pt3dadd(12.05, -38.62, 2.91, 0.74)
	pt3dadd(11.59, -40, 2.51, 0.83)
	pt3dadd(11.68, -41.47, 2.51, 0.65)
	pt3dadd(11.68, -43.21, 2.51, 1.02)
	pt3dadd(10.94, -44.41, 2.51, 1.02)
	pt3dadd(10.94, -45.51, 2.54, 0.74)
	pt3dadd(11.12, -46.8, 2.3, 0.65)
	pt3dadd(11.22, -47.9, 2.3, 1.11)
	pt3dadd(10.94, -49.65, 2.3, 1.11)
	pt3dadd(10.47, -51.12, 2.24, 1.11)
	pt3dadd(10.01, -52.22, 2.24, 0.93)
	pt3dadd(9.92, -53.42, 2.53, 0.74)
	pt3dadd(10.57, -54.43, 2.53, 0.74)
	pt3dadd(11.34, -55.26, 2.12, 0.74)
	pt3dadd(10.78, -57.01, 1.54, 0.93)
	pt3dadd(10.04, -58.57, 1.54, 1.21)
	pt3dadd(9.39, -59.68, 1.54, 0.93)
	pt3dadd(8.93, -60.87, 0.78, 0.74)
	pt3dadd(8.74, -62.25, 0.78, 1.02)
	pt3dadd(8.74, -63.81, 0.78, 1.21)
	pt3dadd(8.84, -65.19, 0.78, 1.11)
	pt3dadd(8.93, -66.48, 1.44, 0.93)
	pt3dadd(8.74, -67.95, 1.43, 1.11)
	pt3dadd(8.93, -69.33, 2.05, 1.02)
	pt3dadd(9.58, -70.8, 2.05, 1.02)
	pt3dadd(9.49, -71.72, 1.51, 0.93)
	pt3dadd(9.49, -72.73, 1.51, 0.74)
	pt3dadd(10.05, -73.66, 1.56, 0.74)
	pt3dadd(9.96, -74.67, 1.56, 0.65)
	pt3dadd(9.77, -75.77, 1.93, 1.11)
	pt3dadd(9.68, -76.51, 1.93, 1.11)
	pt3dadd(9.58, -77.61, 1.93, 0.65)
	pt3dadd(9.49, -78.9, 1.7, 0.65)
	pt3dadd(9.31, -80.18, 1.49, 0.65)
	pt3dadd(9.21, -81.75, 1.49, 0.83)
	pt3dadd(9.03, -82.94, 1.33, 0.74)
	pt3dadd(8.75, -84.23, 1.35, 0.74)
	pt3dadd(8.56, -85.7, 1.71, 0.74)
	pt3dadd(8.84, -86.8, 0.88, 0.83)
	pt3dadd(9.12, -88, 1.34, 1.02)
	pt3dadd(9.31, -89.19, 1.43, 0.93)
	pt3dadd(9.49, -90.57, 1.26, 0.93)
	pt3dadd(9.31, -91.73, 1.26, 0.93)
	pt3dadd(9.22, -93.29, 2.04, 1.02)
	pt3dadd(9.31, -94.4, 2.04, 1.39)
	pt3dadd(9.22, -95.96, 2.03, 1.11)
	pt3dadd(9.5, -97.06, 1.49, 0.93)
	pt3dadd(9.41, -98.63, 1.49, 0.93)
	pt3dadd(8.76, -99.64, 1.14, 0.93)
	pt3dadd(8.66, -101, 1.66, 0.74)
	pt3dadd(8.76, -102.4, 1.07, 1.3)
  }
  dend[2] {pt3dclear()
	pt3dadd(14.2, -37.01, 2.29, 1.67)
	pt3dadd(15.4, -38.21, 1.95, 1.21)
	pt3dadd(15.77, -39.59, 1.24, 0.93)
	pt3dadd(16.79, -40.5, 1.24, 0.74)
	pt3dadd(17.54, -41.33, 0.79, 0.93)
	pt3dadd(18.33, -42.36, 0.96, 0.74)
	pt3dadd(19.63, -43.37, 0.43, 0.74)
	pt3dadd(21.02, -44.38, 0.47, 0.74)
	pt3dadd(22.5, -45.58, 0.47, 0.74)
	pt3dadd(22.04, -46.86, 0.47, 0.83)
	pt3dadd(21.57, -48.43, 0.47, 1.02)
	pt3dadd(20.92, -49.71, 0.47, 0.83)
	pt3dadd(20, -50.63, 0.56, 1.21)
	pt3dadd(18.88, -51.28, 0.56, 0.83)
	pt3dadd(18.05, -52.84, 1.2, 0.74)
	pt3dadd(17.77, -54.22, 1.64, 1.02)
	pt3dadd(17.68, -55.5, 1.64, 1.21)
	pt3dadd(18.42, -56.7, 1.64, 0.93)
	pt3dadd(18.05, -57.89, 2.22, 0.74)
	pt3dadd(17.49, -59, 2.22, 0.74)
	pt3dadd(17.49, -60.01, 1.92, 0.93)
	pt3dadd(17.58, -61.79, 1.92, 1.21)
	pt3dadd(17.49, -63.36, 1.92, 0.83)
	pt3dadd(17.12, -65.1, 2.45, 0.74)
	pt3dadd(16.66, -66.48, 2.45, 1.02)
	pt3dadd(16.56, -68.14, 3.32, 0.74)
	pt3dadd(16.66, -70.25, 3.77, 0.93)
	pt3dadd(16.1, -71.45, 3.72, 1.02)
	pt3dadd(16.1, -72.82, 3.06, 0.65)
	pt3dadd(15.45, -73.93, 3.06, 0.65)
	pt3dadd(14.99, -74.94, 3.04, 0.74)
	pt3dadd(14.89, -76.78, 3.75, 0.93)
	pt3dadd(15.08, -78.43, 3.97, 0.93)
	pt3dadd(15.86, -80.09, 4.31, 0.74)
	pt3dadd(15.67, -81.65, 3.85, 0.83)
	pt3dadd(15.02, -83.03, 4.1, 0.74)
	pt3dadd(15.21, -84.68, 3.85, 0.93)
	pt3dadd(15.39, -86.34, 4.77, 0.93)
	pt3dadd(15.58, -88.08, 4.77, 1.11)
	pt3dadd(15.76, -89.19, 4.77, 0.93)
	pt3dadd(15.76, -91.02, 4.77, 0.74)
	pt3dadd(16.6, -92.95, 5.04, 0.74)
	pt3dadd(17.29, -94.63, 4.71, 0.83)
	pt3dadd(17.57, -96.2, 4.01, 1.67)
  }
  dend[3] {pt3dclear()
	pt3dadd(8.76, -102.4, 1.07, 1.3)
	pt3dadd(9.71, -102.9, 2.11, 0.65)
	pt3dadd(10.08, -104.1, 2.46, 0.65)
	pt3dadd(10.82, -104.8, 3.01, 0.65)
	pt3dadd(11, -106, 3.16, 0.46)
	pt3dadd(11.1, -108.1, 3.32, 0.46)
	pt3dadd(10.17, -108.4, 3.1, 0.46)
	pt3dadd(10.73, -110.5, 4.02, 0.46)
	pt3dadd(10.82, -111.7, 4.54, 0.46)
	pt3dadd(10.45, -113.7, 4.54, 0.83)
	pt3dadd(11.1, -114.8, 5.05, 0.65)
	pt3dadd(11.84, -115.4, 5.06, 0.46)
	pt3dadd(12.67, -117.4, 5.76, 0.46)
	pt3dadd(13.6, -118.9, 5.95, 0.46)
	pt3dadd(13.97, -120.8, 6.22, 0.46)
	pt3dadd(14.26, -122.8, 6.4, 0.65)
	pt3dadd(15.38, -124.4, 7.55, 0.56)
	pt3dadd(16.21, -125.5, 7.55, 0.56)
	pt3dadd(15.1, -127.8, 8.09, 0.56)
	pt3dadd(15.1, -129.3, 8.58, 0.56)
	pt3dadd(15.19, -130.2, 7.49, 1.02)
	pt3dadd(14.82, -131.2, 7.49, 1.02)
	pt3dadd(15.19, -132.1, 8.47, 0.65)
	pt3dadd(15.38, -133.3, 8.72, 0.46)
	pt3dadd(14.91, -134.7, 8.95, 0.46)
	pt3dadd(13.89, -135.7, 9.15, 0.46)
	pt3dadd(13.71, -137.6, 9.59, 0.46)
	pt3dadd(13.43, -139.4, 9.8, 0.46)
	pt3dadd(13.56, -141.1, 10.08, 0.46)
	pt3dadd(13.46, -142.5, 9.49, 0.46)
  }
  dend[4] {pt3dclear()
	pt3dadd(8.76, -102.4, 1.07, 1.3)
	pt3dadd(8.02, -103.6, 1.43, 0.65)
	pt3dadd(7.18, -104.8, 1.25, 0.56)
	pt3dadd(6.81, -105.4, 1.25, 0.65)
	pt3dadd(6.35, -106.8, 1.62, 0.56)
	pt3dadd(6.07, -107.9, 1.62, 0.56)
	pt3dadd(6.16, -109, 1.62, 0.56)
	pt3dadd(6.49, -110.1, 1.84, 0.56)
	pt3dadd(6.31, -111.5, 1.78, 0.56)
	pt3dadd(5.94, -112.8, 1.78, 0.74)
	pt3dadd(5.75, -113.9, 0.83, 0.65)
	pt3dadd(5.01, -115.2, 0.99, 0.65)
	pt3dadd(4.36, -116.1, 1.36, 0.65)
	pt3dadd(3.34, -115.7, 1.92, 0.56)
	pt3dadd(3.43, -117.5, 2.08, 0.56)
	pt3dadd(3.62, -118.9, 2.08, 0.65)
  }
  dend[5] {pt3dclear()
	pt3dadd(17.57, -96.2, 4.01, 1.67)
	pt3dadd(17.24, -97.63, 4.01, 1.58)
	pt3dadd(16.59, -99.01, 4.35, 0.74)
	pt3dadd(15.84, -101, 5.74, 0.56)
	pt3dadd(14.55, -102.3, 6.21, 0.56)
	pt3dadd(13.34, -103.3, 6.49, 0.56)
	pt3dadd(12.04, -105, 6.22, 0.56)
	pt3dadd(11.11, -106.5, 7, 0.56)
	pt3dadd(10.28, -108.7, 7.37, 0.56)
	pt3dadd(9.35, -110.1, 7.01, 0.56)
	pt3dadd(8.33, -111.5, 7.09, 0.56)
	pt3dadd(7.96, -113.1, 6.43, 0.56)
	pt3dadd(6.66, -114.9, 6.85, 0.56)
	pt3dadd(6.98, -117, 7.88, 0.56)
	pt3dadd(6.98, -119.5, 7.97, 0.56)
	pt3dadd(7.44, -122.1, 8.73, 0.56)
	pt3dadd(7.35, -124.9, 8.14, 0.56)
	pt3dadd(7.16, -126.6, 7.81, 0.56)
	pt3dadd(7.81, -128.4, 7.77, 0.56)
	pt3dadd(7.72, -130.1, 8.02, 0.56)
  }
  dend[6] {pt3dclear()
	pt3dadd(17.57, -96.2, 4.01, 1.67)
	pt3dadd(18.87, -97.21, 3.55, 1.11)
	pt3dadd(20.17, -98.95, 3.55, 0.65)
	pt3dadd(22.12, -100.8, 4.14, 0.65)
	pt3dadd(23.69, -102.3, 4.13, 0.65)
	pt3dadd(25.73, -103.6, 4.13, 0.65)
	pt3dadd(27.96, -105.4, 3.87, 0.56)
	pt3dadd(29.63, -107, 4.21, 0.56)
	pt3dadd(31.67, -108.5, 3.97, 0.56)
	pt3dadd(33.83, -110, 4.18, 0.56)
	pt3dadd(36.14, -111, 3.58, 0.56)
	pt3dadd(37.54, -111.2, 3.58, 0.56)
	pt3dadd(37.54, -113.1, 3.82, 0.74)
  }
}
proc shape3d_2() {
  dend[6] {	pt3dadd(38.74, -114.5, 3.82, 0.74)
	pt3dadd(40.23, -116.5, 3.4, 0.56)
	pt3dadd(42.08, -118.6, 3.13, 0.56)
	pt3dadd(43.75, -120.6, 3.6, 0.56)
	pt3dadd(45.24, -122.2, 4.02, 0.56)
	pt3dadd(46.41, -123.4, 4.09, 0.56)
	pt3dadd(48.07, -124.6, 3.98, 0.56)
	pt3dadd(48.91, -125.6, 4.57, 0.56)
	pt3dadd(50.12, -126.8, 4.93, 0.56)
	pt3dadd(51.32, -128.2, 4.93, 0.56)
	pt3dadd(52.9, -129.7, 4.74, 0.56)
	pt3dadd(54.57, -131.8, 4.74, 0.46)
	pt3dadd(55.68, -133.4, 4.39, 0.46)
	pt3dadd(56.52, -134.8, 4.39, 0.46)
  }
  dend[7] {pt3dclear()
	pt3dadd(3.62, -118.9, 2.08, 0.65)
	pt3dadd(3.85, -120.4, 2.19, 0.37)
	pt3dadd(3.85, -121.8, 2.19, 0.56)
	pt3dadd(4.12, -123.3, 3.13, 0.65)
	pt3dadd(4.87, -124.4, 3.17, 0.56)
	pt3dadd(4.87, -126, 3.17, 0.56)
  }
  dend[8] {pt3dclear()
	pt3dadd(3.62, -118.9, 2.08, 0.65)
	pt3dadd(2.32, -119.9, 2.85, 0.28)
	pt3dadd(1.48, -120.9, 2.81, 0.28)
	pt3dadd(1.02, -122.5, 3.08, 0.28)
	pt3dadd(0.65, -123.7, 3.08, 0.28)
	pt3dadd(0.37, -125.3, 3.55, 0.28)
	pt3dadd(0.69, -126.7, 4.03, 0.37)
	pt3dadd(0.32, -129.4, 4.27, 0.37)
	pt3dadd(-0.24, -131.2, 4.65, 0.37)
	pt3dadd(-0.98, -132.9, 4.24, 0.37)
	pt3dadd(-1.16, -134.6, 3.96, 0.37)
	pt3dadd(-1.53, -136.1, 4.56, 0.37)
	pt3dadd(-2.09, -137.8, 4.56, 0.37)
	pt3dadd(-1.53, -139.6, 4.56, 0.37)
	pt3dadd(-0.42, -140.8, 4.78, 0.37)
	pt3dadd(0.97, -141.9, 4.78, 0.37)
  }
}



proc basic_shape() {
  shape3d_1()
//   shape3d_2()

  
}

		
	proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
// 	objref DistalSynapses 
// 	objref DistalSynapsePositions 
	objref ProximalSynapses 
	objref ProximalSynapsePositions 
	proc synapse() { 
 
 // //***** PP syn   
 
 
 // //***** MC syn   
 
ProximalSynapses = new Vector(0,0) 
ProximalSynapses .append(0,  1,  2) 
ProximalSynapsePositions = new Vector(0,0) 
ProximalSynapsePositions .append(0.5,    0.065185,    0.068277) 
for i= 0 , 2 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // #  
} 
 
 // //***** HIPP   
 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 0 
 
 // //***** Sprout   
 
for i= 0 , 2 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 0 
} 

}
	func is_art() { return 0 }

	endtemplate GranuleCell5
//************************************************************************************************************