/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */
//Defining granule cell

	begintemplate GranuleCell71
	
// Original name on neuroMorpho.org 1220882b.CNG.swc

ndend1=34

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 33 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()
		dend[19] gcldend.append()


	pdend  = new SectionList()
		dend[8] pdend.append()
		dend[12] pdend.append()
		dend[25] pdend.append()
		for i=27, 28  dend[i] pdend.append()
		
	mdend  = new SectionList()
	
		for i=1, 2  dend[i] mdend.append()	
		dend[5] mdend.append()
		dend[13] mdend.append()		  
		for i=15, 18  dend[i] mdend.append()
		dend[20] mdend.append()
		dend[22] mdend.append()	
		for i=29, 30  dend[i] mdend.append()
		dend[33] mdend.append()
		

	ddend  = new SectionList()
		
		for i=3, 4 dend[i] ddend.append()
		for i=6, 7 dend[i] ddend.append()
		for i=9, 11 dend[i] ddend.append()
		dend[14] ddend.append()
		dend[21] ddend.append()
		for i=23, 24 dend[i] ddend.append()
		dend[26] ddend.append()
		for i=31, 32 dend[i] ddend.append()

}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }


  connect dend(0), soma(1)
  for i = 1, 3 connect dend[i](0), dend[i-1](1)
  connect dend[4](0), dend[2](1)
  connect dend[5](0), dend[1](1)
  for i = 6, 7 connect dend[i](0), dend[5](1)
  connect dend[8](0), dend(1)
  for i = 9, 10 connect dend[i](0), dend[i-1](1)
  connect dend[11](0), dend[9](1)
  connect dend[12](0), dend[8](1)
  for i = 13, 14 connect dend[i](0), dend[i-1](1)
  connect dend[15](0), dend[13](1)
  connect dend[16](0), dend[12](1)
  for i = 17, 18 connect dend[i](0), dend[16](1)
  connect dend[19](0), soma(0)
  for i = 20, 21 connect dend[i](0), dend[i-1](1)
  connect dend[22](0), dend[20](1)
  for i = 23, 24 connect dend[i](0), dend[22](1)
  connect dend[25](0), dend[19](1)
  for i = 26, 27 connect dend[i](0), dend[25](1)
  for i = 28, 29 connect dend[i](0), dend[i-1](1)
  connect dend[30](0), dend[28](1)
  for i = 31, 32 connect dend[i](0), dend[30](1)
  connect dend[33](0), dend[27](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 3.65812)
	pt3dadd(12.71, 13.97, -1.43, 4.05)
  }
  dend {pt3dclear()
	pt3dadd(12.71, 13.97, -1.43, 3.6)
	pt3dadd(15.62, 14.19, -2.9, 3.6)
	pt3dadd(17.21, 14.22, -0.6, 3.6)
  }
  dend[1] {pt3dclear()
	pt3dadd(17.21, 14.22, -0.6, 3.6)
	pt3dadd(19.33, 13.09, 1.74, 2.25)
	pt3dadd(24.36, 13.77, 3.55, 2.25)
	pt3dadd(29.43, 16.03, 4.85, 2.25)
	pt3dadd(34.46, 16.7, 9.09, 2.25)
	pt3dadd(39.76, 16.48, 7.26, 2.25)
	pt3dadd(43.99, 17.15, 7.26, 2.25)
	pt3dadd(46.64, 17.15, 7.18, 2.25)
	pt3dadd(54.01, 19.45, 7.18, 2.25)
	pt3dadd(58.52, 20.8, 4.37, 2.25)
	pt3dadd(63.55, 24.18, 4.37, 2.25)
	pt3dadd(68.84, 28.01, 4.37, 2.25)
	pt3dadd(71.78, 30.95, 4.37, 2.25)
	pt3dadd(78.4, 34.33, 5.71, 2.25)
	pt3dadd(83.69, 37.26, 4.98, 2.25)
	pt3dadd(89.25, 40.64, 4.98, 2.25)
	pt3dadd(93.76, 42.67, 4.98, 2.25)
	pt3dadd(104.13, 47.78, 6.22, 2.25)
	pt3dadd(109.16, 51.16, 6.22, 2.25)
	pt3dadd(114.98, 55.89, 6.22, 2.25)
	pt3dadd(120.54, 61.52, 6.6, 2.25)
	pt3dadd(126.69, 68.83, 6.6, 2.25)
	pt3dadd(133.05, 74.47, 7.46, 2.25)
	pt3dadd(137.55, 79.2, 6.19, 2.25)
	pt3dadd(141.52, 83.25, 6.19, 2.25)
	pt3dadd(142.13, 85.68, 6.19, 2.25)
  }
  dend[2] {pt3dclear()
	pt3dadd(142.13, 85.68, 6.19, 2.25)
	pt3dadd(149.54, 91.31, 2.74, 1.8)
	pt3dadd(154.57, 97.19, 2.74, 1.8)
	pt3dadd(159.87, 102.37, -0.94, 1.8)
	pt3dadd(166.35, 108.03, 0.92, 1.8)
	pt3dadd(171.65, 112.31, -0.82, 1.8)
	pt3dadd(177.74, 115.47, -0.82, 1.8)
	pt3dadd(183.83, 118.84, -0.82, 1.8)
	pt3dadd(189.03, 122.85, -1.86, 1.8)
	pt3dadd(192.74, 125.33, -1.86, 1.8)
	pt3dadd(194.33, 126.26, -1.86, 1.8)
  }
  dend[3] {pt3dclear()
	pt3dadd(194.33, 126.26, -1.86, 1.8)
	pt3dadd(201.48, 125.58, -2.71, 1.8)
	pt3dadd(207.04, 125.36, -2.71, 1.8)
	pt3dadd(213.29, 128.08, -2.71, 1.8)
	pt3dadd(219.91, 128.75, -2.74, 1.8)
	pt3dadd(227.85, 130.11, -5.45, 1.8)
	pt3dadd(232.62, 131.46, -5.88, 1.8)
	pt3dadd(237.7, 133.18, -5.88, 1.8)
	pt3dadd(243.26, 136.56, -5.88, 1.8)
	pt3dadd(248.29, 138.13, -5.88, 1.8)
	pt3dadd(254.11, 137.68, -5.88, 1.8)
	pt3dadd(259.23, 139.4, -5.88, 1.8)
	pt3dadd(261.61, 143.01, -7.82, 1.8)
	pt3dadd(266.65, 144.81, -10.14, 1.8)
	pt3dadd(271.41, 152.47, -10.3, 1.8)
	pt3dadd(275.12, 160.58, -10.28, 1.8)
  }
  dend[4] {pt3dclear()
	pt3dadd(194.33, 126.26, -1.86, 1.8)
	pt3dadd(196.32, 130.53, -3.42, 1.8)
	pt3dadd(202.14, 134.83, -5.24, 1.8)
	pt3dadd(209.82, 142.72, -9, 1.8)
	pt3dadd(215.38, 149.03, -12.34, 1.8)
	pt3dadd(221.49, 158.49, -14.95, 1.8)
	pt3dadd(225.2, 168.17, -17.42, 1.8)
	pt3dadd(225.93, 179.49, -17.42, 1.8)
	pt3dadd(220.9, 186.25, -22.18, 1.8)
  }
  dend[5] {pt3dclear()
	pt3dadd(142.13, 85.68, 6.19, 2.25)
	pt3dadd(143.19, 89.85, 6.09, 1.8)
	pt3dadd(147.96, 95.71, 7.56, 1.8)
	pt3dadd(152.2, 101.79, 8.78, 1.8)
	pt3dadd(158.82, 109, 10.7, 1.8)
	pt3dadd(166.74, 116.93, 11.76, 1.8)
	pt3dadd(175.75, 125.72, 11.78, 1.8)
	pt3dadd(180.25, 130.45, 13.54, 1.8)
	pt3dadd(187.61, 137.83, 16.17, 1.8)
	pt3dadd(193.97, 145.49, 18.03, 1.8)
	pt3dadd(200.59, 154.73, 21.98, 1.8)
	pt3dadd(201.39, 155.9, 21.98, 1.8)
  }
  dend[6] {pt3dclear()
	pt3dadd(201.39, 155.9, 21.98, 1.8)
	pt3dadd(207.75, 156.58, 24.04, 1.8)
	pt3dadd(214.9, 159.73, 22.7, 1.8)
	pt3dadd(220.72, 163.11, 24.06, 1.8)
	pt3dadd(227.87, 166.04, 22.16, 1.8)
	pt3dadd(232.04, 175.24, 19.67, 1.8)
  }
  dend[7] {pt3dclear()
	pt3dadd(201.39, 155.9, 21.98, 1.8)
	pt3dadd(204.05, 161.88, 21.05, 1.8)
	pt3dadd(207.75, 168.64, 22.77, 1.8)
	pt3dadd(210.14, 173.37, 22.77, 1.8)
	pt3dadd(215.7, 177.88, 22.27, 1.8)
	pt3dadd(225.86, 180.73, 20.62, 1.8)
	pt3dadd(230.63, 181.85, 20.62, 1.8)
	pt3dadd(238.31, 188.84, 18.17, 1.8)
	pt3dadd(242.64, 193.78, 18.17, 1.8)
	pt3dadd(242.11, 199.86, 16.64, 1.8)
  }
  dend[8] {pt3dclear()
	pt3dadd(17.21, 14.22, -0.6, 3.6)
	pt3dadd(19.48, 16.42, -6.58, 2.25)
	pt3dadd(23.71, 17.55, -7.1, 2.25)
  }
  dend[9] {pt3dclear()
	pt3dadd(23.71, 17.55, -7.1, 2.25)
	pt3dadd(30.07, 17.1, -9.69, 2.25)
	pt3dadd(35.1, 16.64, -10.84, 2.25)
	pt3dadd(40.92, 15.74, -13.51, 2.25)
	pt3dadd(46.45, 14.92, -13.22, 2.25)
	pt3dadd(52.81, 13.57, -14.96, 2.25)
	pt3dadd(58.1, 12.89, -16.73, 2.25)
	pt3dadd(62.61, 12.89, -16.73, 2.25)
	pt3dadd(67.59, 12.57, -16.73, 1.8)
	pt3dadd(72.36, 11.89, -18.9, 1.8)
	pt3dadd(77.92, 11.67, -18.45, 1.8)
	pt3dadd(82.42, 11.89, -20.21, 1.8)
	pt3dadd(87.98, 13.24, -21.7, 1.8)
	pt3dadd(95.04, 16.57, -23.12, 1.8)
	pt3dadd(102.19, 19.73, -25.03, 1.8)
	pt3dadd(107.22, 22.66, -25.03, 1.8)
	pt3dadd(111.99, 25.36, -26.5, 1.8)
	pt3dadd(115.4, 27.9, -26.29, 1.8)
	pt3dadd(121.23, 30.6, -26.67, 1.8)
	pt3dadd(127.85, 35.11, -28.13, 1.8)
	pt3dadd(132.35, 38.94, -28.67, 1.8)
	pt3dadd(138.17, 43.22, -31.44, 1.8)
	pt3dadd(143.25, 48.85, -31.44, 1.8)
	pt3dadd(147.76, 53.81, -32.32, 1.8)
	pt3dadd(153.05, 59.89, -34.66, 1.8)
	pt3dadd(158.08, 65.97, -36.46, 1.8)
	pt3dadd(161.07, 72.08, -36.36, 1.8)
	pt3dadd(167.96, 79.74, -36.36, 1.8)
	pt3dadd(174.57, 86.72, -37.86, 1.8)
	pt3dadd(180.12, 94.95, -39.57, 1.8)
	pt3dadd(185.94, 101.49, -41.6, 1.8)
	pt3dadd(189.65, 106.89, -41.6, 1.8)
	pt3dadd(196.38, 115.15, -43.8, 1.8)
	pt3dadd(201.14, 121.46, -45.02, 1.8)
	pt3dadd(206.17, 127.32, -46.92, 1.8)
	pt3dadd(213.57, 135.58, -48.73, 1.8)
	pt3dadd(219.66, 141.44, -50.71, 1.8)
	pt3dadd(224.96, 147.29, -50.71, 1.8)
	pt3dadd(227.87, 150.85, -50.71, 1.8)
	pt3dadd(229.72, 153.1, -51.63, 1.8)
  }
  dend[10] {pt3dclear()
	pt3dadd(229.72, 153.1, -51.63, 1.8)
	pt3dadd(237.4, 157.38, -55.26, 1.8)
	pt3dadd(241.37, 159.63, -56.84, 1.8)
	pt3dadd(247.73, 160.54, -54.49, 1.8)
	pt3dadd(252.46, 160.64, -58.46, 1.8)
	pt3dadd(255.37, 159.29, -58.58, 1.8)
	pt3dadd(259.34, 159.74, -61.4, 1.8)
	pt3dadd(261.73, 161.1, -64.96, 1.8)
  }
  dend[11] {pt3dclear()
	pt3dadd(229.72, 153.1, -51.63, 1.8)
	pt3dadd(232.34, 161.55, -47.02, 1.8)
	pt3dadd(234.72, 167.41, -48.54, 1.8)
	pt3dadd(239.23, 172.59, -45.62, 1.8)
	pt3dadd(241.81, 177.55, -45.62, 1.8)
	pt3dadd(246.04, 179.13, -41.07, 1.8)
	pt3dadd(246.84, 179.13, -43.03, 1.8)
  }
  dend[12] {pt3dclear()
	pt3dadd(23.71, 17.55, -7.1, 2.25)
	pt3dadd(26.61, 21.6, -13.77, 2.25)
	pt3dadd(28.46, 24.3, -16.14, 2.25)
  }
  dend[13] {pt3dclear()
	pt3dadd(28.46, 24.3, -16.14, 2.25)
	pt3dadd(31.9, 23.4, -19.09, 2.25)
	pt3dadd(37.2, 23.63, -24.06, 1.8)
	pt3dadd(41.7, 24.3, -27.32, 1.8)
	pt3dadd(48.05, 25.43, -29.69, 1.8)
	pt3dadd(51.14, 27.9, -30.96, 1.8)
	pt3dadd(53.78, 29.25, -34.13, 1.8)
	pt3dadd(60.93, 29.7, -36.6, 1.8)
	pt3dadd(63.85, 29.25, -39.2, 1.8)
	pt3dadd(68.35, 30.38, -41.46, 1.8)
	pt3dadd(71.26, 32.85, -43.46, 1.8)
	pt3dadd(75.53, 36.17, -46.39, 1.8)
	pt3dadd(79.5, 39.55, -48.63, 1.8)
	pt3dadd(82.41, 42.48, -50.74, 1.8)
	pt3dadd(86.12, 45.41, -50.74, 1.8)
	pt3dadd(91.15, 47.66, -52.5, 1.8)
	pt3dadd(95.12, 52.39, -55.78, 1.8)
	pt3dadd(97.87, 57.35, -55.31, 1.8)
	pt3dadd(102.37, 62.98, -57.9, 1.8)
	pt3dadd(107.4, 68.61, -60.16, 1.8)
	pt3dadd(112.96, 76.5, -62.34, 1.8)
	pt3dadd(116.46, 82.95, -63.46, 1.8)
	pt3dadd(121.76, 89.03, -66.45, 1.8)
	pt3dadd(125.47, 92.86, -66.45, 1.8)
	pt3dadd(129.44, 99.17, -67.91, 1.8)
	pt3dadd(135.98, 107.55, -70.38, 1.8)
	pt3dadd(141.27, 113.41, -70.63, 1.8)
	pt3dadd(145.51, 116.57, -73.72, 1.8)
	pt3dadd(151.87, 122.2, -73.72, 1.8)
	pt3dadd(157.78, 128.28, -76.78, 1.8)
	pt3dadd(161.76, 131.2, -78.53, 1.8)
	pt3dadd(163.61, 133.46, -79.44, 1.8)
	pt3dadd(166.79, 135.26, -82.18, 1.8)
	pt3dadd(169.7, 137.74, -82.75, 1.8)
	pt3dadd(172.35, 139.09, -86.47, 1.8)
  }
  dend[14] {pt3dclear()
	pt3dadd(172.35, 139.09, -86.47, 1.8)
	pt3dadd(173.94, 143.82, -91.74, 1.8)
	pt3dadd(177.46, 147.65, -97.26, 1.8)
	pt3dadd(180.64, 150.8, -100.3, 1.8)
	pt3dadd(184.08, 149.9, -102.92, 1.8)
	pt3dadd(186.47, 154.41, -104.43, 1.8)
	pt3dadd(190.44, 155.31, -110.54, 1.8)
	pt3dadd(193.88, 158.46, -110.98, 1.8)
	pt3dadd(194.94, 159.81, -114.59, 1.8)
  }
}
proc shape3d_2() {
  dend[14] {  }
  dend[15] {pt3dclear()
	pt3dadd(172.35, 139.09, -86.47, 1.8)
	pt3dadd(177.72, 140.82, -89.19, 1.8)
	pt3dadd(182.22, 140.15, -88.74, 1.8)
	pt3dadd(185.93, 139.92, -90.4, 1.8)
	pt3dadd(190.69, 145.78, -91.31, 1.8)
  }
  dend[16] {pt3dclear()
	pt3dadd(28.46, 24.3, -16.14, 2.25)
	pt3dadd(28.29, 28.68, -16.14, 1.8)
	pt3dadd(26.7, 35.89, -16.72, 1.8)
	pt3dadd(24.59, 43.54, -14.92, 1.8)
	pt3dadd(21.5, 50.88, -16.32, 1.8)
	pt3dadd(20.7, 58.09, -19.62, 1.8)
	pt3dadd(20.17, 65.3, -20.51, 1.8)
	pt3dadd(19.69, 73.1, -22.32, 1.8)
	pt3dadd(21.55, 81.66, -22.19, 1.8)
	pt3dadd(22.61, 87.52, -24.32, 1.8)
	pt3dadd(24.48, 97.98, -27.29, 1.8)
	pt3dadd(26.59, 106.54, -27.29, 1.8)
	pt3dadd(28.35, 114.98, -27.72, 1.8)
	pt3dadd(27.55, 123.77, -30.8, 1.8)
	pt3dadd(28.08, 131, -32.1, 1.8)
	pt3dadd(26.24, 142.23, -34.36, 1.8)
	pt3dadd(23.86, 155.52, -37.71, 1.8)
	pt3dadd(22.43, 166.18, -39.62, 1.8)
	pt3dadd(22.7, 173.17, -41.7, 1.8)
	pt3dadd(23.49, 180.15, -44.54, 1.8)
	pt3dadd(23.23, 183.82, -45.82, 1.8)
  }
  dend[17] {pt3dclear()
	pt3dadd(23.23, 183.82, -45.82, 1.8)
	pt3dadd(21.64, 190.58, -45.82, 1.8)
	pt3dadd(22.43, 198.02, -51.66, 1.8)
	pt3dadd(21.9, 204.32, -52.23, 1.8)
	pt3dadd(18.52, 210.5, -56.52, 1.8)
	pt3dadd(16.13, 217.03, -59.7, 1.8)
	pt3dadd(13.75, 223.34, -63.99, 1.8)
	pt3dadd(8.46, 234.21, -65.24, 1.8)
  }
  dend[18] {pt3dclear()
	pt3dadd(23.23, 183.82, -45.82, 1.8)
	pt3dadd(25.01, 185.82, -45.82, 1.8)
	pt3dadd(26.07, 194.83, -46.84, 1.8)
	pt3dadd(27.39, 200.24, -46.84, 1.8)
	pt3dadd(28.19, 206.77, -46.84, 1.8)
	pt3dadd(27.56, 215.6, -44.52, 1.8)
	pt3dadd(29.95, 221.01, -44.52, 1.8)
	pt3dadd(32.06, 225.74, -44.52, 1.8)
	pt3dadd(32.16, 232.8, -45.3, 1.8)
  }
  dend[19] {pt3dclear()
	pt3dadd(0, 0, 0, 3.6)
	pt3dadd(2.35, 22.48, -4.67, 3.6)
	pt3dadd(1.82, 27.66, -4.67, 3.6)
	pt3dadd(0.23, 33.74, -2.71, 3.15)
  }
  dend[20] {pt3dclear()
	pt3dadd(0.23, 33.74, -2.71, 3.15)
	pt3dadd(-5.93, 38.52, 0.28, 2.25)
	pt3dadd(-10.96, 44.16, 4.49, 2.25)
	pt3dadd(-15.46, 50.01, 6.14, 2.25)
	pt3dadd(-19.17, 54.07, 10.37, 2.25)
	pt3dadd(-23.28, 59.4, 12.42, 2.25)
	pt3dadd(-26.99, 65.71, 16.95, 2.25)
	pt3dadd(-29.63, 68.64, 19.53, 2.25)
	pt3dadd(-34.14, 70.44, 19.88, 2.25)
	pt3dadd(-38.9, 76.52, 24.66, 2.25)
	pt3dadd(-45.15, 80.38, 26.74, 2.25)
	pt3dadd(-49.39, 85.11, 30.78, 2.25)
	pt3dadd(-54.42, 92.99, 34.69, 2.25)
	pt3dadd(-58.92, 100.2, 38.67, 2.25)
	pt3dadd(-62.81, 105.63, 38.67, 2.25)
	pt3dadd(-66.26, 115.99, 42.37, 2.25)
	pt3dadd(-69.17, 122.52, 43.74, 2.25)
	pt3dadd(-73.21, 128.45, 45.57, 2.25)
	pt3dadd(-75.86, 137.24, 47.38, 2.25)
	pt3dadd(-78.25, 148.27, 50.31, 2.25)
	pt3dadd(-80.63, 159.71, 49.89, 2.25)
	pt3dadd(-83.27, 165.82, 47.63, 2.25)
	pt3dadd(-84.6, 173.93, 47.63, 2.25)
	pt3dadd(-87.49, 182.78, 47.63, 2.25)
	pt3dadd(-88.02, 192.69, 44.19, 2.25)
	pt3dadd(-89.1, 201.15, 40.94, 2.25)
	pt3dadd(-91.22, 206.56, 40.94, 2.25)
	pt3dadd(-93.34, 209.94, 40.94, 2.25)
	pt3dadd(-94.13, 211.07, 42.39, 2.25)
  }
  dend[21] {pt3dclear()
	pt3dadd(-94.13, 211.07, 42.39, 2.25)
	pt3dadd(-92.52, 218.45, 43.59, 1.8)
	pt3dadd(-89.87, 228.37, 47.58, 1.8)
	pt3dadd(-87.22, 235.35, 47.58, 1.8)
	pt3dadd(-85.85, 244.2, 47.58, 1.8)
	pt3dadd(-81.35, 252.99, 46.8, 1.8)
	pt3dadd(-77.64, 260.87, 46.46, 1.8)
	pt3dadd(-74.53, 269.35, 44.71, 1.8)
	pt3dadd(-69.76, 278.82, 49.91, 1.8)
  }
  dend[22] {pt3dclear()
	pt3dadd(-94.13, 211.07, 42.39, 2.25)
	pt3dadd(-97.02, 212.75, 42.39, 1.8)
	pt3dadd(-98.34, 214.1, 42.39, 1.8)
  }
  dend[23] {pt3dclear()
	pt3dadd(-98.34, 214.1, 42.39, 1.8)
	pt3dadd(-102.85, 223.34, 44.57, 1.8)
	pt3dadd(-103.9, 227.17, 44.57, 1.8)
	pt3dadd(-107.88, 234.6, 42.67, 1.8)
	pt3dadd(-109.09, 242.18, 47.06, 2.25)
	pt3dadd(-109.36, 249.17, 47.06, 2.25)
	pt3dadd(-107.32, 254.43, 49.22, 2.25)
	pt3dadd(-105.47, 263.44, 53.92, 1.8)
	pt3dadd(-102.56, 270.42, 53.92, 1.8)
	pt3dadd(-101.58, 278.08, 53.5, 1.8)
  }
  dend[24] {pt3dclear()
	pt3dadd(-98.34, 214.1, 42.39, 1.8)
	pt3dadd(-105.33, 217.55, 40.59, 1.8)
	pt3dadd(-112.21, 221.38, 41.63, 1.8)
	pt3dadd(-120.42, 225.01, 39.18, 1.8)
	pt3dadd(-127.59, 227.95, 37.06, 1.8)
	pt3dadd(-133.42, 231.55, 36.37, 1.8)
	pt3dadd(-138.71, 233.13, 37.37, 1.8)
	pt3dadd(-147.19, 233.13, 35.78, 1.8)
	pt3dadd(-154.07, 233.32, 37.1, 1.8)
	pt3dadd(-157.25, 236.48, 37.1, 1.8)
	pt3dadd(-162.28, 237.83, 38.18, 1.8)
	pt3dadd(-163.87, 242.56, 36.82, 1.8)
	pt3dadd(-165.99, 246.39, 36.82, 1.8)
	pt3dadd(-169.43, 248.42, 38.58, 1.8)
	pt3dadd(-171.55, 252.25, 36.12, 1.8)
  }
  dend[25] {pt3dclear()
	pt3dadd(0.23, 33.74, -2.71, 3.15)
	pt3dadd(1.22, 33.52, 1.8, 2.25)
  }
  dend[26] {pt3dclear()
	pt3dadd(1.22, 33.52, 1.8, 2.25)
	pt3dadd(5.9, 37.77, 5.46, 1.8)
	pt3dadd(10.14, 43.17, 7.51, 1.8)
	pt3dadd(14.64, 49.26, 10.48, 1.8)
	pt3dadd(18.87, 55.56, 14.01, 1.8)
	pt3dadd(22.32, 59.39, 14.01, 1.8)
	pt3dadd(26.06, 66.43, 18.68, 1.8)
	pt3dadd(32.95, 74.99, 22.04, 1.8)
	pt3dadd(36.92, 81.3, 21.87, 1.8)
	pt3dadd(42.32, 90, 23.73, 1.8)
	pt3dadd(46.03, 94.51, 23.73, 1.8)
	pt3dadd(48.41, 98.34, 24.09, 1.8)
	pt3dadd(55.29, 103.52, 26.13, 1.8)
	pt3dadd(60.98, 109.93, 25.39, 1.8)
	pt3dadd(66.28, 117.36, 25.65, 1.8)
	pt3dadd(73.69, 123.67, 25.65, 1.8)
	pt3dadd(80.38, 132.4, 27.25, 1.8)
	pt3dadd(83.56, 138.94, 28.66, 1.8)
	pt3dadd(89.91, 147.95, 28.66, 1.8)
	pt3dadd(94.92, 154.33, 28.66, 1.8)
	pt3dadd(101.81, 158.61, 34.21, 1.8)
	pt3dadd(107.63, 165.59, 34.21, 1.8)
	pt3dadd(110.7, 170.62, 37.1, 1.8)
	pt3dadd(112.29, 178.5, 37.03, 1.8)
	pt3dadd(113.35, 186.16, 36.75, 1.8)
	pt3dadd(113.35, 195.17, 37.54, 1.8)
	pt3dadd(113.69, 209.61, 34.78, 1.8)
	pt3dadd(114.48, 215.92, 33.9, 1.8)
	pt3dadd(116.68, 225.06, 34.94, 1.8)
	pt3dadd(117.21, 234.74, 36.97, 1.8)
	pt3dadd(114.77, 242.7, 36.64, 1.8)
	pt3dadd(108.95, 245.18, 39.96, 1.8)
	pt3dadd(106.83, 246.08, 42.88, 1.8)
  }
  dend[27] {pt3dclear()
	pt3dadd(1.22, 33.52, 1.8, 2.25)
	pt3dadd(-0.43, 40.95, -4.38, 2.25)
	pt3dadd(-2.28, 46.36, -6.05, 2.25)
	pt3dadd(-2.02, 47.49, -6.05, 2.25)
  }
  dend[28] {pt3dclear()
	pt3dadd(-2.02, 47.49, -6.05, 2.25)
	pt3dadd(-7.05, 53.34, -7.38, 2.25)
	pt3dadd(-10.95, 54.52, -8.26, 2.25)
	pt3dadd(-12.8, 56.77, -8.26, 2.25)
  }
  dend[29] {pt3dclear()
	pt3dadd(-12.8, 56.77, -8.26, 2.25)
	pt3dadd(-12.8, 61.73, -11.3, 1.8)
	pt3dadd(-13.6, 66.01, -12.95, 1.8)
	pt3dadd(-14.66, 70.97, -14.56, 2.25)
	pt3dadd(-15.19, 75.92, -17.78, 2.25)
	pt3dadd(-15.24, 83.9, -20.91, 2.25)
	pt3dadd(-15.24, 88.41, -23.22, 1.8)
	pt3dadd(-14.18, 94.04, -25.3, 1.8)
	pt3dadd(-13.92, 100.12, -25.66, 1.8)
	pt3dadd(-14.7, 109.91, -28.88, 1.8)
	pt3dadd(-15.5, 120.27, -30.94, 1.8)
	pt3dadd(-15.97, 131.51, -33.5, 1.8)
	pt3dadd(-16.24, 136.46, -34.59, 1.8)
	pt3dadd(-18.35, 142.1, -34.12, 1.8)
	pt3dadd(-18.91, 145.82, -36.62, 1.8)
	pt3dadd(-14.67, 151, -39, 1.8)
	pt3dadd(-11.23, 154.83, -41.99, 1.8)
	pt3dadd(-13.08, 160.92, -45.07, 1.8)
	pt3dadd(-14.7, 167.15, -48.58, 1.8)
	pt3dadd(-13.9, 177.51, -51.34, 1.8)
	pt3dadd(-12.58, 185.4, -50.73, 1.8)
	pt3dadd(-10.85, 195.11, -54.26, 1.8)
	pt3dadd(-7.94, 201.19, -56.76, 1.8)
	pt3dadd(-5.29, 209.75, -58.76, 1.8)
	pt3dadd(-3.92, 216.35, -61.7, 1.8)
	pt3dadd(0.58, 222.66, -66.55, 1.8)
	pt3dadd(3.76, 224.69, -69.02, 1.8)
	pt3dadd(5.61, 228.74, -70.99, 1.8)
	pt3dadd(11.58, 232.67, -73.73, 1.8)
  }
  dend[30] {pt3dclear()
	pt3dadd(-12.8, 56.77, -8.26, 2.25)
	pt3dadd(-16.87, 59.95, -8.26, 2.25)
	pt3dadd(-24.55, 65.8, -6.63, 2.25)
	pt3dadd(-29.32, 70.54, -6.63, 2.25)
	pt3dadd(-34.35, 76.84, -4.48, 2.25)
	pt3dadd(-42.12, 85.38, -4.53, 2.25)
	pt3dadd(-48.28, 92.59, -4.59, 1.8)
	pt3dadd(-53.04, 99.8, -4.59, 1.8)
	pt3dadd(-57.61, 105.03, -3.91, 1.8)
	pt3dadd(-63.17, 113.81, -3.28, 1.8)
	pt3dadd(-68.2, 121.02, -3.28, 1.8)
	pt3dadd(-71.42, 125.07, -3.28, 1.8)
	pt3dadd(-75.13, 130.71, -3.28, 1.8)
	pt3dadd(-78.83, 134.99, -3.28, 1.8)
	pt3dadd(-84.13, 139.72, -1.34, 1.8)
  }
}
proc shape3d_3() {
  dend[30] {	pt3dadd(-91.66, 144.15, -0.75, 1.8)
	pt3dadd(-96.16, 154.96, -1.62, 1.8)
	pt3dadd(-99.34, 163.52, -1.62, 1.8)
	pt3dadd(-102.15, 170.13, -1.62, 1.8)
	pt3dadd(-105.6, 176.46, 1.3, 1.8)
  }
  dend[31] {pt3dclear()
	pt3dadd(-105.6, 176.46, 1.3, 1.8)
	pt3dadd(-105.86, 184.34, -2.6, 1.8)
	pt3dadd(-108.69, 192.98, -1.82, 1.8)
	pt3dadd(-110.28, 203.79, -4.49, 1.8)
	pt3dadd(-112.63, 212.13, -7.39, 1.8)
	pt3dadd(-114.48, 219.79, -7.39, 1.8)
	pt3dadd(-113.95, 226.32, -9.54, 1.8)
	pt3dadd(-115.83, 235.43, -12.23, 1.8)
	pt3dadd(-113.71, 243.11, -16.97, 1.8)
	pt3dadd(-112.12, 246.94, -20.45, 1.8)
	pt3dadd(-109.72, 253.55, -25.06, 1.8)
	pt3dadd(-107.87, 256.96, -27.23, 1.8)
  }
  dend[32] {pt3dclear()
	pt3dadd(-105.6, 176.46, 1.3, 1.8)
	pt3dadd(-110.41, 178.92, 1.3, 1.8)
	pt3dadd(-115.44, 187.26, 2.75, 1.8)
	pt3dadd(-118.88, 192.44, 6.79, 1.8)
	pt3dadd(-123.65, 197.17, 8.86, 1.8)
	pt3dadd(-127.35, 202.2, 11.35, 1.8)
	pt3dadd(-132.91, 211.21, 11.35, 1.8)
	pt3dadd(-137.68, 218.65, 14.86, 1.8)
	pt3dadd(-141.94, 220.87, 14.86, 1.8)
	pt3dadd(-148.03, 221.55, 14.1, 1.8)
	pt3dadd(-152.01, 223.58, 14.1, 1.8)
	pt3dadd(-154.65, 227.4, 14.1, 1.8)
	pt3dadd(-154.65, 231.91, 18.1, 1.8)
	pt3dadd(-157.04, 235.06, 18.1, 1.8)
	pt3dadd(-160.21, 240.47, 18.03, 1.8)
	pt3dadd(-165.23, 244.43, 23.23, 1.8)
	pt3dadd(-168.4, 245.58, 27.72, 1.8)
	pt3dadd(-175.29, 247.38, 31.58, 1.8)
	pt3dadd(-181.38, 246.71, 33.47, 1.8)
	pt3dadd(-188.26, 248.73, 33.86, 1.8)
  }
  dend[33] {pt3dclear()
	pt3dadd(-2.02, 47.49, -6.05, 2.25)
	pt3dadd(1.08, 52.08, -8.55, 1.8)
	pt3dadd(5.05, 58.16, -9.09, 1.8)
	pt3dadd(8.76, 65.59, -11.49, 1.8)
	pt3dadd(12.53, 73.95, -12.42, 1.8)
	pt3dadd(17.83, 80.74, -15.31, 1.8)
	pt3dadd(21.27, 85.24, -15.46, 1.8)
	pt3dadd(25.33, 92.88, -18.62, 1.8)
	pt3dadd(29.04, 100.54, -20.52, 1.8)
	pt3dadd(32.21, 107.07, -22.72, 1.8)
	pt3dadd(36.13, 115.6, -24.75, 1.8)
	pt3dadd(39.57, 125.07, -26.49, 1.8)
	pt3dadd(43.26, 135.16, -29.99, 1.8)
	pt3dadd(46.18, 140.79, -30.42, 1.8)
	pt3dadd(51.74, 145.07, -32.74, 1.8)
	pt3dadd(59.17, 150.2, -35.11, 1.8)
	pt3dadd(65, 155.38, -36.43, 1.8)
	pt3dadd(68.44, 158.54, -36.43, 1.8)
	pt3dadd(75.85, 163.29, -37.42, 1.8)
	pt3dadd(81.12, 167.95, -37.42, 1.8)
	pt3dadd(87.47, 175.83, -38.71, 1.8)
	pt3dadd(93.56, 181.24, -41.11, 1.8)
	pt3dadd(100.18, 186.2, -41.11, 1.8)
	pt3dadd(106.51, 192.78, -43.78, 1.8)
	pt3dadd(114.99, 198.41, -46.46, 1.8)
	pt3dadd(118.96, 201.11, -46.46, 1.8)
	pt3dadd(121.08, 207.42, -48.66, 1.8)
	pt3dadd(123.81, 208.1, -51, 1.8)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
}

proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	objref ProximalSynapses 
	objref ProximalSynapsePositions 
	proc synapse() {
	
  
 
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(2, 3, 4, 5, 6, 7, 9,10,11,13,14,15,17,18,20,21,22,23,24,26,29,31,32,33) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.91885,    0.5,    0.5,0.80406,    0.5,    0.5,0.86781,    0.5,    0.5, 0.9451,    0.5,    0.5,0.68521,0.71236,0.95532,    0.5,    0.5,    0.5,    0.5,0.86726,0.90982,0.55744, 0.5404,0.91703) 
for i= 0 , 23 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0  
pre_list.append(syn) // # 0  
} 
 
 // //***** MC syn   
 
ProximalSynapses = new Vector(0,0) 
ProximalSynapses .append(0, 1, 8, 9,12,13,16,19,20,25,26,27,28,33) 
ProximalSynapsePositions = new Vector(0,0) 
ProximalSynapsePositions .append(0.5, 0.1419,    0.5,    0.059904,    0.5,    0.048058,    0.061039,    0.5 ,   0.076623,    0.5 ,   0.054658,    0.5,0.41885,    0.028827) 
for i= 0 , 13 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // #  
} 
 
 // //***** HIPP   
 
for i= 0 , 23 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // HIPP  
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 37 
} 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 38 
 
 // //***** Sprout   
 
for i= 0 , 13 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 38 
} 


}
	func is_art() { return 0 }

	endtemplate GranuleCell71
//************************************************************************************************************