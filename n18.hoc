/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell18

// Original name on neuroMorpho.org n18-cont03-sl3.CNG.swc

ndend1=14

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 13 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()


	pdend  = new SectionList()
		dend[1] pdend.append()
		for i=4, 5  dend[i] pdend.append()

	mdend  = new SectionList()
		for i=2, 3  dend[i] mdend.append()
		for i=7, 9  dend[i] mdend.append()
		dend[11] mdend.append()
		dend[13] mdend.append()
		
		
		
	ddend  = new SectionList()
		dend[6] ddend.append()
		dend[10] ddend.append()
		dend[12] ddend.append()
		
		
		
}
proc gctemp() {

// 	soma {nseg=1 L=16.329 diam=11.165} // changed L & diam
// 		
// 	dend [0] {nseg=1  L=20.05632 diam=2.6}
// 	dend [1] {nseg=1  L=80.78021 diam=1.6478}
// 	dend [2] {nseg=1  L=10.61434 diam=1.1833}
// 	dend [3] {nseg=1  L=25.82767 diam=1.0346}
// 	dend [4] {nseg=1  L=30.89202 diam=0.7664}
// 	dend [5] {nseg=1  L=43.53635 diam=0.9072}
// 	dend [6] {nseg=1  L=37.46003 diam=0.9215}
// 	dend [7] {nseg=1  L=85.47885 diam=0.5756}
// 	dend [8] {nseg=1  L=121.54242 diam=0.6968}
// 	dend [9] {nseg=1  L=78.91646 diam=0.6705}
// 	dend [10] {nseg=1 L=97.50034 diam=0.7203}
// 	dend [11] {nseg=1 L=19.96318 diam=0.8309}
// 	dend [12] {nseg=1 L=125.23049 diam=0.5746}
// 	dend [13] {nseg=1 L=117.23326 diam=0.6059}
// 	dend [14] {nseg=1 L=31.96199 diam=0.6411}
// 	dend [15] {nseg=1 L=45.48879 diam=0.6389}
// 	dend [16] {nseg=1 L=22.50602 diam=0.5591}
// 	dend [17] {nseg=1 L=37.40208 diam=0.6970}
// 	dend [18] {nseg=1 L=20.88699 diam=0.6050}
// 	dend [19] {nseg=1 L=10.10732 diam=0.5985}
	
// 	for i = 1, 20	dend [i] {nseg=1 L=150 diam=3}

// 	gcdend2 [0] {nseg=1 L=50 diam=3}
// 	for i = 1, 3	gcdend2 [i] {nseg=1 L=150 diam=3}	 	

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	connect dend[0](0), soma(1)
// 	connect gcdend2[0](0), soma(1)
// 	for i=1,3 {
// 	connect dend[i](0), dend[i-1](1)
// 	}
// 	for i=1,3 {
// 	connect gcdend2[i](0), gcdend2[i-1](1)
// 	}
  for i = 0, 1 connect dend[i](0), soma(1)
  for i = 2, 3 connect dend[i](0), dend(1)
  for i = 4, 5 connect dend[i](0), dend[1](1)
  for i = 6, 7 connect dend[i](0), dend[2](1)
  for i = 8, 9 connect dend[i](0), dend[4](1)
  for i = 10, 11 connect dend[i](0), dend[7](1)
  for i = 12, 13 connect dend[i](0), dend[8](1)
basic_shape()
	    

// 	  connect axon(1), soma(0)


	forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70

		cao_ccanl=2 }  // make catau slower70e-3 	cao=2 cai=50.e-6 

// current injection
//for i=0,0 {
//stimdel[i]=500
//stimdur[i]=200
//stimamp[i]=0.2

//soma stim[i] = new IClamp(0.5)
//stim.del[i]=stimdel[i]
//stim.dur[i]=stimdur[i]
//stim.amp[i]=stimamp[i]
//}

}


proc shape3d_1() {
//   axon {pt3dclear()
// 	pt3dadd(0.7517, -38, 0.01, 0.2)
// 	pt3dadd(0.7517, -18, 0.01, 10)
//   }
  soma {pt3dclear()
	pt3dadd(0.7517, -18, 0.01, 10)
	pt3dadd(0.7517, -0.1822, 0, 7.27)
  }
  dend {pt3dclear()
	pt3dadd(0.7517, -0.1822, 0, 7.27)
	pt3dadd(3.9, -3.81, -2.17, 1.86)
	pt3dadd(4.74, -4.63, -3.44, 1.67)
	pt3dadd(5.48, -5.55, -4.4, 1.39)
	pt3dadd(6.32, -6.47, -4.75, 1.3)
	pt3dadd(7.43, -7.67, -4.33, 1.11)
	pt3dadd(8.54, -8.86, -4.24, 1.11)
	pt3dadd(9.75, -9.6, -4.49, 1.11)
	pt3dadd(10.4, -10.88, -5.02, 1.3)
	pt3dadd(11.05, -11.8, -6.03, 1.3)
	pt3dadd(11.23, -12.81, -6.79, 1.3)
	pt3dadd(11.51, -14.38, -6.51, 1.3)
	pt3dadd(11.7, -15.57, -6.48, 1.21)
	pt3dadd(12.16, -16.86, -6.86, 1.21)
	pt3dadd(12.16, -18.05, -6.46, 1.11)
	pt3dadd(12.44, -19.61, -7.17, 1.11)
	pt3dadd(12.25, -20.9, -7.52, 0.93)
	pt3dadd(11.98, -22.46, -8.12, 0.93)
	pt3dadd(11.51, -23.66, -8.91, 0.93)
	pt3dadd(11.23, -24.49, -8.91, 1.02)
	pt3dadd(11.6, -25.41, -9.4, 1.02)
  }
  dend[1] {pt3dclear()
	pt3dadd(0.7517, -0.1822, 0, 7.27)
	pt3dadd(3.83, -0.78, 0.15, 1.3)
	pt3dadd(4.85, -1.79, 0.69, 1.21)
	pt3dadd(5.87, -2.43, 1.09, 1.02)
	pt3dadd(6.8, -3.26, 0.03, 0.93)
	pt3dadd(7.72, -3.63, -0.61, 0.93)
	pt3dadd(9.02, -4.27, -0.52, 0.93)
	pt3dadd(10.23, -4.92, -0.52, 0.93)
	pt3dadd(11.62, -5.56, -0.79, 0.93)
	pt3dadd(13.2, -6.02, -1.04, 0.93)
	pt3dadd(14.31, -6.29, -1.13, 0.83)
	pt3dadd(15.61, -7.03, -1.16, 0.65)
	pt3dadd(16.91, -7.49, -1.08, 0.65)
	pt3dadd(17.65, -8.41, -1.3, 0.65)
	pt3dadd(18.76, -9.05, -0.97, 0.65)
	pt3dadd(19.97, -9.51, -0.97, 0.74)
	pt3dadd(21.27, -10.16, -1.15, 0.93)
	pt3dadd(22.19, -10.71, -1.72, 1.21)
	pt3dadd(22.94, -10.98, -1.41, 1.39)
	pt3dadd(23.34, -11.56, -2.07, 1.21)
	pt3dadd(23.71, -12.38, -2.07, 1.21)
  }
  dend[2] {pt3dclear()
	pt3dadd(11.6, -25.41, -9.4, 1.02)
	pt3dadd(11.88, -26.35, -10.6, 0.83)
	pt3dadd(11.88, -27.46, -11.98, 1.02)
	pt3dadd(12.25, -28.84, -12.62, 1.11)
	pt3dadd(12.53, -29.85, -13.04, 1.11)
	pt3dadd(11.97, -30.77, -13.04, 1.02)
	pt3dadd(11.51, -31.87, -12.01, 0.93)
	pt3dadd(11.6, -33.25, -11.87, 0.93)
	pt3dadd(12.06, -33.98, -11.73, 0.93)
	pt3dadd(11.69, -35.09, -11.43, 0.93)
	pt3dadd(11.14, -36, -11.74, 0.93)
	pt3dadd(11.32, -37.11, -11.81, 0.93)
	pt3dadd(11.69, -37.66, -11.75, 0.74)
	pt3dadd(11.97, -38.3, -11.72, 0.65)
	pt3dadd(12.16, -39.31, -11.04, 1.02)
	pt3dadd(12.06, -40.42, -11.27, 0.74)
	pt3dadd(12.34, -41.7, -12.21, 0.74)
	pt3dadd(12.06, -42.71, -12.27, 0.74)
	pt3dadd(11.97, -43.73, -12.53, 0.74)
	pt3dadd(11.94, -45.1, -12, 0.74)
	pt3dadd(11.76, -46.02, -11.04, 0.74)
	pt3dadd(10.92, -46.84, -10.82, 0.74)
	pt3dadd(10.74, -47.39, -11.03, 0.74)
  }
  dend[3] {pt3dclear()
	pt3dadd(11.6, -25.41, -9.4, 1.02)
	pt3dadd(13.18, -26.51, -9.85, 0.65)
	pt3dadd(14.39, -27.34, -10.3, 0.65)
	pt3dadd(15.22, -28.16, -10.78, 0.65)
	pt3dadd(16.06, -28.71, -11.13, 0.65)
	pt3dadd(17.1, -29.29, -11.09, 0.65)
	pt3dadd(17.93, -30.3, -10.96, 0.65)
	pt3dadd(19.6, -31.13, -10.32, 0.65)
	pt3dadd(20.81, -31.96, -11.74, 0.65)
	pt3dadd(21.74, -33.15, -11.89, 0.65)
	pt3dadd(22.2, -34.53, -12.41, 0.65)
	pt3dadd(22.29, -35.91, -12.94, 0.65)
	pt3dadd(23.04, -36.18, -12.94, 0.65)
	pt3dadd(24.43, -36.64, -12.44, 0.56)
	pt3dadd(25.45, -37.84, -13.16, 0.56)
	pt3dadd(26.84, -39.13, -13.65, 0.56)
	pt3dadd(28.14, -40.41, -14.25, 0.56)
	pt3dadd(29.16, -41.33, -15.15, 0.56)
	pt3dadd(29.62, -41.7, -15.39, 0.56)
	pt3dadd(30.36, -42.34, -16.08, 0.56)
	pt3dadd(30.26, -43.16, -15.83, 0.56)
	pt3dadd(31.28, -43.81, -16.46, 0.56)
	pt3dadd(31.83, -44.54, -16.59, 0.56)
	pt3dadd(32.2, -45.37, -16.27, 0.56)
	pt3dadd(32.57, -46.19, -16.27, 0.56)
	pt3dadd(33.6, -46.75, -16.27, 0.56)
	pt3dadd(34.62, -47.21, -16.83, 0.56)
	pt3dadd(35.36, -48.03, -17.07, 0.74)
	pt3dadd(35.91, -48.68, -16.53, 0.74)
	pt3dadd(36.56, -49.41, -16.52, 0.56)
	pt3dadd(37.58, -50.33, -16.89, 0.56)
	pt3dadd(38.79, -50.61, -17.55, 0.56)
	pt3dadd(40, -51.07, -17.26, 0.56)
  }
  dend[4] {pt3dclear()
	pt3dadd(23.71, -12.38, -2.07, 1.21)
	pt3dadd(24.01, -13.58, -2.17, 0.74)
	pt3dadd(24.11, -14.59, -2.87, 0.65)
	pt3dadd(24.48, -15.61, -2.53, 0.56)
	pt3dadd(25.03, -16.43, -2.73, 0.56)
	pt3dadd(25.03, -17.81, -3.33, 0.56)
	pt3dadd(25.31, -18.82, -3.36, 0.56)
	pt3dadd(25.78, -19.83, -3.56, 0.56)
	pt3dadd(26.05, -20.84, -3.25, 0.56)
	pt3dadd(26.8, -21.67, -3.28, 0.56)
	pt3dadd(27.17, -22.5, -2.97, 0.56)
	pt3dadd(27.63, -22.96, -2.97, 0.56)
	pt3dadd(28.37, -23.6, -2.54, 0.56)
	pt3dadd(27.82, -24.15, -2.54, 0.56)
	pt3dadd(27.82, -24.8, -2.54, 0.56)
	pt3dadd(27.63, -25.35, -2.79, 0.56)
	pt3dadd(28.09, -25.9, -2.21, 0.56)
	pt3dadd(28.84, -26.45, -2.43, 0.56)
	pt3dadd(29.11, -27.09, -2.31, 0.65)
	pt3dadd(29.39, -27.92, -2.27, 0.74)
	pt3dadd(29.67, -28.66, -2.4, 1.11)
	pt3dadd(30.04, -29.3, -2.54, 1.39)
  }
  dend[5] {pt3dclear()
	pt3dadd(23.71, -12.38, -2.07, 1.21)
	pt3dadd(25.75, -13.39, -2.21, 0.56)
	pt3dadd(27.15, -13.95, -2.93, 0.56)
	pt3dadd(29.28, -14.31, -2.57, 0.56)
	pt3dadd(30.21, -14.04, -2.34, 0.56)
	pt3dadd(31.88, -14.59, -1.93, 0.56)
	pt3dadd(33.08, -15.14, -1.08, 0.56)
	pt3dadd(34.47, -16.06, -0.96, 0.56)
	pt3dadd(35.96, -16.06, -0.96, 0.56)
	pt3dadd(37.26, -16.43, -1.36, 0.56)
	pt3dadd(37.65, -16.52, -1.62, 0.56)
  }
  dend[6] {pt3dclear()
	pt3dadd(10.74, -47.39, -11.03, 0.74)
	pt3dadd(9.98, -48.35, -11.05, 0.56)
	pt3dadd(9.61, -49.18, -10.89, 0.65)
	pt3dadd(9.14, -50.56, -10.78, 0.65)
	pt3dadd(8.96, -51.48, -10.93, 0.65)
	pt3dadd(8.96, -52.86, -10.5, 0.46)
	pt3dadd(9.52, -54.51, -10.17, 0.46)
	pt3dadd(9.79, -55.98, -10.69, 0.46)
	pt3dadd(9.98, -56.99, -10.44, 0.46)
	pt3dadd(9.89, -58.28, -10.46, 0.46)
	pt3dadd(10.35, -58.46, -10.54, 0.46)
	pt3dadd(9.61, -59.48, -10.15, 0.46)
	pt3dadd(9.33, -60.67, -10.49, 0.46)
	pt3dadd(9.7, -61.77, -10.74, 0.46)
	pt3dadd(9.89, -62.97, -10.42, 0.46)
	pt3dadd(9.79, -63.98, -10.51, 0.56)
	pt3dadd(9.98, -64.81, -10.24, 0.65)
	pt3dadd(10.07, -65.73, -9.96, 0.46)
	pt3dadd(10.59, -66.55, -9.54, 0.46)
	pt3dadd(10.78, -67.75, -9.81, 0.46)
	pt3dadd(11.15, -68.48, -9.44, 0.46)
	pt3dadd(11.61, -68.94, -9.45, 0.74)
	pt3dadd(12.35, -69.86, -9.29, 0.56)
	pt3dadd(13, -70.87, -9.26, 0.56)
	pt3dadd(13.37, -71.15, -9.26, 0.65)
	pt3dadd(14.58, -71.98, -9.17, 0.56)
	pt3dadd(15.23, -73.08, -8.85, 0.56)
	pt3dadd(15.32, -73.72, -8.31, 0.74)
	pt3dadd(15.32, -75.19, -8.8, 0.74)
	pt3dadd(14.12, -75.19, -8.13, 0.74)
	pt3dadd(13.47, -75.56, -8.13, 0.65)
	pt3dadd(12.82, -76.3, -8.15, 0.74)
	pt3dadd(12.54, -77.4, -8.06, 0.56)
	pt3dadd(12.73, -78.78, -8.54, 0.56)
	pt3dadd(13.1, -79.88, -9.22, 0.56)
	pt3dadd(12.82, -81.08, -9.27, 0.56)
	pt3dadd(12.26, -82.36, -8.79, 0.83)
	pt3dadd(11.98, -83.01, -8.99, 0.65)
	pt3dadd(11.71, -83.83, -8.99, 0.65)
	pt3dadd(11.97, -84.45, -9, 0.65)
	pt3dadd(12.53, -85.37, -8.35, 0.56)
	pt3dadd(12.71, -86.75, -8.35, 0.56)
	pt3dadd(12.62, -88.31, -7.93, 0.56)
	pt3dadd(11.97, -89.05, -7.94, 0.65)
	pt3dadd(11.41, -89.97, -7.94, 0.65)
	pt3dadd(11.14, -90.8, -7.94, 0.56)
	pt3dadd(11.04, -91.53, -7.58, 0.83)
	pt3dadd(11.14, -92.82, -7.1, 0.65)
	pt3dadd(11.04, -94.2, -6.87, 0.56)
	pt3dadd(11.14, -95.48, -7.09, 0.56)
	pt3dadd(10.49, -96.13, -7.09, 0.56)
	pt3dadd(9.56, -96.86, -7.09, 0.56)
	pt3dadd(9.47, -97.87, -6.63, 0.56)
	pt3dadd(9.37, -99.07, -6.41, 0.56)
	pt3dadd(9.47, -99.8, -6.64, 0.56)
	pt3dadd(9.47, -100.5, -6.64, 0.56)
	pt3dadd(9.65, -101.8, -6.54, 0.83)
	pt3dadd(9.81, -103, -6.13, 0.65)
	pt3dadd(9.72, -103.9, -5.49, 0.65)
	pt3dadd(9.63, -104.8, -5.49, 0.65)
	pt3dadd(9.63, -106, -5.79, 0.65)
	pt3dadd(9.54, -107.4, -5.57, 0.65)
	pt3dadd(10, -108.5, -5.57, 0.65)
	pt3dadd(10.09, -109.9, -5.56, 0.46)
	pt3dadd(10.09, -110.7, -5.31, 0.46)
	pt3dadd(9.72, -111.9, -4.63, 0.46)
	pt3dadd(9.72, -114.1, -4.78, 0.46)
  }
}
proc shape3d_2() {
  dend[6] {	pt3dadd(8.79, -115.6, -4.43, 0.46)
	pt3dadd(10.09, -117, -3.89, 0.46)
	pt3dadd(10.37, -118.3, -3.87, 0.46)
  }
  dend[7] {pt3dclear()
	pt3dadd(10.74, -47.39, -11.03, 0.74)
	pt3dadd(10.92, -48.96, -10.68, 0.65)
	pt3dadd(10.27, -50.15, -10.69, 0.56)
	pt3dadd(10.09, -51.71, -10.77, 0.56)
	pt3dadd(10.37, -52.73, -10.11, 0.56)
	pt3dadd(10.83, -54.29, -10.52, 0.56)
	pt3dadd(10.55, -55.58, -11.18, 0.56)
	pt3dadd(10.37, -56.59, -11.24, 0.56)
	pt3dadd(10.83, -57.23, -11.24, 0.56)
	pt3dadd(11.94, -57.6, -11.23, 0.56)
	pt3dadd(12.31, -58.61, -11.2, 0.56)
	pt3dadd(12.59, -60.17, -11.65, 0.56)
	pt3dadd(12.78, -61, -12.09, 0.65)
	pt3dadd(13.06, -61.92, -11.86, 0.56)
	pt3dadd(12.98, -63.86, -12.39, 0.56)
	pt3dadd(13.44, -65.15, -12.07, 0.56)
	pt3dadd(13.44, -66.44, -12.39, 0.56)
	pt3dadd(12.98, -67.82, -12.37, 0.56)
	pt3dadd(12.7, -69.1, -12.08, 0.56)
	pt3dadd(12.42, -70.94, -12.51, 0.56)
	pt3dadd(12.24, -72.32, -12.11, 0.56)
	pt3dadd(11.96, -73.24, -12.44, 0.74)
	pt3dadd(11.96, -74.07, -12.46, 0.74)
	pt3dadd(11.86, -75.17, -12.6, 0.56)
	pt3dadd(11.59, -76.09, -12.64, 0.56)
	pt3dadd(12.05, -77.38, -13.24, 0.56)
	pt3dadd(11.96, -78.48, -13.61, 0.56)
	pt3dadd(11.86, -79.4, -13.71, 0.56)
	pt3dadd(11.98, -80.24, -13.54, 0.56)
	pt3dadd(11.8, -81.62, -14.08, 0.56)
	pt3dadd(11.71, -82.63, -13.8, 0.56)
	pt3dadd(11.06, -83.28, -14.17, 0.56)
	pt3dadd(11.06, -84.47, -13.89, 0.65)
	pt3dadd(10.69, -85.48, -13.99, 0.56)
	pt3dadd(11.06, -87.23, -13.39, 0.56)
	pt3dadd(10.96, -88.24, -13.67, 0.56)
	pt3dadd(11.24, -89.34, -13.79, 0.56)
	pt3dadd(11.43, -90.72, -13.72, 0.74)
	pt3dadd(10.96, -91.46, -13.97, 0.74)
	pt3dadd(10.5, -93.02, -14.12, 0.56)
	pt3dadd(10.41, -94.49, -13.83, 0.56)
	pt3dadd(10.32, -95.96, -14.02, 0.56)
	pt3dadd(10.5, -96.97, -14.73, 0.56)
	pt3dadd(10.41, -97.8, -14.85, 0.56)
	pt3dadd(10.41, -98.53, -14.85, 0.56)
	pt3dadd(10.34, -98.98, -14.57, 0.83)
  }
  dend[8] {pt3dclear()
	pt3dadd(30.04, -29.3, -2.54, 1.39)
	pt3dadd(30.23, -30.22, -2.54, 1.11)
	pt3dadd(30.6, -31.14, -2.29, 1.02)
	pt3dadd(30.88, -31.97, -1.79, 0.74)
	pt3dadd(31.34, -32.52, -1.79, 0.65)
	pt3dadd(32.08, -33.07, -1.79, 0.65)
	pt3dadd(32.73, -33.71, -1.4, 0.83)
	pt3dadd(33.47, -33.9, -1.4, 0.83)
	pt3dadd(33.94, -34.45, -1.4, 0.83)
	pt3dadd(34.82, -35.34, -1.12, 0.83)
	pt3dadd(35.28, -36.26, -1.61, 0.56)
	pt3dadd(36.21, -37, -1.39, 0.56)
	pt3dadd(36.86, -37.73, -1.64, 0.56)
	pt3dadd(37.51, -38.38, -1.28, 0.74)
	pt3dadd(38.25, -39.02, -1.67, 0.83)
	pt3dadd(39.18, -39.57, -1.67, 0.83)
	pt3dadd(40.39, -40.21, -1.14, 0.65)
	pt3dadd(41.59, -41.04, -1.54, 0.65)
	pt3dadd(42.61, -41.69, -1.04, 0.56)
	pt3dadd(43.45, -42.51, -0.07, 0.56)
	pt3dadd(43.82, -43.34, 0.26, 0.56)
	pt3dadd(44.47, -43.8, 0.26, 0.56)
	pt3dadd(44.75, -44.72, 0.45, 0.65)
	pt3dadd(45.21, -45.73, -0.21, 0.65)
	pt3dadd(45.49, -46.37, -0.21, 0.65)
	pt3dadd(46.04, -46.65, -0.24, 0.56)
	pt3dadd(46.69, -47.38, -0.24, 0.56)
	pt3dadd(46.78, -48.34, -0.24, 0.56)
	pt3dadd(46.87, -49.35, -0.06, 1.02)
	pt3dadd(47.24, -50.27, -0.06, 1.02)
	pt3dadd(47.61, -51.46, -0.29, 0.74)
	pt3dadd(48.08, -52.29, -0.65, 0.56)
	pt3dadd(48.73, -52.93, -0.65, 0.56)
	pt3dadd(49.28, -54.03, -0.35, 0.65)
	pt3dadd(49.93, -54.86, -0.97, 0.56)
	pt3dadd(50.58, -55.6, -0.97, 0.65)
	pt3dadd(51.51, -56.42, -0.95, 0.83)
	pt3dadd(52.16, -56.88, -0.95, 1.02)
	pt3dadd(52.9, -57.43, -0.95, 0.83)
	pt3dadd(53.83, -57.99, -0.48, 0.65)
	pt3dadd(54.66, -58.35, -0.02, 0.56)
	pt3dadd(55.68, -59.09, 0.21, 0.56)
	pt3dadd(56.42, -59.73, 0.13, 0.65)
	pt3dadd(57.17, -60.47, 0.33, 0.83)
	pt3dadd(57.72, -60.93, -0.02, 0.74)
	pt3dadd(58.09, -61.94, -0.34, 0.56)
	pt3dadd(58.28, -62.58, -0.17, 0.56)
	pt3dadd(58.47, -63.13, -0.3, 0.83)
	pt3dadd(58.65, -63.59, -0.05, 0.93)
  }
  dend[9] {pt3dclear()
	pt3dadd(30.04, -29.3, -2.54, 1.39)
	pt3dadd(31.16, -28.93, -3.02, 0.56)
	pt3dadd(32.08, -29.3, -3.51, 0.56)
	pt3dadd(32.92, -29.58, -3.83, 0.56)
	pt3dadd(33.75, -29.48, -4.73, 0.56)
	pt3dadd(34.77, -29.12, -5.02, 0.56)
	pt3dadd(35.61, -29.02, -5.02, 0.56)
  }
  dend[10] {pt3dclear()
	pt3dadd(10.34, -98.98, -14.57, 0.83)
	pt3dadd(10.81, -100.5, -14.54, 0.56)
	pt3dadd(11.08, -102.1, -14.71, 0.56)
	pt3dadd(11.27, -103.5, -14.24, 0.56)
	pt3dadd(11.64, -104.6, -14.22, 0.74)
	pt3dadd(12.01, -105.9, -13.87, 0.56)
	pt3dadd(11.55, -106.8, -13.51, 0.56)
	pt3dadd(11.46, -108, -13.51, 0.56)
	pt3dadd(10.99, -109.6, -13.45, 0.56)
	pt3dadd(10.53, -111, -13.53, 0.56)
	pt3dadd(10.25, -112.2, -13.32, 0.56)
	pt3dadd(9.32, -112.7, -12.77, 0.56)
	pt3dadd(8.3, -113.2, -12.77, 0.56)
  }
  dend[11] {pt3dclear()
	pt3dadd(10.34, -98.98, -14.57, 0.83)
	pt3dadd(9.6, -99.71, -15.35, 0.56)
	pt3dadd(8.86, -100.7, -15.59, 0.56)
	pt3dadd(8.21, -100.5, -15.97, 0.56)
	pt3dadd(6.82, -100.6, -15.77, 0.56)
	pt3dadd(5.98, -101.4, -15.5, 0.56)
	pt3dadd(5.33, -102.5, -15.24, 0.56)
	pt3dadd(4.78, -104, -15.24, 0.56)
	pt3dadd(4.22, -105.1, -15.59, 0.56)
  }
  dend[12] {pt3dclear()
	pt3dadd(58.65, -63.59, -0.05, 0.93)
	pt3dadd(59.58, -64.56, 0.26, 0.56)
	pt3dadd(60.13, -65.39, -0.05, 0.74)
	pt3dadd(61.06, -66.13, 1.09, 0.56)
	pt3dadd(61.52, -66.86, 0.34, 1.02)
	pt3dadd(62.54, -67.78, 1.21, 0.56)
	pt3dadd(63.38, -68.43, 0.99, 0.56)
	pt3dadd(64.12, -68.88, 0.99, 0.56)
	pt3dadd(64.68, -69.44, 2, 0.56)
	pt3dadd(65.51, -69.9, 2.64, 1.48)
	pt3dadd(66.07, -70.54, 1.81, 1.11)
	pt3dadd(66.44, -71.27, 2.55, 0.74)
	pt3dadd(66.53, -72.47, 1.77, 0.65)
	pt3dadd(67.18, -73.2, 2.35, 0.65)
	pt3dadd(67.74, -74.31, 1.57, 0.65)
	pt3dadd(68.67, -75.13, 1.58, 0.65)
	pt3dadd(69.69, -76.24, 1.96, 0.65)
	pt3dadd(70.8, -77.52, 2.3, 0.56)
	pt3dadd(71.26, -78.54, 2.17, 0.56)
	pt3dadd(71.91, -79.36, 2.17, 0.74)
	pt3dadd(72.29, -80.26, 2.56, 1.11)
	pt3dadd(72.85, -81.46, 2.04, 0.56)
	pt3dadd(73.87, -82.29, 2.24, 0.56)
	pt3dadd(74.89, -83.11, 2.06, 0.56)
	pt3dadd(75.82, -83.94, 2.64, 0.56)
	pt3dadd(76.56, -84.95, 2.07, 0.56)
	pt3dadd(77.21, -85.23, 2.19, 0.56)
  }
  dend[13] {pt3dclear()
	pt3dadd(58.65, -63.59, -0.05, 0.93)
	pt3dadd(57.54, -64.56, -1.43, 0.56)
	pt3dadd(57.07, -65.94, -1.47, 0.56)
	pt3dadd(56.14, -67.05, -1.47, 0.56)
	pt3dadd(55.96, -68.24, -2.2, 0.56)
	pt3dadd(55.4, -69.9, -2.07, 0.56)
	pt3dadd(55.31, -71, -2.19, 0.56)
	pt3dadd(55.22, -72.75, -3.09, 0.65)
	pt3dadd(56.05, -74.68, -3.88, 0.56)
	pt3dadd(56.33, -75.87, -4.31, 0.56)
	pt3dadd(56.79, -76.79, -4.06, 0.56)
	pt3dadd(57.26, -78.26, -3.68, 0.56)
	pt3dadd(58, -79.18, -4.88, 0.56)
	pt3dadd(58.56, -79.64, -4.08, 0.56)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
}



		
	proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref ProximalSynapses 
	objref ProximalSynapsePositions 
	proc synapse() { 
 
 // //***** PP syn   
 
 
 // //***** MC syn   
 
ProximalSynapses = new Vector(0,0) 
ProximalSynapses .append(0 , 1 , 2 , 3 , 4 , 5 , 8 , 9) 
ProximalSynapsePositions = new Vector(0,0) 
ProximalSynapsePositions .append(0.5  ,       0.5   ,  0.34815  ,   0.21395,         0.5  ,       0.5  ,  0.028374   ,  0.21296) 
for i= 0 , 7 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // #  
} 
 
 // //***** HIPP   
 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 0 
 
 // //***** Sprout   
 
for i= 0 , 7 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 0 
} 

}
	func is_art() { return 0 }

	endtemplate GranuleCell18
//************************************************************************************************************