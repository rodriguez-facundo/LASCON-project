/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell46

// Original name on neuroMorpho.org 411883.CNG.hoc	

ndend1=23

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 22 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()


	pdend  = new SectionList()
		dend[1] pdend.append()
		dend[6] pdend.append()
		for i=12, 13  dend[i] pdend.append()
		for i=16, 18  dend[i] pdend.append()
// 		for i=12, 22  dend[i] pdend.append()


	mdend  = new SectionList()
		dend[2] mdend.append() 
		for i=7, 8  dend[i] mdend.append()
		for i=14, 15  dend[i] mdend.append()
		dend[21] mdend.append() 

	ddend  = new SectionList()
		
		for i=3, 5  dend[i] ddend.append()
		for i=9, 11 dend[i] ddend.append()
		for i=19, 20 dend[i] ddend.append()
		dend[22] ddend.append()  

}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }
		 

  connect dend(0), soma(1)
  for i = 1, 3 connect dend[i](0), dend[i-1](1)
  connect dend[4](0), dend[2](1)
  connect dend[5](0), dend[1](1)
  connect dend[6](0), dend(1)
  for i = 7, 9 connect dend[i](0), dend[i-1](1)
  connect dend[10](0), dend[8](1)
  connect dend[11](0), dend[7](1)
  connect dend[12](0), dend[6](1)
  for i = 13, 14 connect dend[i](0), dend[i-1](1)
  connect dend[15](0), dend[13](1)
  connect dend[16](0), dend[12](1)
  for i = 17, 19 connect dend[i](0), dend[i-1](1)
  connect dend[20](0), dend[18](1)
  connect dend[21](0), dend[17](1)
  connect dend[22](0), dend[16](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 6.00772)
	pt3dadd(-0.65, 23.99, 0.04, 2.23)
  }
  dend {pt3dclear()
	pt3dadd(-0.65, 23.99, 0.04, 2.23)
	pt3dadd(-0.46, 24.29, 0.04, 2.23)
  }
  dend[1] {pt3dclear()
	pt3dadd(-0.46, 24.29, 0.04, 2.23)
	pt3dadd(6.62, 29.2, 1.26, 1.78)
	pt3dadd(12.39, 32.99, 3.86, 1.78)
	pt3dadd(16.32, 36.79, 2.58, 1.78)
	pt3dadd(18.68, 41.47, 2.58, 1.78)
	pt3dadd(20.31, 43.52, 2.58, 1.78)
	pt3dadd(22.93, 46.65, 2.58, 1.78)
	pt3dadd(27.65, 49.1, 6.7, 1.78)
	pt3dadd(28.18, 49.77, 7.19, 1.78)
  }
  dend[2] {pt3dclear()
	pt3dadd(28.18, 49.77, 7.19, 1.78)
	pt3dadd(31.32, 52.22, 8.68, 1.78)
	pt3dadd(34.47, 54.23, 6.22, 1.78)
	pt3dadd(37.88, 57.58, 10.34, 1.78)
	pt3dadd(43.91, 61.15, 10.34, 1.78)
	pt3dadd(49.18, 68.9, 9.15, 1.78)
	pt3dadd(54.16, 73.59, 12.43, 1.78)
	pt3dadd(57.83, 77.16, 15.38, 1.78)
	pt3dadd(62.29, 83.18, 15.38, 1.78)
	pt3dadd(70.99, 89.29, 17.75, 1.78)
	pt3dadd(73.87, 91.52, 20.1, 1.78)
	pt3dadd(75.97, 95.76, 20.1, 1.78)
	pt3dadd(80.69, 102.46, 20.1, 1.78)
	pt3dadd(90.96, 112.31, 20.1, 1.78)
	pt3dadd(98.31, 118.78, 19.85, 1.78)
	pt3dadd(100.67, 121.01, 22.48, 1.78)
	pt3dadd(105.2, 122.43, 22.48, 1.78)
	pt3dadd(108.34, 126.69, 22.48, 1.78)
	pt3dadd(111.23, 130.49, 19.21, 1.78)
	pt3dadd(119.35, 136.96, 19.85, 1.78)
	pt3dadd(123.81, 141.64, 19.23, 1.78)
	pt3dadd(132.13, 147.29, 19.04, 1.78)
	pt3dadd(135.27, 149.97, 19.04, 1.78)
	pt3dadd(138.68, 152.42, 17.28, 1.78)
	pt3dadd(142.35, 153.32, 18.76, 1.78)
	pt3dadd(146.55, 157.33, 18.76, 1.78)
	pt3dadd(151.72, 161.95, 17.83, 1.78)
	pt3dadd(153.82, 164.19, 16.97, 1.78)
	pt3dadd(156.96, 165.52, 17.87, 1.78)
	pt3dadd(158.27, 166.42, 17.7, 1.78)
  }
  dend[3] {pt3dclear()
	pt3dadd(158.27, 166.42, 17.7, 1.78)
	pt3dadd(165.35, 171.1, 15.42, 1.78)
	pt3dadd(170.6, 174, 15.78, 1.78)
	pt3dadd(178.03, 180.3, 13.39, 1.78)
	pt3dadd(182.49, 184.32, 13.39, 1.78)
	pt3dadd(189.42, 187.82, 12.62, 1.78)
	pt3dadd(193.87, 190.72, 12.62, 1.78)
	pt3dadd(197.81, 192.28, 12.62, 1.78)
	pt3dadd(208.3, 199.64, 9.94, 1.78)
	pt3dadd(212.27, 201.5, 9.32, 1.78)
  }
  dend[4] {pt3dclear()
	pt3dadd(158.27, 166.42, 17.7, 1.78)
	pt3dadd(160.37, 172.94, 17.7, 1.78)
	pt3dadd(161.95, 179.19, 17.7, 1.78)
	pt3dadd(162.9, 182, 17.7, 1.78)
	pt3dadd(166.57, 189.14, 19.26, 1.78)
	pt3dadd(168.67, 196.95, 19.26, 1.78)
	pt3dadd(170.5, 205.2, 19.26, 1.78)
	pt3dadd(172.31, 209.73, 19.26, 1.78)
	pt3dadd(173.88, 212.63, 19.26, 1.78)
	pt3dadd(174.93, 219.55, 19.65, 1.78)
	pt3dadd(175.46, 227.13, 19.65, 1.78)
	pt3dadd(176.12, 230.84, 19.65, 1.78)
	pt3dadd(178.75, 237.31, 19.65, 1.78)
	pt3dadd(182.15, 247.13, 19.65, 1.78)
	pt3dadd(184.24, 254.63, 20.48, 1.78)
	pt3dadd(189.48, 259.76, 20.48, 1.78)
	pt3dadd(195.77, 254.85, 20.48, 1.78)
  }
  dend[5] {pt3dclear()
	pt3dadd(28.18, 49.77, 7.19, 1.78)
	pt3dadd(28.34, 55.92, 10.42, 1.78)
	pt3dadd(30.44, 63.28, 17.19, 1.78)
	pt3dadd(32.8, 68.19, 17.19, 1.78)
	pt3dadd(34.05, 72.75, 21.7, 1.78)
	pt3dadd(35.36, 74.99, 21.7, 1.78)
	pt3dadd(36.15, 81.46, 26.2, 1.78)
	pt3dadd(38.24, 84.36, 26.2, 1.78)
	pt3dadd(41.13, 90.83, 29.59, 1.78)
	pt3dadd(44.22, 96.02, 33.3, 1.78)
	pt3dadd(44.75, 98.48, 33.3, 1.78)
	pt3dadd(46.58, 102.49, 37.37, 1.78)
	pt3dadd(47.89, 103.39, 37.37, 1.78)
	pt3dadd(49.99, 107.62, 36.85, 1.78)
	pt3dadd(52.09, 111.19, 40.52, 1.78)
	pt3dadd(53.97, 118.21, 40.52, 1.78)
	pt3dadd(55.02, 121.56, 40.77, 1.78)
	pt3dadd(56.07, 129.36, 43.18, 1.78)
	pt3dadd(60.13, 135.96, 43.18, 1.78)
	pt3dadd(62.49, 142.88, 45.36, 1.78)
	pt3dadd(66.95, 148.9, 47.35, 1.78)
	pt3dadd(68.71, 152.89, 50.47, 1.78)
	pt3dadd(73.43, 161.14, 50.47, 1.78)
	pt3dadd(77.89, 169.39, 50.41, 1.78)
	pt3dadd(82.2, 177.75, 52.46, 1.78)
	pt3dadd(83.77, 180.65, 52.46, 1.78)
	pt3dadd(85.87, 182.88, 52.46, 1.78)
	pt3dadd(87.7, 188.9, 52.46, 1.78)
	pt3dadd(91.61, 194.89, 51.83, 1.78)
	pt3dadd(93.97, 198.24, 55.98, 1.78)
	pt3dadd(96.07, 205.6, 55.98, 1.78)
	pt3dadd(99.47, 209.62, 55.53, 1.78)
	pt3dadd(102.22, 221.07, 59.02, 1.78)
	pt3dadd(101.96, 233.12, 59.02, 1.78)
	pt3dadd(101.41, 246.9, 59.28, 1.78)
	pt3dadd(100.89, 251.81, 59.28, 1.78)
	pt3dadd(100.5, 260.23, 59.28, 1.78)
	pt3dadd(100.76, 266.26, 57.93, 1.78)
	pt3dadd(100.76, 270.49, 54.15, 1.78)
	pt3dadd(101, 276.07, 60.12, 1.78)
  }
  dend[6] {pt3dclear()
	pt3dadd(-0.46, 24.29, 0.04, 2.23)
	pt3dadd(-1.84, 31.21, 0.62, 1.78)
	pt3dadd(-3.28, 39.44, 7.01, 1.78)
	pt3dadd(-3.28, 40.33, 7.01, 1.78)
  }
  dend[7] {pt3dclear()
	pt3dadd(-3.28, 40.33, 7.01, 1.78)
	pt3dadd(-10.36, 47.25, 10.18, 1.78)
	pt3dadd(-20.49, 56.64, 8.88, 1.78)
	pt3dadd(-29.4, 64.02, 7.38, 1.78)
	pt3dadd(-35.43, 72.06, 9.87, 1.78)
	pt3dadd(-45.69, 81.24, 11.31, 1.78)
	pt3dadd(-47.79, 83.02, 11.31, 1.78)
	pt3dadd(-47.79, 85.03, 11.31, 1.78)
	pt3dadd(-57.22, 94.63, 14.55, 1.78)
	pt3dadd(-63.82, 98.69, 16.47, 1.78)
	pt3dadd(-68.27, 110.73, 16.47, 1.78)
	pt3dadd(-70.63, 116.76, 21.08, 1.78)
	pt3dadd(-70.72, 116.67, 21.08, 1.78)
  }
  dend[8] {pt3dclear()
	pt3dadd(-70.72, 116.67, 21.08, 1.78)
	pt3dadd(-77.8, 124.48, 21.91, 1.78)
	pt3dadd(-81.74, 131.39, 25.19, 1.78)
	pt3dadd(-87.51, 143.89, 25.19, 1.78)
	pt3dadd(-91.86, 151.45, 27.55, 1.78)
	pt3dadd(-93.96, 154.13, 27.55, 1.78)
  }
  dend[9] {pt3dclear()
	pt3dadd(-93.96, 154.13, 27.55, 1.78)
	pt3dadd(-102.08, 157.7, 29.86, 1.78)
	pt3dadd(-107.59, 161.27, 30.94, 1.78)
	pt3dadd(-115.43, 165, 33.27, 1.78)
	pt3dadd(-123.55, 171.25, 33.27, 1.78)
	pt3dadd(-127.22, 175.71, 33.27, 1.78)
	pt3dadd(-133.55, 180.33, 31.79, 1.78)
	pt3dadd(-139.85, 183.9, 35.66, 1.78)
	pt3dadd(-147.19, 188.36, 36.73, 1.78)
	pt3dadd(-153.22, 191.49, 36.73, 1.78)
	pt3dadd(-159.09, 194.62, 36.73, 1.78)
	pt3dadd(-164.6, 195.51, 39.34, 1.78)
	pt3dadd(-166.96, 196.85, 39.34, 1.78)
	pt3dadd(-169.06, 196.4, 39.34, 1.78)
	pt3dadd(-176.66, 197.52, 39.34, 1.78)
	pt3dadd(-183.22, 196.58, 42.59, 1.78)
	pt3dadd(-186.63, 199.03, 42.59, 1.78)
	pt3dadd(-190.03, 198.14, 42.59, 1.78)
	pt3dadd(-190.82, 199.92, 42.59, 1.78)
	pt3dadd(-199.47, 198.14, 42.59, 1.78)
	pt3dadd(-206.87, 202.98, 42.59, 1.78)
	pt3dadd(-209.75, 203.87, 42.59, 1.78)
	pt3dadd(-213.95, 208.78, 41.32, 1.78)
	pt3dadd(-218.4, 215.92, 39.65, 1.78)
  }
  dend[10] {pt3dclear()
	pt3dadd(-93.96, 154.13, 27.55, 1.78)
	pt3dadd(-97.01, 159.87, 31.57, 1.78)
	pt3dadd(-102.78, 164.56, 31.57, 1.78)
	pt3dadd(-110.38, 171.02, 31.57, 1.78)
	pt3dadd(-113.79, 174.37, 35.14, 1.78)
	pt3dadd(-123.3, 184.29, 33.77, 1.78)
	pt3dadd(-129.86, 193.43, 33.77, 1.78)
	pt3dadd(-135.96, 202.86, 30.69, 1.78)
	pt3dadd(-141.26, 214.4, 34.03, 1.78)
	pt3dadd(-147.03, 223.32, 34.03, 1.78)
	pt3dadd(-151.49, 231.58, 29.98, 1.78)
	pt3dadd(-155.16, 238.05, 29.98, 1.78)
	pt3dadd(-156.84, 243.45, 29.98, 1.78)
	pt3dadd(-163.39, 251.7, 31.43, 1.78)
	pt3dadd(-164.18, 251.7, 30.52, 1.78)
  }
  dend[11] {pt3dclear()
	pt3dadd(-70.72, 116.67, 21.08, 1.78)
	pt3dadd(-71.71, 124.28, 20.46, 1.78)
	pt3dadd(-73.81, 128.07, 20.46, 1.78)
	pt3dadd(-76.69, 136.55, 21.56, 1.78)
	pt3dadd(-76.4, 142.94, 24.21, 1.78)
	pt3dadd(-78.76, 145.17, 24.21, 1.78)
	pt3dadd(-81.64, 147.85, 27.38, 1.78)
	pt3dadd(-83.22, 154.32, 30.09, 1.78)
	pt3dadd(-87.26, 165.62, 30.09, 1.78)
	pt3dadd(-89.88, 171.87, 31.5, 1.78)
	pt3dadd(-93.33, 178.81, 31.5, 1.78)
	pt3dadd(-96.74, 187.73, 33.22, 1.78)
	pt3dadd(-97.27, 190.19, 33.22, 1.78)
	pt3dadd(-102.24, 198.77, 33.22, 1.78)
	pt3dadd(-109.06, 210.59, 33.22, 1.78)
	pt3dadd(-111.95, 214.71, 33.22, 1.78)
	pt3dadd(-111.95, 217.16, 33.22, 1.78)
	pt3dadd(-115.88, 219.42, 33.22, 1.78)
	pt3dadd(-118.5, 223.66, 35.83, 1.78)
	pt3dadd(-122.17, 231.69, 32.49, 1.78)
	pt3dadd(-123.11, 236.82, 33.23, 1.78)
	pt3dadd(-126.52, 242.4, 33.19, 1.78)
	pt3dadd(-130.71, 248.65, 31.1, 1.78)
	pt3dadd(-134.12, 256.68, 31.1, 1.78)
	pt3dadd(-135.11, 256.47, 30.6, 1.78)
  }
  dend[12] {pt3dclear()
	pt3dadd(-3.28, 40.33, 7.01, 1.78)
	pt3dadd(-3.06, 41.21, 7.17, 2.23)
	pt3dadd(-2.8, 42.32, 9.96, 1.78)
  }
}
proc shape3d_2() {
  dend[12] {  }
  dend[13] {pt3dclear()
	pt3dadd(-2.8, 42.32, 9.96, 1.78)
	pt3dadd(-3.85, 47.9, 8.08, 1.78)
	pt3dadd(-3.85, 54.15, 13.15, 1.78)
	pt3dadd(-4.37, 56.38, 12.92, 1.78)
	pt3dadd(-5.68, 59.06, 16.33, 1.78)
	pt3dadd(-6.45, 64, 16.89, 1.78)
	pt3dadd(-6.97, 66.45, 17.69, 1.78)
	pt3dadd(-5.92, 68.91, 18.65, 1.78)
	pt3dadd(-8.28, 72.26, 22.56, 1.78)
	pt3dadd(-10.91, 79.17, 25.02, 1.78)
	pt3dadd(-15.58, 90.69, 31.37, 1.78)
	pt3dadd(-15.58, 90.25, 31.75, 1.78)
  }
  dend[14] {pt3dclear()
	pt3dadd(-15.58, 90.25, 31.75, 1.78)
	pt3dadd(-15.84, 93.59, 34.67, 1.78)
	pt3dadd(-15.84, 96.05, 34.67, 1.78)
	pt3dadd(-16.63, 99.84, 37.93, 1.78)
	pt3dadd(-18.24, 104.38, 37.98, 1.78)
	pt3dadd(-20.07, 110.4, 43.34, 1.78)
	pt3dadd(-20.6, 113.08, 46.25, 1.78)
	pt3dadd(-20.07, 119.33, 50.68, 1.78)
	pt3dadd(-19.6, 121.97, 51.09, 1.78)
	pt3dadd(-18.55, 123.98, 51.09, 1.78)
	pt3dadd(-21.17, 126.65, 53.26, 1.78)
	pt3dadd(-19.6, 132.9, 53.26, 1.78)
	pt3dadd(-20.12, 136.02, 58.07, 1.78)
	pt3dadd(-21.17, 136.92, 58.07, 1.78)
	pt3dadd(-21.06, 140.22, 58.07, 1.78)
	pt3dadd(-21.06, 145.79, 62.89, 1.78)
	pt3dadd(-19.75, 152.71, 62.89, 1.78)
	pt3dadd(-18.7, 158.73, 65.55, 1.78)
	pt3dadd(-19.91, 162.71, 70.32, 1.78)
	pt3dadd(-20.96, 166.72, 73.54, 1.78)
	pt3dadd(-19.91, 169.62, 73.54, 1.78)
	pt3dadd(-20.7, 176.99, 75.29, 1.78)
	pt3dadd(-20.2, 181.78, 76.67, 1.78)
	pt3dadd(-21.51, 185.79, 80.75, 1.78)
	pt3dadd(-21.51, 189.81, 80.75, 1.78)
	pt3dadd(-22.3, 195.16, 82.66, 1.78)
	pt3dadd(-21.28, 199.06, 83.42, 1.78)
	pt3dadd(-21.54, 203.52, 86.86, 1.78)
	pt3dadd(-22.85, 207.54, 89.69, 1.78)
	pt3dadd(-21.8, 213.56, 89.69, 1.78)
	pt3dadd(-23.5, 223.26, 96.05, 1.78)
	pt3dadd(-24.55, 227.75, 93.9, 1.78)
	pt3dadd(-23.76, 228.86, 98.69, 1.78)
	pt3dadd(-25.33, 233.99, 98.69, 1.78)
	pt3dadd(-22.84, 239.65, 100.9, 1.78)
	pt3dadd(-22.05, 239.65, 100.52, 1.78)
	pt3dadd(-22.32, 239.65, 101.26, 1.78)
  }
  dend[15] {pt3dclear()
	pt3dadd(-15.58, 90.25, 31.75, 1.78)
	pt3dadd(-22.28, 104.37, 32.46, 1.78)
	pt3dadd(-25.43, 110.17, 36.26, 1.78)
	pt3dadd(-30.97, 120.11, 38.94, 1.78)
	pt3dadd(-32.28, 125.46, 38.94, 1.78)
	pt3dadd(-34.11, 131.49, 42.56, 1.78)
	pt3dadd(-34.06, 133.5, 42.56, 1.78)
	pt3dadd(-37.21, 139.75, 42.56, 1.78)
	pt3dadd(-39.83, 145.1, 46.31, 1.78)
	pt3dadd(-40.35, 150.68, 50.25, 1.78)
	pt3dadd(-43.41, 157.83, 53.88, 1.78)
	pt3dadd(-48.13, 169.43, 53.88, 1.78)
	pt3dadd(-52.26, 176.63, 53.88, 1.78)
	pt3dadd(-56.71, 186, 57.31, 1.78)
	pt3dadd(-58.55, 192.03, 57.31, 1.78)
	pt3dadd(-63.18, 204.14, 61.64, 1.78)
	pt3dadd(-68.95, 214.63, 61.64, 1.78)
	pt3dadd(-71.48, 217.12, 61.64, 1.78)
	pt3dadd(-74.11, 224.04, 61.79, 1.78)
	pt3dadd(-76.2, 230.51, 65.1, 1.78)
	pt3dadd(-78.3, 234.97, 65.1, 1.78)
	pt3dadd(-76.89, 240.2, 65.1, 1.78)
	pt3dadd(-78.99, 246.22, 69.94, 1.78)
	pt3dadd(-81.08, 250.69, 69.94, 1.78)
	pt3dadd(-83.97, 256.93, 70.26, 1.78)
	pt3dadd(-84.06, 256.65, 70.26, 1.78)
  }
  dend[16] {pt3dclear()
	pt3dadd(-2.8, 42.32, 9.96, 1.78)
	pt3dadd(-1.61, 42.29, 5.31, 1.78)
	pt3dadd(-1.35, 43.41, 5.31, 1.78)
  }
  dend[17] {pt3dclear()
	pt3dadd(-1.35, 43.41, 5.31, 1.78)
	pt3dadd(1.27, 51.89, 10.02, 1.78)
	pt3dadd(2.58, 61.7, 9.47, 1.78)
	pt3dadd(3.32, 67.92, 9.47, 1.78)
	pt3dadd(2.01, 75.06, 9.47, 1.78)
	pt3dadd(2.01, 76.84, 9.96, 1.78)
  }
  dend[18] {pt3dclear()
	pt3dadd(2.01, 76.84, 9.96, 1.78)
	pt3dadd(5.16, 80.63, 6.57, 1.78)
	pt3dadd(11.43, 84.73, 0.49, 1.78)
	pt3dadd(13, 85.85, -0.68, 1.78)
  }
  dend[19] {pt3dclear()
	pt3dadd(13, 85.85, -0.68, 1.78)
	pt3dadd(17.2, 90.09, 0.79, 1.78)
	pt3dadd(21.66, 94.55, -2.74, 1.78)
	pt3dadd(23.75, 99.01, -8.14, 1.78)
	pt3dadd(25.84, 101.55, -8.14, 1.78)
	pt3dadd(28.72, 106.25, -9.45, 1.78)
	pt3dadd(30.56, 111.16, -11.46, 1.78)
	pt3dadd(34.23, 116.96, -11.46, 1.78)
	pt3dadd(36.24, 116.65, -18.7, 1.78)
	pt3dadd(40.43, 123.79, -18.7, 1.78)
	pt3dadd(43.58, 128.02, -20.52, 1.78)
	pt3dadd(43.58, 130.26, -25.77, 1.78)
	pt3dadd(46.72, 134.94, -25.77, 1.78)
	pt3dadd(51.4, 140.42, -26.97, 1.78)
	pt3dadd(55.33, 143.1, -29.01, 1.78)
	pt3dadd(57.43, 147.79, -29.75, 1.78)
	pt3dadd(58.74, 150.46, -35.18, 1.78)
	pt3dadd(64.24, 156.26, -35.18, 1.78)
	pt3dadd(70.17, 161.18, -37.8, 1.78)
	pt3dadd(71.74, 165.86, -37.8, 1.78)
	pt3dadd(75.41, 171.46, -38.74, 1.78)
	pt3dadd(78.03, 176.37, -43.06, 1.78)
	pt3dadd(84.17, 185.39, -47.1, 1.78)
	pt3dadd(85.48, 189.63, -47.1, 1.78)
	pt3dadd(84.96, 198.56, -48.84, 1.78)
	pt3dadd(82.84, 206.75, -49.7, 1.78)
	pt3dadd(81.27, 207.86, -49.7, 1.78)
	pt3dadd(84.68, 217.46, -52.26, 1.78)
	pt3dadd(86.9, 222.85, -55.66, 1.78)
	pt3dadd(88.21, 226.42, -55.66, 1.78)
	pt3dadd(88.73, 231.55, -56.84, 1.78)
	pt3dadd(90.57, 239.36, -56.84, 1.78)
	pt3dadd(91.26, 239.29, -59.9, 1.78)
  }
  dend[20] {pt3dclear()
	pt3dadd(13, 85.85, -0.68, 1.78)
	pt3dadd(13.14, 99.26, -1.66, 1.78)
	pt3dadd(14.19, 105.28, -6.91, 1.78)
	pt3dadd(15.45, 111.52, -8.06, 1.78)
	pt3dadd(16.76, 116.2, -10.67, 1.78)
	pt3dadd(15.71, 125.13, -16.9, 1.78)
	pt3dadd(15.21, 131.52, -16.9, 1.78)
	pt3dadd(13.64, 142.89, -17.18, 1.78)
	pt3dadd(13.28, 151.15, -17.77, 1.78)
	pt3dadd(10.92, 158.29, -17.77, 1.78)
	pt3dadd(10.39, 164.53, -22.46, 1.78)
	pt3dadd(9.49, 168.91, -29.06, 1.78)
	pt3dadd(10.01, 176.49, -29.06, 1.78)
	pt3dadd(9.23, 187.2, -29.42, 1.78)
	pt3dadd(8.55, 193.07, -32.38, 1.78)
	pt3dadd(7.76, 200.88, -32.79, 1.78)
	pt3dadd(8.55, 205.56, -38.23, 1.78)
	pt3dadd(9, 209.69, -38.23, 1.78)
	pt3dadd(6.12, 218.61, -39.3, 1.78)
	pt3dadd(6.12, 221.51, -39.3, 1.78)
	pt3dadd(4.54, 226.64, -41.1, 1.78)
	pt3dadd(4.28, 232.02, -45.12, 1.78)
	pt3dadd(5.32, 237.15, -45.12, 1.78)
	pt3dadd(4.01, 246.08, -45.12, 1.78)
	pt3dadd(3.68, 253.88, -45.12, 1.78)
	pt3dadd(3.94, 265.48, -46.69, 1.78)
	pt3dadd(5.77, 271.05, -46.69, 1.78)
	pt3dadd(5.51, 274.39, -46.69, 1.78)
	pt3dadd(8.66, 279.08, -52.03, 1.78)
	pt3dadd(7.61, 282.65, -52.03, 1.78)
	pt3dadd(6.56, 283.32, -49.86, 1.78)
  }
  dend[21] {pt3dclear()
	pt3dadd(2.01, 76.84, 9.96, 1.78)
	pt3dadd(5.02, 85.59, 9.96, 1.78)
	pt3dadd(8.69, 93.62, 9.96, 1.78)
	pt3dadd(11.84, 106.12, 14.36, 1.78)
	pt3dadd(13.25, 116.98, 14.36, 1.78)
	pt3dadd(12.72, 127.46, 18.85, 1.78)
	pt3dadd(12.48, 136.39, 21.34, 1.78)
	pt3dadd(11.95, 144.42, 21.34, 1.78)
	pt3dadd(10.9, 154.24, 24.64, 1.78)
	pt3dadd(9.89, 156.28, 24.64, 1.78)
	pt3dadd(10.41, 161.85, 25.56, 1.78)
	pt3dadd(9.36, 166.56, 29.62, 1.78)
	pt3dadd(10.15, 171.02, 29.62, 1.78)
	pt3dadd(10.94, 177.27, 29.48, 1.78)
	pt3dadd(8.52, 188, 35.14, 1.78)
	pt3dadd(7.47, 193.36, 35.14, 1.78)
	pt3dadd(7.73, 201.61, 36.34, 1.78)
	pt3dadd(7.41, 206.4, 36.34, 1.78)
	pt3dadd(3.74, 213.76, 41.27, 1.78)
	pt3dadd(2.17, 223.58, 41.27, 1.78)
	pt3dadd(2.86, 227.46, 41.27, 1.78)
	pt3dadd(0.24, 232.15, 43.8, 1.78)
	pt3dadd(-0.55, 235.72, 45.5, 1.78)
	pt3dadd(-1.6, 237.95, 47.47, 1.78)
  }
  dend[22] {pt3dclear()
	pt3dadd(-1.35, 43.41, 5.31, 1.78)
	pt3dadd(1.88, 44.61, 9.03, 1.78)
	pt3dadd(6.08, 47.51, 9.03, 1.78)
	pt3dadd(10.54, 51.08, 8.35, 1.78)
	pt3dadd(11.57, 52.62, 11.47, 1.78)
	pt3dadd(14.45, 57.76, 14.08, 1.78)
	pt3dadd(19.7, 64, 14.08, 1.78)
	pt3dadd(22.58, 69.13, 14.08, 1.78)
	pt3dadd(28.83, 80.2, 18.58, 1.78)
	pt3dadd(31.71, 86.92, 18.58, 1.78)
	pt3dadd(36.66, 96.44, 22.38, 1.78)
	pt3dadd(41.11, 105.36, 22.38, 1.78)
	pt3dadd(46.84, 114.17, 22.38, 1.78)
	pt3dadd(49.47, 118.41, 22.38, 1.78)
	pt3dadd(51.83, 120.42, 22.38, 1.78)
	pt3dadd(55.23, 125.77, 22.38, 1.78)
	pt3dadd(60.06, 133.45, 24.41, 1.78)
	pt3dadd(65.04, 140.37, 24.41, 1.78)
	pt3dadd(69.76, 146.39, 24.41, 1.78)
	pt3dadd(76.76, 152.05, 24.41, 1.78)
	pt3dadd(79.11, 156.73, 24.41, 1.78)
	pt3dadd(83.05, 166.55, 24.41, 1.78)
	pt3dadd(87.66, 174.03, 24.41, 1.78)
	pt3dadd(93.43, 179.39, 21.18, 1.78)
  }
}
proc shape3d_3() {
  dend[22] {	pt3dadd(96.31, 186.75, 22.86, 1.78)
	pt3dadd(102.04, 194.45, 22.86, 1.78)
	pt3dadd(109.12, 206.06, 23.31, 1.78)
	pt3dadd(118.51, 207.85, 23.31, 1.78)
	pt3dadd(122.45, 215.66, 23.31, 1.78)
	pt3dadd(125.33, 220.57, 23.31, 1.78)
	pt3dadd(130.05, 224.36, 23.31, 1.78)
	pt3dadd(140.1, 228.71, 23.31, 1.78)
	pt3dadd(142.72, 232.05, 23.17, 1.78)
	pt3dadd(143.77, 237.63, 22.53, 1.78)
	pt3dadd(149.02, 245.44, 22.53, 1.78)
	pt3dadd(154.91, 253.05, 22.53, 1.78)
	pt3dadd(155.69, 253.95, 21.42, 1.78)
	pt3dadd(155.43, 253.72, 21.42, 1.78)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
}
proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() {
	
	   
 // //***** PP syn   
 
 
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(2,3,4,5,9,10,11,14,15,19,20,21,22) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.96208,0.5,0.5,0.82374,0.63684,0.66286,0.76661,0.85741,0.84128,0.81729,0.79836,0.92718,0.83165) 
for i= 0 , 12 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // 
} 
 
 // //***** MC syn   
 
dend[0] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 13 
dend[1] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 14 
dend[2] syn = new Exp2Syn(0.008631) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 15 
dend[5] syn = new Exp2Syn(0.0060471) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 16 
dend[6] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 17 
dend[7] syn = new Exp2Syn(0.12106) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 18 
dend[12] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 19 
dend[13] syn = new Exp2Syn(0.18637) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 20 
dend[16] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 21 
dend[17] syn = new Exp2Syn(0.22893) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 22 
dend[22] syn = new Exp2Syn(0.029096) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 23 
 
 // //***** HIPP   
 
dend[2] syn = new Exp2Syn(0.96208) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 24 
dend[3] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 25 
dend[4] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 26 
dend[5] syn = new Exp2Syn(0.82374) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 27 
dend[9] syn = new Exp2Syn(0.63684) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 28 
dend[10] syn = new Exp2Syn(0.66286) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 29 
dend[11] syn = new Exp2Syn(0.76661) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 30 
dend[14] syn = new Exp2Syn(0.85741) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 31 
dend[15] syn = new Exp2Syn(0.84128) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 32 
dend[19] syn = new Exp2Syn(0.81729) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 33 
dend[20] syn = new Exp2Syn(0.79836) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 34 
dend[21] syn = new Exp2Syn(0.92718) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 35 
dend[22] syn = new Exp2Syn(0.83165) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 36 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 37 
 
 // //***** Sprout   
 
dend[0] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 38 
dend[1] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 39 
dend[2] syn = new Exp2Syn(0.008631) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 40 
dend[5] syn = new Exp2Syn(0.0060471) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 41 
dend[6] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 42 
dend[7] syn = new Exp2Syn(0.12106) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 43 
dend[12] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 44 
dend[13] syn = new Exp2Syn(0.18637) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 45 
dend[16] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 46 
dend[17] syn = new Exp2Syn(0.22893) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 47 
dend[22] syn = new Exp2Syn(0.029096) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 48 


	}
	func is_art() { return 0 }

	endtemplate GranuleCell46
//************************************************************************************************************