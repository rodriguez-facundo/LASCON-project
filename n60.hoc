/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell60

// Original name on neuroMorpho.org 4725883a.CNG.hoc

ndend1=44

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 43 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()
		dend[17] gcldend.append()


	pdend  = new SectionList()
		dend[1] pdend.append()
		for i=10, 12  dend[i] pdend.append()
		for i=18, 20  dend[i] pdend.append()
		for i=25, 26  dend[i] pdend.append()
		dend[31] pdend.append()
		dend[34] pdend.append()
		for i=39, 41  dend[i] pdend.append()
		
		


	mdend  = new SectionList()
		for i=2, 4  dend[i] mdend.append()
		for i=7, 9  dend[i] mdend.append()
		for i=13, 16  dend[i] mdend.append()		  
		for i=21, 24  dend[i] mdend.append()
		for i=27, 30  dend[i] mdend.append()
		for i=32, 33  dend[i] mdend.append()
		for i=35, 38  dend[i] mdend.append()
		for i=42, 43  dend[i] mdend.append()

	ddend  = new SectionList()
		
		for i=5, 6 dend[i] ddend.append()


}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }


  connect dend(0), soma(1)
  for i = 1, 3 connect dend[i](0), dend[i-1](1)
  connect dend[4](0), dend[2](1)
  for i = 5, 6 connect dend[i](0), dend[4](1)
  connect dend[7](0), dend[1](1)
  for i = 8, 9 connect dend[i](0), dend[7](1)
  connect dend[10](0), dend(1)
  for i = 11, 12 connect dend[i](0), dend[10](1)
  for i = 13, 14 connect dend[i](0), dend[12](1)
  for i = 15, 16 connect dend[i](0), dend[14](1)
  connect dend[17](0), soma(0)
  for i = 18, 21 connect dend[i](0), dend[i-1](1)
  connect dend[22](0), dend[20](1)
  for i = 23, 24 connect dend[i](0), dend[22](1)
  connect dend[25](0), dend[19](1)
  for i = 26, 27 connect dend[i](0), dend[i-1](1)
  connect dend[28](0), dend[26](1)
  for i = 29, 30 connect dend[i](0), dend[28](1)
  connect dend[31](0), dend[25](1)
  for i = 32, 33 connect dend[i](0), dend[31](1)
  connect dend[34](0), dend[18](1)
  for i = 35, 36 connect dend[i](0), dend[34](1)
  for i = 37, 38 connect dend[i](0), dend[36](1)
  connect dend[39](0), dend[17](1)
  for i = 40, 41 connect dend[i](0), dend[39](1)
  for i = 42, 43 connect dend[i](0), dend[41](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 4.44154)
	pt3dadd(13.77, 11.74, 0, 2.25)
  }
  dend {pt3dclear()
	pt3dadd(13.77, 11.74, 0, 2.25)
	pt3dadd(18.27, 13.77, -0.35, 2.25)
	pt3dadd(24.36, 16.92, -0.35, 2.25)
	pt3dadd(30.16, 20.6, 1.66, 2.25)
	pt3dadd(35.46, 23.53, 2.75, 2.25)
	pt3dadd(37.84, 25.33, 2.75, 2.25)
	pt3dadd(39.96, 27.14, 2.75, 2.25)
  }
  dend[1] {pt3dclear()
	pt3dadd(39.96, 27.14, 2.75, 2.25)
	pt3dadd(44.99, 28.04, 2.75, 2.25)
	pt3dadd(52.4, 30.74, 2.08, 2.25)
	pt3dadd(57.37, 32.4, 2.08, 2.25)
	pt3dadd(60.54, 33.53, 2.08, 2.25)
	pt3dadd(65.84, 34.2, 2.08, 2.25)
	pt3dadd(71.66, 35.78, 2.08, 2.25)
	pt3dadd(78.55, 39.39, 3.11, 2.25)
	pt3dadd(87.47, 44.83, 3.82, 2.25)
	pt3dadd(94.89, 50.24, 7.55, 1.8)
	pt3dadd(99.92, 54.07, 7.55, 1.8)
	pt3dadd(104.68, 58.35, 6, 1.8)
	pt3dadd(109.83, 61.58, 6, 1.8)
	pt3dadd(118.3, 68.56, 4.14, 1.8)
	pt3dadd(123.6, 73.74, 4.06, 1.8)
	pt3dadd(129.16, 78.02, 3.38, 1.8)
	pt3dadd(136.28, 83.66, 1.77, 1.8)
	pt3dadd(139.99, 86.13, 1.77, 1.8)
	pt3dadd(145.55, 91.32, 1.77, 1.8)
	pt3dadd(150.05, 96.5, 1.77, 1.8)
	pt3dadd(154.44, 100.23, 1.04, 1.8)
	pt3dadd(156.82, 102.93, 1.04, 1.8)
	pt3dadd(157.35, 103.38, 1.04, 1.8)
  }
  dend[2] {pt3dclear()
	pt3dadd(157.35, 103.38, 1.04, 1.8)
	pt3dadd(161.59, 104.51, 2.35, 1.8)
	pt3dadd(165.29, 106.54, 2.87, 1.8)
	pt3dadd(170.59, 107.44, 3.35, 1.8)
	pt3dadd(174.3, 109.24, 2.22, 1.8)
	pt3dadd(180.49, 112.38, 5.21, 1.8)
	pt3dadd(183.93, 113.96, 7.9, 1.8)
	pt3dadd(184.99, 114.41, 7.9, 1.8)
  }
  dend[3] {pt3dclear()
	pt3dadd(184.99, 114.41, 7.9, 1.8)
	pt3dadd(188.43, 115.08, 7.82, 1.8)
	pt3dadd(190.29, 116.43, 8.36, 1.8)
	pt3dadd(196.11, 121.84, 10.03, 1.8)
	pt3dadd(199.31, 122.48, 10.03, 1.35)
	pt3dadd(205.4, 127.21, 10.03, 1.35)
	pt3dadd(211.49, 132.39, 11.22, 1.35)
	pt3dadd(214.94, 134.64, 11.22, 1.35)
	pt3dadd(218.11, 135.32, 11.22, 1.35)
	pt3dadd(225.02, 139.63, 14.2, 1.35)
	pt3dadd(227.4, 141.66, 13.18, 1.35)
	pt3dadd(230.32, 143.23, 9.58, 1.35)
	pt3dadd(234.82, 141.66, 10.56, 1.35)
  }
  dend[4] {pt3dclear()
	pt3dadd(184.99, 114.41, 7.9, 1.8)
	pt3dadd(186.79, 118.65, 7.9, 1.8)
	pt3dadd(188.38, 123.61, 7.9, 1.8)
	pt3dadd(192.88, 132.17, 8.74, 1.8)
	pt3dadd(196.85, 137.8, 10.73, 1.8)
	pt3dadd(198.85, 140.73, 11.83, 1.8)
	pt3dadd(200.18, 142.53, 11.83, 1.8)
	pt3dadd(200.44, 142.98, 11.83, 1.8)
  }
  dend[5] {pt3dclear()
	pt3dadd(200.44, 142.98, 11.83, 1.8)
	pt3dadd(205.21, 146.59, 11.94, 1.8)
	pt3dadd(208.39, 148.16, 14.3, 1.35)
	pt3dadd(210.5, 149.74, 15.99, 1.35)
	pt3dadd(211.83, 152.67, 15.99, 1.35)
	pt3dadd(213.68, 154.47, 17.98, 1.8)
	pt3dadd(216.06, 155.15, 20.38, 1.8)
	pt3dadd(220.04, 154.92, 22.74, 1.8)
  }
  dend[6] {pt3dclear()
	pt3dadd(200.44, 142.98, 11.83, 1.8)
	pt3dadd(203.78, 152.91, 12.08, 1.8)
	pt3dadd(204.84, 159.67, 13.18, 1.8)
	pt3dadd(206.69, 165.08, 14.75, 1.8)
	pt3dadd(207.33, 166.78, 15.26, 1.8)
  }
  dend[7] {pt3dclear()
	pt3dadd(157.35, 103.38, 1.04, 1.8)
	pt3dadd(160.31, 108.36, 1.04, 1.8)
	pt3dadd(161.64, 110.61, 1.04, 1.8)
  }
  dend[8] {pt3dclear()
	pt3dadd(161.64, 110.61, 1.04, 1.8)
	pt3dadd(167.99, 116.02, 2.72, 1.8)
	pt3dadd(170.64, 120.3, 3.07, 1.8)
	pt3dadd(176.99, 124.58, 3.07, 1.8)
	pt3dadd(179.05, 126.38, 5.33, 1.8)
	pt3dadd(181.97, 129.31, 5.33, 1.8)
	pt3dadd(188.59, 132.68, 4.43, 1.8)
	pt3dadd(194.41, 140.12, 4.43, 1.8)
	pt3dadd(198.91, 147.1, 5.82, 1.8)
	pt3dadd(203.17, 154.61, 5.82, 1.8)
	pt3dadd(208.47, 162.07, 4.46, 1.8)
	pt3dadd(210.06, 169.95, 4.82, 1.8)
  }
  dend[9] {pt3dclear()
	pt3dadd(161.64, 110.61, 1.04, 1.8)
	pt3dadd(162.33, 117.38, -1.73, 1.8)
	pt3dadd(164.98, 122.34, -1.73, 1.8)
	pt3dadd(167.1, 130.45, -1.73, 1.8)
	pt3dadd(170.11, 136.96, -1.73, 1.8)
	pt3dadd(173.82, 145.74, -3.91, 1.8)
	pt3dadd(176.47, 152.05, -3.91, 1.8)
	pt3dadd(180.31, 161.69, -3.91, 1.8)
	pt3dadd(182.69, 165.29, -4.06, 1.8)
	pt3dadd(184.28, 168.67, -5.26, 1.8)
  }
  dend[10] {pt3dclear()
	pt3dadd(39.96, 27.14, 2.75, 2.25)
	pt3dadd(43.91, 32.81, 2.75, 1.8)
	pt3dadd(48.94, 40.47, 2.75, 1.8)
	pt3dadd(51.59, 45.42, 2.75, 2.25)
	pt3dadd(52.65, 49.38, 2.75, 2.25)
	pt3dadd(56.09, 53.66, 2.75, 2.25)
	pt3dadd(58.21, 57.26, 2.75, 2.25)
	pt3dadd(59.74, 58.68, 2.75, 2.25)
  }
  dend[11] {pt3dclear()
	pt3dadd(59.74, 58.68, 2.75, 2.25)
	pt3dadd(65.03, 61.83, 4.42, 1.8)
	pt3dadd(71.12, 67.01, 2.97, 1.8)
	pt3dadd(76.95, 73.54, 4.98, 1.8)
	pt3dadd(81.18, 78.27, 4.98, 1.8)
	pt3dadd(87.55, 86.53, 4.98, 1.8)
	pt3dadd(94.44, 95.55, 3.97, 1.8)
	pt3dadd(99.74, 103.2, 3.93, 1.8)
	pt3dadd(102.58, 108.58, 3.09, 1.8)
	pt3dadd(107.08, 114.44, 3.09, 1.8)
	pt3dadd(111.32, 116.02, 4.87, 1.8)
	pt3dadd(117.68, 120.75, 4.87, 1.8)
	pt3dadd(122.71, 126.38, 4.87, 1.8)
	pt3dadd(125.58, 130.23, 6.18, 1.8)
	pt3dadd(132.2, 137.66, 6.18, 1.8)
	pt3dadd(135.12, 140.59, 10.28, 1.8)
	pt3dadd(141.21, 149.15, 8.3, 1.8)
	pt3dadd(151.99, 155.98, 8.3, 1.8)
	pt3dadd(157.55, 162.97, 11.66, 1.8)
	pt3dadd(164.97, 169.05, 11.66, 1.8)
	pt3dadd(170.17, 173.98, 8.82, 1.8)
	pt3dadd(177.05, 177.36, 9.1, 1.8)
  }
  dend[12] {pt3dclear()
	pt3dadd(59.74, 58.68, 2.75, 2.25)
	pt3dadd(63.98, 67.26, 2.75, 2.25)
	pt3dadd(68.74, 75.6, 2.75, 2.25)
	pt3dadd(72.19, 83.48, 1.3, 2.25)
	pt3dadd(75.11, 91.26, 1.3, 2.25)
	pt3dadd(78.55, 97.82, 1.3, 2.25)
	pt3dadd(81.2, 104.58, 1.3, 2.25)
	pt3dadd(83.25, 108.85, 1.14, 2.25)
	pt3dadd(84.31, 111.11, 0.86, 2.25)
  }
  dend[13] {pt3dclear()
	pt3dadd(84.31, 111.11, 0.86, 2.25)
	pt3dadd(88.55, 116.96, 0.86, 1.8)
	pt3dadd(92.26, 123.95, 0.86, 1.8)
	pt3dadd(95.11, 129.38, 0.86, 1.8)
	pt3dadd(96.7, 134.11, 0.86, 1.8)
	pt3dadd(99.08, 146.05, 0.86, 1.8)
	pt3dadd(103.9, 157.24, 2.46, 1.8)
	pt3dadd(106.81, 161.54, 2.28, 1.8)
	pt3dadd(109.99, 171, 2.28, 1.8)
	pt3dadd(116.82, 176.18, 2.28, 1.8)
	pt3dadd(126.35, 182.94, 0.78, 1.8)
	pt3dadd(126.62, 182.71, -1.49, 1.8)
  }
  dend[14] {pt3dclear()
	pt3dadd(84.31, 111.11, 0.86, 2.25)
	pt3dadd(88.04, 120.69, 2.77, 2.25)
	pt3dadd(89.1, 126.09, 5.64, 2.25)
	pt3dadd(96.8, 138.03, 10.89, 2.25)
	pt3dadd(100.77, 145.23, 14.7, 2.25)
	pt3dadd(105.01, 151.77, 15.97, 2.25)
	pt3dadd(105.27, 152.89, 15.97, 2.25)
  }
  dend[15] {pt3dclear()
	pt3dadd(105.27, 152.89, 15.97, 2.25)
	pt3dadd(109.77, 156.95, 29.06, 2.25)
	pt3dadd(116.35, 161.96, 32.06, 1.8)
	pt3dadd(121.39, 166.69, 34.8, 1.8)
	pt3dadd(126.68, 172.77, 37.53, 1.8)
	pt3dadd(129.33, 177.72, 39.3, 1.8)
  }
  dend[16] {pt3dclear()
	pt3dadd(105.27, 152.89, 15.97, 2.25)
	pt3dadd(110.96, 159.78, 19.51, 1.8)
	pt3dadd(115.73, 166.09, 19.51, 1.8)
	pt3dadd(120.76, 173.98, 23.17, 1.8)
	pt3dadd(123.38, 179.61, 27.71, 1.8)
	pt3dadd(127.88, 183.89, 28.78, 1.8)
	pt3dadd(132.39, 190.19, 28.88, 1.8)
	pt3dadd(136.89, 195.83, 28.3, 1.8)
  }
  dend[17] {pt3dclear()
	pt3dadd(0, 0, 0, 3.15)
	pt3dadd(-2.85, 19.56, -4.26, 3.15)
	pt3dadd(-4.7, 22.71, -4.26, 3.15)
	pt3dadd(-5.5, 24.96, -7.19, 2.25)
	pt3dadd(-5.76, 25.19, -7.19, 2.25)
  }
  dend[18] {pt3dclear()
	pt3dadd(-5.76, 25.19, -7.19, 2.25)
	pt3dadd(-7.35, 25.64, -5.13, 2.25)
  }
  dend[19] {pt3dclear()
	pt3dadd(-7.35, 25.64, -5.13, 2.25)
	pt3dadd(-10, 29.24, -1.57, 2.25)
	pt3dadd(-12.65, 31.95, 0.16, 2.25)
  }
  dend[20] {pt3dclear()
	pt3dadd(-12.65, 31.95, 0.16, 2.25)
	pt3dadd(-12.34, 36.08, 2.79, 1.8)
	pt3dadd(-12.07, 41.71, 6.02, 1.8)
	pt3dadd(-12.06, 46.33, 5.77, 2.25)
	pt3dadd(-13.12, 51.29, 10.67, 2.25)
	pt3dadd(-13.65, 54.44, 16, 2.25)
	pt3dadd(-9.95, 58.5, 18.68, 2.25)
	pt3dadd(-8.62, 61.65, 21.72, 2.25)
	pt3dadd(-8.4, 65, 22.69, 2.25)
	pt3dadd(-6.02, 71.99, 24.21, 2.25)
	pt3dadd(-3.63, 76.94, 26.78, 2.25)
	pt3dadd(-0.72, 81.9, 30.74, 2.25)
	pt3dadd(1.25, 84.73, 32.5, 2.25)
	pt3dadd(4.17, 88.56, 37.16, 2.25)
	pt3dadd(5.49, 93.74, 38.82, 2.25)
	pt3dadd(6.02, 95.99, 38.82, 2.25)
	pt3dadd(6.28, 97.34, 38.82, 2.25)
  }
  dend[21] {pt3dclear()
	pt3dadd(6.28, 97.34, 38.82, 2.25)
	pt3dadd(11.32, 101.17, 42.49, 1.8)
  }
}
proc shape3d_2() {
  dend[21] {	pt3dadd(15.04, 104.6, 44.42, 1.8)
	pt3dadd(20.87, 110.46, 47.68, 1.8)
	pt3dadd(23.52, 113.84, 50.74, 1.8)
	pt3dadd(26.96, 117.9, 50.74, 1.8)
	pt3dadd(30.93, 121.27, 50.74, 1.8)
	pt3dadd(33.58, 123.03, 52.68, 1.8)
	pt3dadd(37.82, 126.41, 53.53, 1.8)
	pt3dadd(40.73, 129.11, 55.86, 1.8)
	pt3dadd(42.85, 133.16, 60.09, 1.8)
	pt3dadd(45.5, 136.99, 61.53, 1.8)
	pt3dadd(47.62, 139.25, 63.66, 1.8)
	pt3dadd(49.65, 141.7, 65.31, 1.8)
	pt3dadd(53.1, 146.43, 66.18, 1.8)
	pt3dadd(56.54, 151.62, 69.54, 1.8)
	pt3dadd(59.19, 155.67, 74.19, 1.8)
	pt3dadd(61.83, 157.92, 78.53, 1.8)
	pt3dadd(63.32, 161.85, 76.28, 1.8)
	pt3dadd(68.35, 166.36, 76.96, 1.8)
	pt3dadd(71.53, 168.39, 76.06, 1.8)
  }
  dend[22] {pt3dclear()
	pt3dadd(6.28, 97.34, 38.82, 2.25)
	pt3dadd(7.39, 101.93, 41.67, 1.8)
	pt3dadd(10.04, 106.66, 42.46, 1.8)
	pt3dadd(11.37, 110.49, 43.62, 1.8)
	pt3dadd(13.22, 115.9, 45.33, 1.8)
	pt3dadd(14.99, 120.28, 47.7, 1.8)
	pt3dadd(15.52, 125.24, 47.7, 1.8)
	pt3dadd(16.31, 131.09, 50.79, 1.8)
	pt3dadd(18.17, 136.72, 52.79, 1.8)
	pt3dadd(20.25, 141.05, 55.73, 1.8)
	pt3dadd(20.25, 141.28, 56.21, 1.8)
  }
  dend[23] {pt3dclear()
	pt3dadd(20.25, 141.28, 56.21, 1.8)
	pt3dadd(20.25, 143.98, 53.92, 1.8)
	pt3dadd(22.37, 150.07, 53.92, 1.8)
	pt3dadd(23.96, 153.44, 55.5, 1.8)
	pt3dadd(25.55, 159.3, 55.5, 1.8)
	pt3dadd(27.39, 167.31, 56.92, 1.8)
	pt3dadd(28.45, 175.42, 59.74, 1.8)
	pt3dadd(30.04, 180.83, 60.14, 1.8)
	pt3dadd(36.03, 188.03, 61.44, 1.8)
  }
  dend[24] {pt3dclear()
	pt3dadd(20.25, 141.28, 56.21, 1.8)
	pt3dadd(22.12, 143.85, 59.39, 1.8)
	pt3dadd(23.45, 150.16, 59.82, 1.8)
	pt3dadd(23.45, 156.47, 63.26, 1.8)
	pt3dadd(23.18, 162.78, 63.9, 1.8)
	pt3dadd(20.22, 166.15, 63, 1.8)
	pt3dadd(17.31, 168.63, 67.61, 1.8)
	pt3dadd(16.52, 169.76, 67.61, 1.8)
	pt3dadd(15.46, 176.29, 68.6, 1.8)
	pt3dadd(14.66, 181.02, 71.11, 1.8)
	pt3dadd(12.28, 183.95, 71.98, 1.8)
	pt3dadd(10.81, 184.2, 73.05, 1.8)
  }
  dend[25] {pt3dclear()
	pt3dadd(-12.65, 31.95, 0.16, 2.25)
	pt3dadd(-19.08, 39.39, 2.84, 2.25)
	pt3dadd(-20.67, 40.96, 2.21, 2.25)
	pt3dadd(-21.47, 42.99, 2.21, 2.25)
  }
  dend[26] {pt3dclear()
	pt3dadd(-21.47, 42.99, 2.21, 2.25)
	pt3dadd(-24.91, 45.92, 2.21, 1.8)
	pt3dadd(-29.68, 51.1, 2.21, 1.8)
	pt3dadd(-34.84, 55.58, 2.21, 1.8)
	pt3dadd(-38.01, 58.51, 2.21, 1.8)
	pt3dadd(-40.66, 60.54, 2.21, 1.8)
	pt3dadd(-42.52, 61.44, 2.21, 1.8)
	pt3dadd(-44.37, 62.56, 2.21, 1.8)
	pt3dadd(-47.02, 65.27, 2.91, 1.8)
	pt3dadd(-48.87, 69.32, 2.91, 1.8)
	pt3dadd(-50.72, 71.9, 2.91, 1.8)
	pt3dadd(-52.04, 79.11, 4.4, 1.8)
	pt3dadd(-53.1, 84.74, 6.2, 1.8)
	pt3dadd(-54.43, 88.12, 6.2, 1.8)
	pt3dadd(-57.31, 92.05, 6.76, 1.8)
	pt3dadd(-59.7, 96.56, 6.76, 1.8)
	pt3dadd(-60.49, 100.39, 7.9, 1.8)
	pt3dadd(-60.75, 101.74, 7.9, 1.8)
  }
  dend[27] {pt3dclear()
	pt3dadd(-60.75, 101.74, 7.9, 1.8)
	pt3dadd(-58.9, 108.5, 8.77, 1.8)
	pt3dadd(-59.92, 115.63, 11.22, 1.8)
	pt3dadd(-60.19, 124.64, 11.22, 1.8)
	pt3dadd(-59.92, 133.88, 12.93, 1.8)
	pt3dadd(-57.95, 140.98, 14.52, 1.8)
	pt3dadd(-56.89, 148.19, 16.5, 1.8)
	pt3dadd(-56.09, 151.57, 16.5, 1.8)
	pt3dadd(-56.09, 153.6, 16.5, 1.8)
	pt3dadd(-55.8, 160.36, 16.72, 1.8)
	pt3dadd(-55.01, 167.57, 16.86, 1.8)
	pt3dadd(-53.95, 171.17, 16.86, 1.8)
	pt3dadd(-53.68, 179.28, 16.98, 1.8)
	pt3dadd(-53.66, 185.98, 19.31, 1.8)
	pt3dadd(-54.46, 194.54, 19.41, 1.8)
	pt3dadd(-54.72, 198.15, 19.38, 1.8)
	pt3dadd(-56.98, 203.16, 19.38, 1.8)
	pt3dadd(-59.1, 206.33, 19.38, 1.8)
	pt3dadd(-61.48, 210.84, 21.17, 1.8)
	pt3dadd(-62.81, 214.67, 21.17, 1.8)
  }
  dend[28] {pt3dclear()
	pt3dadd(-60.75, 101.74, 7.9, 1.8)
	pt3dadd(-63.24, 106.13, 9.57, 1.8)
	pt3dadd(-64.83, 110.19, 12.18, 1.8)
	pt3dadd(-66.42, 117.4, 13.47, 1.8)
	pt3dadd(-68.27, 123.25, 17.14, 1.8)
	pt3dadd(-70.12, 128.91, 16.7, 1.8)
	pt3dadd(-72.24, 135.22, 17.3, 1.8)
	pt3dadd(-73.04, 139.5, 18.63, 1.8)
	pt3dadd(-74.63, 147.15, 19.64, 1.8)
	pt3dadd(-76.45, 153.28, 20.63, 1.8)
	pt3dadd(-78.04, 158.91, 24.01, 1.8)
	pt3dadd(-78.31, 159.82, 24.01, 1.8)
	pt3dadd(-78.57, 161.84, 24.01, 1.8)
  }
  dend[29] {pt3dclear()
	pt3dadd(-78.57, 161.84, 24.01, 1.8)
	pt3dadd(-81.48, 165, 25.13, 1.8)
	pt3dadd(-83.34, 168.15, 24.68, 1.8)
	pt3dadd(-85.59, 171.88, 24.68, 1.8)
	pt3dadd(-86.38, 175.71, 24.68, 1.8)
	pt3dadd(-86.91, 177.51, 24.68, 1.8)
	pt3dadd(-88.77, 181.34, 23.65, 1.8)
	pt3dadd(-90.62, 185.17, 24.46, 1.8)
	pt3dadd(-92.74, 188.1, 24.94, 1.8)
	pt3dadd(-94.92, 193.21, 24.94, 1.8)
	pt3dadd(-96.51, 196.36, 24.94, 1.8)
	pt3dadd(-101.01, 199.51, 24.94, 1.8)
	pt3dadd(-102.86, 201.99, 24.9, 1.8)
	pt3dadd(-105.77, 207.85, 25.66, 1.8)
	pt3dadd(-108.18, 210.75, 24.86, 1.8)
	pt3dadd(-109.51, 213.23, 26.74, 1.8)
  }
  dend[30] {pt3dclear()
	pt3dadd(-78.57, 161.84, 24.01, 1.8)
	pt3dadd(-78.4, 166.78, 27.06, 1.8)
	pt3dadd(-80.25, 171.74, 27.06, 1.8)
	pt3dadd(-81.58, 176.92, 27.74, 1.8)
	pt3dadd(-84.23, 182.33, 28.94, 1.8)
	pt3dadd(-85.86, 184.3, 28.94, 1.8)
	pt3dadd(-85.86, 186.11, 29.17, 1.8)
	pt3dadd(-85.59, 191.29, 29.44, 1.8)
	pt3dadd(-85.59, 195.79, 32.17, 1.8)
	pt3dadd(-85.06, 198.72, 32.48, 1.8)
	pt3dadd(-84.27, 201.42, 32.48, 1.8)
  }
  dend[31] {pt3dclear()
	pt3dadd(-21.47, 42.99, 2.21, 2.25)
	pt3dadd(-21.8, 46.46, 3.58, 1.8)
	pt3dadd(-24.71, 52.76, 3.94, 1.8)
	pt3dadd(-26.57, 58.85, 6.73, 1.8)
	pt3dadd(-28.52, 63.08, 6.73, 1.8)
	pt3dadd(-27.99, 69.64, 7.56, 1.8)
	pt3dadd(-27.72, 77.07, 8.78, 1.8)
	pt3dadd(-27.86, 82.83, 13.63, 1.8)
	pt3dadd(-25.48, 88.91, 13.56, 1.8)
	pt3dadd(-24.42, 94.1, 13.56, 1.8)
	pt3dadd(-24.69, 99.05, 14.58, 1.8)
	pt3dadd(-23.28, 104.21, 16.19, 1.8)
	pt3dadd(-21.42, 109.61, 15.89, 1.8)
	pt3dadd(-19.3, 117.72, 17.24, 1.8)
	pt3dadd(-16.29, 128.61, 16.87, 1.8)
	pt3dadd(-14.17, 138.3, 18.16, 1.8)
	pt3dadd(-10.56, 146.11, 23.98, 1.8)
	pt3dadd(-7.65, 152.87, 23.98, 1.8)
	pt3dadd(-6.59, 157.6, 23.98, 1.8)
	pt3dadd(-7.13, 161.43, 23.98, 1.8)
	pt3dadd(-6.34, 172.24, 24.13, 1.8)
	pt3dadd(-6.34, 181.25, 25.9, 1.8)
	pt3dadd(-7.46, 188.41, 26.06, 1.8)
	pt3dadd(-7.46, 191.34, 26.91, 1.8)
	pt3dadd(-7.72, 194.49, 28.67, 1.8)
  }
  dend[32] {pt3dclear()
	pt3dadd(-7.72, 194.49, 28.67, 1.8)
	pt3dadd(-9.84, 201.47, 28.67, 1.8)
	pt3dadd(-10.92, 205.71, 28.67, 1.8)
	pt3dadd(-10.92, 211.34, 27.72, 1.8)
	pt3dadd(-11.45, 211.79, 27.38, 1.8)
  }
  dend[33] {pt3dclear()
	pt3dadd(-7.72, 194.49, 28.67, 1.8)
	pt3dadd(-5.48, 199.56, 30.02, 1.8)
	pt3dadd(-3.63, 204.06, 30.02, 1.8)
	pt3dadd(-3.36, 205.64, 31.58, 1.8)
  }
  dend[34] {pt3dclear()
	pt3dadd(-7.35, 25.64, -5.13, 2.25)
	pt3dadd(-12.5, 31.18, -16.21, 2.25)
	pt3dadd(-15.41, 38.39, -16.21, 2.25)
	pt3dadd(-15.14, 42.67, -17.25, 2.25)
	pt3dadd(-15.74, 45.58, -17.25, 2.25)
	pt3dadd(-16.53, 49.86, -19.73, 2.25)
	pt3dadd(-17.59, 53.69, -18.92, 2.25)
	pt3dadd(-17.59, 61.12, -22.47, 2.25)
	pt3dadd(-17.4, 69.11, -22.58, 2.25)
	pt3dadd(-17.66, 75.87, -22.58, 2.25)
	pt3dadd(-18.72, 80.6, -22.58, 2.25)
	pt3dadd(-18.86, 83.35, -25.82, 2.25)
	pt3dadd(-15.42, 93.49, -25.82, 2.25)
	pt3dadd(-13.04, 97.77, -25.82, 1.8)
	pt3dadd(-9.07, 102.95, -26.35, 1.8)
	pt3dadd(-8.01, 106.8, -28.11, 1.8)
	pt3dadd(-6.95, 108.16, -28.11, 1.8)
  }
  dend[35] {pt3dclear()
	pt3dadd(-6.95, 108.16, -28.11, 1.8)
	pt3dadd(-2.18, 115.36, -31.14, 1.8)
	pt3dadd(3.12, 121.67, -29.87, 1.8)
	pt3dadd(6.84, 127.71, -29.22, 1.8)
	pt3dadd(9.23, 133.56, -29.22, 1.8)
	pt3dadd(12.93, 139.2, -33.57, 1.8)
	pt3dadd(13.99, 143.48, -33.57, 1.8)
	pt3dadd(16.12, 153.76, -33.57, 1.8)
	pt3dadd(19.56, 163.22, -36.95, 1.8)
	pt3dadd(24.57, 176.27, -42.49, 1.8)
	pt3dadd(25.89, 181.67, -39.62, 1.8)
	pt3dadd(27.65, 188.16, -42.39, 1.8)
	pt3dadd(30.3, 198.75, -46.66, 1.8)
  }
  dend[36] {pt3dclear()
	pt3dadd(-6.95, 108.16, -28.11, 1.8)
	pt3dadd(-8.12, 114.96, -28.11, 1.8)
	pt3dadd(-6.54, 124.64, -31.41, 1.8)
  }
}
proc shape3d_3() {
  dend[36] {	pt3dadd(-5.74, 130.95, -35.57, 1.8)
	pt3dadd(-6.13, 136.21, -35.57, 1.8)
	pt3dadd(-5.07, 143.42, -35.57, 1.8)
	pt3dadd(-5.34, 155.13, -35.57, 1.8)
	pt3dadd(-4.87, 165.29, -34.25, 1.8)
	pt3dadd(-3.02, 172.95, -33.26, 1.8)
	pt3dadd(-3.55, 181.96, -34.82, 1.8)
	pt3dadd(-5.19, 187.38, -33.16, 1.8)
	pt3dadd(-5.19, 192.11, -29.08, 1.8)
  }
  dend[37] {pt3dclear()
	pt3dadd(-5.19, 192.11, -29.08, 1.8)
	pt3dadd(3.02, 200.9, -29.08, 1.8)
	pt3dadd(8.3, 207.36, -32.24, 1.8)
	pt3dadd(8.56, 208.03, -29.72, 1.8)
  }
  dend[38] {pt3dclear()
	pt3dadd(-5.19, 192.11, -29.08, 1.8)
	pt3dadd(-4.87, 199.41, -29.08, 1.8)
	pt3dadd(-5.66, 211.12, -22.86, 1.8)
  }
  dend[39] {pt3dclear()
	pt3dadd(-5.76, 25.19, -7.19, 2.25)
	pt3dadd(-8.51, 35.96, -6.78, 2.25)
	pt3dadd(-9.57, 40.7, -6.78, 2.25)
	pt3dadd(-10.1, 43.4, -6.78, 2.25)
  }
  dend[40] {pt3dclear()
	pt3dadd(-10.1, 43.4, -6.78, 2.25)
	pt3dadd(-8.41, 52.21, -6.78, 1.8)
	pt3dadd(-6.82, 61.22, -6.91, 1.8)
	pt3dadd(-4.97, 70.23, -6.91, 1.8)
	pt3dadd(-3.68, 81.49, -6.91, 1.8)
	pt3dadd(0.03, 91.63, -6.91, 1.8)
	pt3dadd(3.11, 104.47, -10.18, 1.8)
	pt3dadd(3.38, 112.35, -9.13, 1.8)
	pt3dadd(3.6, 121.64, -9.16, 1.8)
	pt3dadd(5.19, 128.17, -9.16, 1.8)
	pt3dadd(6.51, 135.6, -9.16, 1.8)
	pt3dadd(10.31, 147.49, -7.7, 1.8)
	pt3dadd(14.01, 154.92, -7.7, 1.8)
	pt3dadd(13.21, 162.41, -7.7, 1.8)
	pt3dadd(13.67, 163.31, -8.79, 1.8)
	pt3dadd(17.11, 168.94, -8.79, 1.8)
	pt3dadd(20.03, 181.11, -6.3, 1.8)
	pt3dadd(25.76, 195.42, -8.3, 1.8)
	pt3dadd(27.4, 200.2, -6.46, 1.8)
  }
  dend[41] {pt3dclear()
	pt3dadd(-10.1, 43.4, -6.78, 2.25)
	pt3dadd(-20, 49.66, -6.78, 2.25)
	pt3dadd(-27.41, 55.97, -8.66, 2.25)
	pt3dadd(-33.77, 60.47, -11.12, 1.8)
	pt3dadd(-40.15, 64.48, -11.12, 1.8)
	pt3dadd(-44.39, 73.27, -13.59, 1.8)
	pt3dadd(-49.42, 82.28, -10.92, 1.8)
	pt3dadd(-56.61, 91.69, -10.7, 1.8)
	pt3dadd(-60.85, 100.25, -8.25, 1.8)
	pt3dadd(-64.84, 108.33, -4.3, 1.8)
	pt3dadd(-70.13, 120.95, -4.3, 1.8)
	pt3dadd(-73.38, 126.21, -4.3, 1.8)
	pt3dadd(-75.23, 133.19, -4.3, 1.8)
	pt3dadd(-80, 140.17, -3.1, 1.8)
	pt3dadd(-86.09, 149.46, -0.48, 1.8)
	pt3dadd(-91.12, 160.5, -0.48, 1.8)
	pt3dadd(-94.18, 165.16, -0.48, 1.8)
	pt3dadd(-96.56, 171.46, -0.48, 1.8)
	pt3dadd(-96.83, 175.29, -0.48, 1.8)
	pt3dadd(-97.62, 178.67, -0.48, 1.8)
  }
  dend[42] {pt3dclear()
	pt3dadd(-97.62, 178.67, -0.48, 1.8)
	pt3dadd(-97.27, 186.06, 1.15, 1.8)
	pt3dadd(-98.59, 193.27, 2.58, 1.8)
	pt3dadd(-98.86, 202.05, 2.58, 1.8)
	pt3dadd(-99.46, 206.51, 3.98, 1.8)
	pt3dadd(-97.61, 217.54, 7.18, 1.8)
  }
  dend[43] {pt3dclear()
	pt3dadd(-97.62, 178.67, -0.48, 1.8)
	pt3dadd(-104.02, 188.76, -0.36, 1.8)
	pt3dadd(-107.99, 198.67, -0.36, 1.8)
	pt3dadd(-112.3, 205.36, 0.85, 1.8)
	pt3dadd(-114.68, 213.69, 0.85, 1.8)
	pt3dadd(-115.74, 220.9, 0.54, 1.8)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
}

proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() {
	
 
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(3, 4, 5, 6, 8, 9,11,15,16,27,29,30,37,38,42,43) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.59822,0.68399,    0.5,    0.5,0.72234,0.77958,0.93382,0.97206, 0.8761, 0.9571,0.83172,0.97614,0.92141, 0.9824,0.77358,0.73569) 
for i= 0 , 15 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0  
pre_list.append(syn) // 
} 
 
 // //***** MC syn   
 
dend[0] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 16 
dend[1] syn = new Exp2Syn(0.069138) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 17 
dend[10] syn = new Exp2Syn(0.26529) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 18 
dend[17] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 19 
dend[18] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 20 
dend[19] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 21 
dend[20] syn = new Exp2Syn(0.16909) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 22 
dend[25] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 23 
dend[26] syn = new Exp2Syn(0.092052) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 24 
dend[31] syn = new Exp2Syn(0.042135) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 25 
dend[34] syn = new Exp2Syn(0.19527) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 26 
dend[39] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 27 
dend[40] syn = new Exp2Syn(0.067293) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 28 
dend[41] syn = new Exp2Syn(0.06583) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 29 
 
 // //***** HIPP   
 
dend[3] syn = new Exp2Syn(0.59822) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 30 
dend[4] syn = new Exp2Syn(0.68399) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 31 
dend[5] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 32 
dend[6] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 33 
dend[8] syn = new Exp2Syn(0.72234) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 34 
dend[9] syn = new Exp2Syn(0.77958) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 35 
dend[11] syn = new Exp2Syn(0.93382) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 36 
dend[15] syn = new Exp2Syn(0.97206) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 37 
dend[16] syn = new Exp2Syn(0.8761) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 38 
dend[27] syn = new Exp2Syn(0.9571) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 39 
dend[29] syn = new Exp2Syn(0.83172) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 40 
dend[30] syn = new Exp2Syn(0.97614) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 41 
dend[37] syn = new Exp2Syn(0.92141) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 42 
dend[38] syn = new Exp2Syn(0.9824) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 43 
dend[42] syn = new Exp2Syn(0.77358) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 44 
dend[43] syn = new Exp2Syn(0.73569) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 45 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 46 
 
 // //***** Sprout   
 
dend[0] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 47 
dend[1] syn = new Exp2Syn(0.069138) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 48 
dend[10] syn = new Exp2Syn(0.26529) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 49 
dend[17] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 50 
dend[18] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 51 
dend[19] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 52 
dend[20] syn = new Exp2Syn(0.16909) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 53 
dend[25] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 54 
dend[26] syn = new Exp2Syn(0.092052) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 55 
dend[31] syn = new Exp2Syn(0.042135) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 56 
dend[34] syn = new Exp2Syn(0.19527) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 57 
dend[39] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 58 
dend[40] syn = new Exp2Syn(0.067293) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 59 
dend[41] syn = new Exp2Syn(0.06583) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 60 
}
	  
	func is_art() { return 0 }

	endtemplate GranuleCell60
//************************************************************************************************************