/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */
//Defining granule cell

	begintemplate GranuleCell70

// Original name on neuroMorpho.org  1220882a.CNG.swc

ndend1=33

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 32 dend[i] all.append()


	gcldend  = new SectionList()
		dend[0] gcldend.append()


	pdend  = new SectionList()
		for i=1, 2  dend[i] pdend.append()
		dend[8] pdend.append()
		dend[11] pdend.append()
		for i=18, 19  dend[i] pdend.append()
		for i=24, 26  dend[i] pdend.append()
		


	mdend  = new SectionList()
		dend[3] mdend.append()
		dend[5] mdend.append()		  
		for i=12, 13  dend[i] mdend.append()
		dend[15] mdend.append()		  
		dend[21] mdend.append()
		for i=30, 32  dend[i] mdend.append()		  
		

	ddend  = new SectionList()
		
		dend[4] ddend.append()
		for i=6, 7 dend[i] ddend.append()
		for i=9, 10 dend[i] ddend.append()
		dend[14] ddend.append()
		for i=16, 17 dend[i] ddend.append()
		dend[20] ddend.append()
		for i=22, 23 dend[i] ddend.append()
		for i=27, 29 dend[i] ddend.append()


}
proc gctemp() {

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	forsec all {
// 		insert ccanl
// 	catau_ccanl = 10
// 	caiinf_ccanl = 0.000005
// 	Ra=210
// 	}

	 forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90
		 el_ichan2 =-70	cao_ccanl=2 }


  connect dend(0), soma(1)
  for i = 1, 4 connect dend[i](0), dend[i-1](1)
  connect dend[5](0), dend[3](1)
  for i = 6, 7 connect dend[i](0), dend[5](1)
  connect dend[8](0), dend[2](1)
  for i = 9, 10 connect dend[i](0), dend[8](1)
  connect dend[11](0), dend[1](1)
  for i = 12, 13 connect dend[i](0), dend[i-1](1)
  connect dend[14](0), dend[12](1)
  connect dend[15](0), dend[11](1)
  for i = 16, 17 connect dend[i](0), dend[15](1)
  connect dend[18](0), dend(1)
  for i = 19, 20 connect dend[i](0), dend[i-1](1)
  connect dend[21](0), dend[19](1)
  for i = 22, 23 connect dend[i](0), dend[21](1)
  connect dend[24](0), dend[18](1)
  for i = 25, 27 connect dend[i](0), dend[i-1](1)
  connect dend[28](0), dend[26](1)
  connect dend[29](0), dend[25](1)
  connect dend[30](0), dend[24](1)
  for i = 31, 32 connect dend[i](0), dend[30](1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 3.83632)
	pt3dadd(0.2, 18.05, -1.76, 4.96)
  }
  dend {pt3dclear()
	pt3dadd(0.2, 18.05, -1.76, 4.96)
	pt3dadd(0.26, 20.68, -1.76, 4.96)
	pt3dadd(1.06, 24.73, -1.76, 4.96)
  }
  dend[1] {pt3dclear()
	pt3dadd(1.06, 24.73, -1.76, 4.96)
	pt3dadd(-1.92, 30.36, -4.16, 3.15)
	pt3dadd(-4.04, 35.1, -4.22, 3.15)
	pt3dadd(-4.57, 37.57, -4.22, 2.7)
	pt3dadd(-6.65, 42.65, -12.78, 1.8)
	pt3dadd(-7.18, 44.23, -12.78, 1.8)
  }
  dend[2] {pt3dclear()
	pt3dadd(-7.18, 44.23, -12.78, 1.8)
	pt3dadd(-10.35, 48.06, -15.68, 1.8)
	pt3dadd(-11.94, 51.21, -16.44, 1.8)
	pt3dadd(-14.06, 55.27, -16.44, 1.8)
	pt3dadd(-16.97, 60.67, -18.56, 1.8)
	pt3dadd(-18.85, 63.78, -21.31, 1.8)
	pt3dadd(-20.18, 67.83, -22.65, 1.8)
  }
  dend[3] {pt3dclear()
	pt3dadd(-20.18, 67.83, -22.65, 1.8)
	pt3dadd(-23.35, 71.89, -24.7, 1.8)
	pt3dadd(-26, 77.07, -24.7, 1.8)
	pt3dadd(-29.71, 84.5, -27.07, 1.8)
	pt3dadd(-34.51, 89.98, -28.37, 1.8)
	pt3dadd(-37.95, 95.39, -30.34, 1.8)
	pt3dadd(-40.6, 99.44, -32.57, 1.8)
	pt3dadd(-43.25, 103.95, -33.07, 1.8)
	pt3dadd(-47.11, 109.23, -33.97, 1.8)
	pt3dadd(-50.81, 115.54, -36.92, 1.8)
	pt3dadd(-52.67, 119.82, -36.92, 1.8)
	pt3dadd(-55.32, 124.55, -38.63, 1.8)
	pt3dadd(-60.17, 128.65, -40.14, 1.8)
	pt3dadd(-65.73, 133.39, -42.49, 1.8)
	pt3dadd(-69.96, 137.22, -42.49, 1.8)
	pt3dadd(-73.94, 141.27, -44.98, 1.8)
	pt3dadd(-77.64, 147.58, -44.98, 1.8)
	pt3dadd(-80.86, 151.05, -47.57, 1.8)
	pt3dadd(-82.98, 154.88, -49.56, 1.8)
	pt3dadd(-83.77, 156.01, -49.74, 1.8)
  }
  dend[4] {pt3dclear()
	pt3dadd(-83.77, 156.01, -49.74, 1.8)
	pt3dadd(-89.07, 163.67, -49.51, 1.8)
	pt3dadd(-90.92, 167.72, -50.85, 1.8)
	pt3dadd(-95.97, 174.53, -51.28, 1.8)
	pt3dadd(-102.6, 181, -56.53, 1.8)
	pt3dadd(-106.31, 186.86, -55.55, 1.8)
	pt3dadd(-110.28, 193.84, -59.86, 1.8)
	pt3dadd(-113.99, 200.82, -61.87, 1.8)
	pt3dadd(-120.64, 208.06, -64.88, 1.8)
	pt3dadd(-127.26, 216.39, -66.86, 1.8)
	pt3dadd(-132.55, 224.05, -68.23, 1.8)
	pt3dadd(-138.23, 230.33, -70.19, 1.8)
	pt3dadd(-139.81, 233.71, -71.67, 1.8)
	pt3dadd(-144.05, 240.02, -73.09, 1.8)
	pt3dadd(-148.29, 244.75, -74.71, 1.8)
	pt3dadd(-155.43, 251.56, -76.64, 1.8)
	pt3dadd(-160.46, 259.67, -76.64, 1.8)
	pt3dadd(-164.43, 265.98, -79.5, 1.8)
	pt3dadd(-169.77, 273.31, -79.5, 1.8)
	pt3dadd(-171.09, 274.44, -78.94, 1.8)
  }
  dend[5] {pt3dclear()
	pt3dadd(-83.77, 156.01, -49.74, 1.8)
	pt3dadd(-83.54, 165.41, -54.2, 1.8)
	pt3dadd(-84.86, 174.65, -55.81, 1.8)
	pt3dadd(-86.08, 182.67, -57.81, 1.8)
	pt3dadd(-88.46, 191.46, -57.81, 1.8)
	pt3dadd(-91.06, 199.84, -59.66, 1.8)
	pt3dadd(-93.45, 208.62, -61.91, 1.8)
	pt3dadd(-95.57, 214.93, -62.1, 1.8)
	pt3dadd(-97.72, 221.08, -64.96, 1.8)
	pt3dadd(-97.98, 228.29, -67.48, 1.8)
	pt3dadd(-98.55, 241.34, -72.29, 1.8)
	pt3dadd(-98.55, 245.39, -72.29, 1.8)
  }
  dend[6] {pt3dclear()
	pt3dadd(-98.55, 245.39, -72.29, 1.8)
	pt3dadd(-97.49, 250.8, -74.95, 1.8)
	pt3dadd(-98.46, 256.66, -74.95, 1.8)
	pt3dadd(-99.78, 264.32, -76.89, 1.8)
	pt3dadd(-101.11, 272.43, -78.59, 1.8)
	pt3dadd(-101.99, 281.19, -78.45, 1.8)
  }
  dend[7] {pt3dclear()
	pt3dadd(-98.55, 245.39, -72.29, 1.8)
	pt3dadd(-99.86, 251.51, -71.72, 1.8)
	pt3dadd(-100.65, 260.97, -69.1, 1.8)
	pt3dadd(-101.45, 271.56, -69.22, 1.8)
	pt3dadd(-102.92, 279.93, -67.31, 1.8)
	pt3dadd(-102.92, 283.79, -67.31, 1.8)
  }
  dend[8] {pt3dclear()
	pt3dadd(-20.18, 67.83, -22.65, 1.8)
	pt3dadd(-20.33, 70.8, -25.88, 1.8)
	pt3dadd(-19.01, 76.66, -29.9, 1.8)
	pt3dadd(-17.68, 83.64, -32.05, 1.8)
	pt3dadd(-16.09, 91.08, -31.22, 1.8)
	pt3dadd(-14.68, 99.31, -33.77, 1.8)
	pt3dadd(-13.35, 106.29, -33.77, 1.8)
	pt3dadd(-12.82, 112.4, -37.7, 1.8)
	pt3dadd(-12.07, 117.38, -38.66, 1.8)
  }
  dend[9] {pt3dclear()
	pt3dadd(-12.07, 117.38, -38.66, 1.8)
	pt3dadd(-7.83, 123.91, -39.62, 1.8)
	pt3dadd(-4.39, 130.67, -42.18, 1.8)
	pt3dadd(-3.01, 134.2, -43.06, 1.8)
	pt3dadd(0.17, 138.26, -45.38, 1.8)
	pt3dadd(3.34, 143.44, -48.05, 1.8)
	pt3dadd(6.26, 149.07, -48.05, 1.8)
	pt3dadd(9.05, 153.51, -50.18, 1.8)
	pt3dadd(13.02, 160.49, -52.01, 1.8)
	pt3dadd(15.4, 165.22, -53.9, 1.8)
	pt3dadd(18.05, 172.2, -55.44, 1.8)
	pt3dadd(19.32, 178.96, -56.93, 1.8)
	pt3dadd(21.44, 187.29, -59.98, 1.8)
	pt3dadd(24.88, 195.85, -62.06, 1.8)
	pt3dadd(28.44, 205.49, -62.52, 1.8)
	pt3dadd(31.88, 212.24, -64.41, 1.8)
	pt3dadd(34.53, 216.3, -67.37, 1.8)
	pt3dadd(37.05, 220.48, -66.42, 1.8)
	pt3dadd(39.96, 222.06, -70.74, 1.8)
	pt3dadd(43.67, 227.46, -70.74, 1.8)
	pt3dadd(48.17, 234.67, -72.54, 1.8)
	pt3dadd(54.82, 239.58, -73.51, 1.8)
	pt3dadd(57.73, 243.64, -80.02, 1.8)
	pt3dadd(62.76, 247.24, -84.42, 1.8)
	pt3dadd(66.74, 253.1, -86.12, 1.8)
  }
  dend[10] {pt3dclear()
	pt3dadd(-12.07, 117.38, -38.66, 1.8)
	pt3dadd(-12.99, 125.89, -39.29, 1.8)
	pt3dadd(-13.79, 134.22, -42.91, 1.8)
	pt3dadd(-14.32, 140.53, -41.86, 1.8)
	pt3dadd(-16.99, 148.28, -41.83, 1.8)
	pt3dadd(-17.85, 154.62, -42.39, 1.8)
	pt3dadd(-18.64, 160.25, -42.9, 1.8)
	pt3dadd(-20.19, 167.66, -42.9, 1.8)
	pt3dadd(-20.98, 175.32, -42.9, 1.8)
	pt3dadd(-20.45, 181.85, -45.64, 1.8)
	pt3dadd(-21.79, 190.61, -45.64, 1.8)
	pt3dadd(-22.58, 196.47, -47.89, 1.8)
	pt3dadd(-23.91, 203.45, -47.89, 1.8)
	pt3dadd(-25.06, 208.61, -47.89, 1.8)
	pt3dadd(-26.38, 220.1, -50.5, 1.8)
	pt3dadd(-26.91, 226.18, -50.75, 1.8)
	pt3dadd(-27.48, 232.28, -52.4, 1.8)
	pt3dadd(-26.95, 238.59, -54.02, 1.8)
	pt3dadd(-26.95, 244, -56.5, 1.8)
	pt3dadd(-27.74, 249.4, -57.18, 1.8)
	pt3dadd(-29.12, 259.06, -59.91, 1.8)
	pt3dadd(-30.18, 269.65, -62.26, 1.8)
	pt3dadd(-32.52, 276.56, -62.66, 1.8)
	pt3dadd(-32.78, 280.84, -65.21, 1.8)
	pt3dadd(-30.4, 284.67, -65.15, 1.8)
  }
  dend[11] {pt3dclear()
	pt3dadd(-7.18, 44.23, -12.78, 1.8)
	pt3dadd(-8.06, 49.55, -12.78, 1.8)
	pt3dadd(-7.33, 55.64, -16.24, 1.8)
	pt3dadd(-7.86, 65.1, -16.24, 1.8)
	pt3dadd(-8.26, 69.08, -17.42, 1.8)
	pt3dadd(-8.79, 75.39, -17.42, 1.8)
	pt3dadd(-10.38, 81.24, -17.42, 1.8)
	pt3dadd(-12.5, 90.03, -19.08, 1.8)
	pt3dadd(-15.58, 98.53, -19.08, 1.8)
	pt3dadd(-18.23, 104.39, -20.06, 1.8)
	pt3dadd(-20.34, 108.9, -22.07, 1.8)
	pt3dadd(-23.78, 116.21, -22.07, 1.8)
	pt3dadd(-25.1, 121.62, -22.07, 1.8)
	pt3dadd(-25.63, 126.35, -19.74, 1.8)
	pt3dadd(-26.16, 130.63, -21.75, 1.8)
	pt3dadd(-27.19, 131.73, -21.75, 1.8)
  }
  dend[12] {pt3dclear()
	pt3dadd(-27.19, 131.73, -21.75, 1.8)
	pt3dadd(-25.34, 138.26, -20.26, 1.8)
	pt3dadd(-25.08, 145.47, -16.23, 1.8)
	pt3dadd(-24.28, 152.45, -15.97, 1.8)
	pt3dadd(-23.14, 162.34, -12.94, 1.8)
	pt3dadd(-22.88, 170, -9.31, 1.8)
	pt3dadd(-23.94, 176.08, -9.58, 1.8)
	pt3dadd(-25.06, 181.18, -7.19, 1.8)
	pt3dadd(-25.59, 183.88, -7.19, 1.8)
	pt3dadd(-25.59, 185.01, -7.19, 1.8)
  }
  dend[13] {pt3dclear()
	pt3dadd(-25.59, 185.01, -7.19, 1.8)
	pt3dadd(-24, 190.42, -7.19, 1.8)
	pt3dadd(-21.41, 197.56, -7.22, 1.8)
	pt3dadd(-20.62, 202.07, -7.22, 1.8)
	pt3dadd(-19.56, 212.2, -6.7, 1.8)
	pt3dadd(-19.93, 220.53, -3.07, 1.8)
	pt3dadd(-18.87, 227.74, -3.07, 1.8)
	pt3dadd(-18.08, 232.92, -1.54, 1.8)
	pt3dadd(-19.39, 236.4, 1.14, 1.8)
	pt3dadd(-20.45, 239.11, 4.92, 1.8)
	pt3dadd(-21.77, 241.81, 9.98, 1.8)
	pt3dadd(-22.57, 245.19, 12.36, 1.8)
	pt3dadd(-23.1, 250.37, 13.94, 1.8)
  }
  dend[14] {pt3dclear()
	pt3dadd(-25.59, 185.01, -7.19, 1.8)
	pt3dadd(-27.12, 194.21, -4.87, 1.8)
	pt3dadd(-27.92, 199.84, -5.66, 1.8)
	pt3dadd(-27.92, 205.03, -1.9, 1.8)
	pt3dadd(-32.11, 212.23, -1.9, 1.8)
	pt3dadd(-33.44, 215.39, -1.9, 1.8)
	pt3dadd(-34.5, 220.57, -1.26, 1.8)
	pt3dadd(-35.03, 228, -1.3, 1.8)
	pt3dadd(-37.98, 233.61, 0.12, 1.8)
	pt3dadd(-37.98, 236.08, 1.58, 1.8)
	pt3dadd(-41.42, 242.39, 3.26, 1.8)
	pt3dadd(-44.07, 250.05, 4.32, 1.8)
	pt3dadd(-49.83, 258.31, 9.96, 1.8)
	pt3dadd(-51.68, 263.49, 9.31, 1.8)
	pt3dadd(-53.53, 268.9, 11.59, 1.8)
	pt3dadd(-57.57, 275.08, 15.72, 1.8)
	pt3dadd(-58.37, 279.14, 17.27, 1.8)
	pt3dadd(-59.43, 283.87, 19.53, 1.8)
	pt3dadd(-58.63, 289.95, 20.32, 1.8)
	pt3dadd(-59.13, 295.16, 18.99, 1.8)
  }
}
proc shape3d_2() {
  dend[14] {	pt3dadd(-56.75, 301.91, 17.8, 1.8)
	pt3dadd(-53.04, 308.67, 20.24, 1.8)
  }
  dend[15] {pt3dclear()
	pt3dadd(-27.19, 131.73, -21.75, 1.8)
	pt3dadd(-27.79, 133.48, -19.84, 1.8)
	pt3dadd(-27.52, 135.28, -21.76, 1.8)
  }
  dend[16] {pt3dclear()
	pt3dadd(-27.52, 135.28, -21.76, 1.8)
	pt3dadd(-27.79, 145.19, -24.67, 1.8)
	pt3dadd(-28.32, 154.88, -25.42, 1.8)
	pt3dadd(-30.26, 161.88, -29.27, 1.8)
	pt3dadd(-31.59, 168.41, -32.29, 1.8)
	pt3dadd(-32.65, 174.95, -34.34, 1.8)
	pt3dadd(-32.65, 179.48, -37.14, 1.8)
	pt3dadd(-33.72, 187.51, -38, 1.8)
	pt3dadd(-33.99, 193.14, -40.08, 1.8)
	pt3dadd(-33.99, 198.55, -42.67, 1.8)
	pt3dadd(-35.39, 205.81, -45.26, 1.8)
	pt3dadd(-35.65, 213.92, -47.94, 1.8)
	pt3dadd(-35.65, 218.42, -47.94, 1.8)
	pt3dadd(-38.05, 224.01, -51.27, 1.8)
	pt3dadd(-42.02, 232.12, -55.73, 1.8)
	pt3dadd(-44.14, 239.1, -59.04, 1.8)
	pt3dadd(-47.38, 244.61, -60.85, 1.8)
	pt3dadd(-49.76, 248.24, -63.25, 1.8)
	pt3dadd(-52.14, 254.99, -63.25, 1.8)
	pt3dadd(-55.32, 261.75, -65.62, 1.8)
	pt3dadd(-58.97, 266.44, -69.15, 1.8)
	pt3dadd(-61.62, 269.82, -69.15, 1.8)
	pt3dadd(-64.26, 274.32, -71.72, 1.8)
	pt3dadd(-65.72, 275.78, -70.61, 1.8)
  }
  dend[17] {pt3dclear()
	pt3dadd(-27.52, 135.28, -21.76, 1.8)
	pt3dadd(-29.66, 140, -24.1, 1.8)
	pt3dadd(-32.84, 148.56, -23.57, 1.8)
	pt3dadd(-35.75, 154.87, -23.57, 1.8)
	pt3dadd(-38.4, 159.37, -23.57, 1.8)
	pt3dadd(-41.84, 167.74, -25.28, 1.8)
	pt3dadd(-45.28, 174.49, -25.58, 1.8)
	pt3dadd(-51.37, 183.73, -24.43, 1.8)
	pt3dadd(-56.7, 190.98, -27.86, 1.8)
	pt3dadd(-61.99, 199.54, -28.37, 1.8)
	pt3dadd(-68.04, 205.86, -31.94, 1.8)
	pt3dadd(-74.13, 214.87, -31.94, 1.8)
	pt3dadd(-77.57, 220.95, -31.94, 1.8)
	pt3dadd(-82.1, 227.98, -31.94, 1.8)
	pt3dadd(-87.66, 234.52, -33.85, 1.8)
	pt3dadd(-93.49, 239.92, -33.85, 1.8)
	pt3dadd(-100.61, 243.85, -35.81, 1.8)
	pt3dadd(-108.82, 250.84, -37.6, 1.8)
	pt3dadd(-116.24, 256.92, -37.62, 1.8)
	pt3dadd(-124.14, 261.71, -39.49, 1.8)
	pt3dadd(-132.62, 268.91, -42.24, 1.8)
	pt3dadd(-135.79, 272.97, -42.24, 1.8)
	pt3dadd(-141.62, 279.73, -41.81, 1.8)
	pt3dadd(-148.22, 284.76, -41.81, 1.8)
	pt3dadd(-151.93, 287.23, -41.59, 1.8)
  }
  dend[18] {pt3dclear()
	pt3dadd(1.06, 24.73, -1.76, 4.96)
	pt3dadd(5.12, 30.35, -2.1, 2.7)
	pt3dadd(6.7, 34.4, 0.98, 2.7)
	pt3dadd(6.39, 36.51, 0.98, 2.7)
  }
  dend[19] {pt3dclear()
	pt3dadd(6.39, 36.51, 0.98, 2.7)
	pt3dadd(7.45, 43.71, 4.24, 2.25)
	pt3dadd(8.24, 50.25, 8.44, 2.25)
	pt3dadd(8.24, 57.23, 8.44, 1.8)
	pt3dadd(8.26, 64.44, 8.99, 1.8)
	pt3dadd(8.26, 71.42, 8.99, 1.8)
	pt3dadd(8.53, 76.6, 8.99, 1.8)
	pt3dadd(8.73, 85.66, 13.3, 1.8)
	pt3dadd(9.52, 92.87, 13.3, 1.8)
	pt3dadd(10.32, 101.88, 15.62, 1.8)
	pt3dadd(10.59, 107.41, 18.59, 1.8)
	pt3dadd(10.86, 114.62, 19.89, 1.8)
	pt3dadd(10.86, 118.45, 19.89, 1.8)
  }
  dend[20] {pt3dclear()
	pt3dadd(10.86, 118.45, 19.89, 1.8)
	pt3dadd(12.18, 119.12, 21.58, 1.8)
	pt3dadd(11.92, 123.63, 23.05, 1.8)
	pt3dadd(10.53, 126.38, 23.87, 1.8)
	pt3dadd(11.86, 132.46, 27.14, 1.8)
	pt3dadd(12.39, 138.32, 28.28, 1.8)
	pt3dadd(14.24, 144.85, 30.32, 1.8)
	pt3dadd(13.66, 151.63, 30.32, 1.8)
	pt3dadd(15.77, 156.82, 30.81, 1.8)
	pt3dadd(15.77, 160.87, 30.81, 1.8)
	pt3dadd(16.57, 165.15, 33.61, 1.8)
	pt3dadd(18.65, 172.86, 33.84, 1.8)
	pt3dadd(20.5, 180.75, 35.8, 1.8)
	pt3dadd(21.82, 188.86, 38.55, 1.8)
	pt3dadd(23.32, 197.84, 40.72, 1.8)
	pt3dadd(24.11, 205.72, 42.44, 1.8)
	pt3dadd(23.85, 213.38, 42.58, 1.8)
	pt3dadd(23.93, 225.12, 45.14, 1.8)
	pt3dadd(25.52, 234.13, 48.17, 1.8)
	pt3dadd(28.17, 240.26, 51.56, 1.8)
	pt3dadd(30.82, 248.14, 53.82, 1.8)
	pt3dadd(31.62, 253.55, 53.82, 1.8)
	pt3dadd(31.53, 262.59, 52.53, 1.8)
	pt3dadd(30.73, 269.8, 52.53, 1.8)
	pt3dadd(29.14, 273.88, 55.43, 1.8)
	pt3dadd(27.8, 277.21, 58.34, 1.8)
	pt3dadd(27.01, 281.04, 58.34, 1.8)
	pt3dadd(28.6, 285.99, 63.98, 1.8)
	pt3dadd(25.95, 295.23, 67.5, 1.8)
  }
  dend[21] {pt3dclear()
	pt3dadd(10.86, 118.45, 19.89, 1.8)
	pt3dadd(9.87, 123.31, 22.94, 1.8)
	pt3dadd(9.6, 127.82, 25.58, 1.8)
	pt3dadd(8.01, 135.02, 25.58, 1.8)
	pt3dadd(6.43, 141.11, 27.3, 1.8)
	pt3dadd(2.95, 151.31, 27.3, 1.8)
	pt3dadd(0.83, 158.75, 28.39, 1.8)
	pt3dadd(-0.23, 166.41, 27.48, 1.8)
	pt3dadd(-2.86, 173.16, 27.48, 1.8)
	pt3dadd(-4.71, 183.07, 30.9, 1.8)
	pt3dadd(-5.24, 186.45, 30.9, 1.8)
	pt3dadd(-6.86, 191.81, 30.9, 1.8)
	pt3dadd(-8.72, 197.22, 30.9, 1.8)
	pt3dadd(-10.3, 200.14, 30.9, 1.8)
  }
  dend[22] {pt3dclear()
	pt3dadd(-10.3, 200.14, 30.9, 1.8)
	pt3dadd(-14.01, 203.3, 30.86, 1.8)
	pt3dadd(-18.78, 210.28, 33.19, 1.8)
	pt3dadd(-22.25, 214.03, 36.27, 1.8)
	pt3dadd(-26.49, 221.24, 36.27, 1.8)
	pt3dadd(-29.93, 227.1, 39.2, 1.8)
	pt3dadd(-36.28, 233.63, 39.2, 1.8)
	pt3dadd(-40.25, 238.33, 41.09, 1.8)
	pt3dadd(-44.22, 242.84, 45.11, 1.8)
	pt3dadd(-48.98, 246.67, 45.11, 1.8)
	pt3dadd(-55.34, 252.53, 45.11, 1.8)
	pt3dadd(-61.1, 257.33, 45.11, 1.8)
	pt3dadd(-67.72, 263.42, 45.11, 1.8)
	pt3dadd(-72.75, 267.47, 44.92, 1.8)
	pt3dadd(-79.37, 269.72, 44.92, 1.8)
	pt3dadd(-83.18, 271.13, 44.92, 1.8)
	pt3dadd(-89.01, 275.18, 42.29, 1.8)
  }
  dend[23] {pt3dclear()
	pt3dadd(-10.3, 200.14, 30.9, 1.8)
	pt3dadd(-12.26, 204.93, 31.82, 1.8)
	pt3dadd(-15.43, 209.89, 31.82, 1.8)
	pt3dadd(-19.67, 216.87, 34.96, 1.8)
	pt3dadd(-22.32, 222.05, 34.96, 1.8)
	pt3dadd(-26.18, 229.41, 34.79, 1.8)
	pt3dadd(-29.62, 236.39, 38.48, 1.8)
	pt3dadd(-31.74, 242.48, 38.48, 1.8)
	pt3dadd(-34.85, 251.16, 40.17, 1.8)
	pt3dadd(-37.5, 258.37, 42.42, 1.8)
	pt3dadd(-40.41, 268.51, 42.42, 1.8)
	pt3dadd(-44.18, 279.19, 40.62, 1.8)
	pt3dadd(-47.09, 290.45, 40.62, 1.8)
	pt3dadd(-49.8, 295.11, 37.61, 1.8)
	pt3dadd(-50.6, 300.51, 38.16, 1.8)
	pt3dadd(-51.39, 305.7, 38.16, 1.8)
	pt3dadd(-50.07, 309.75, 38.16, 1.8)
  }
  dend[24] {pt3dclear()
	pt3dadd(6.39, 36.51, 0.98, 2.7)
	pt3dadd(11.36, 41.29, 1.09, 2.25)
	pt3dadd(12.42, 42.19, 1.09, 2.25)
  }
  dend[25] {pt3dclear()
	pt3dadd(12.42, 42.19, 1.09, 2.25)
	pt3dadd(19.57, 46.47, 0.94, 2.25)
	pt3dadd(25.39, 50.52, 0.94, 2.25)
	pt3dadd(30.42, 54.13, 0.94, 2.25)
	pt3dadd(34.76, 58.28, 0.34, 2.25)
	pt3dadd(39.26, 65.49, -0.43, 2.25)
	pt3dadd(40.06, 67.29, -0.43, 2.25)
  }
  dend[26] {pt3dclear()
	pt3dadd(40.06, 67.29, -0.43, 2.25)
	pt3dadd(45.35, 73.6, -0.43, 2.25)
	pt3dadd(49.76, 79.03, -0.43, 2.25)
	pt3dadd(53.47, 83.31, -0.43, 2.25)
	pt3dadd(57.18, 86.92, -1.78, 2.25)
	pt3dadd(60.62, 90.97, -1.78, 2.25)
	pt3dadd(63.8, 93.9, -1.78, 2.25)
	pt3dadd(68.23, 99.91, 2.07, 2.25)
  }
  dend[27] {pt3dclear()
	pt3dadd(68.23, 99.91, 2.07, 2.25)
	pt3dadd(73.83, 107.61, -4.24, 1.8)
	pt3dadd(77.01, 110.99, -5.53, 1.8)
	pt3dadd(80.71, 116.62, -6.51, 1.8)
	pt3dadd(83.63, 120.22, -8.82, 1.8)
	pt3dadd(88.66, 126.31, -7.5, 1.8)
	pt3dadd(95.28, 132.71, -9.66, 1.8)
	pt3dadd(100.58, 136.54, -12.01, 1.8)
	pt3dadd(106.67, 141.27, -12.3, 1.8)
	pt3dadd(112.49, 145.55, -14.31, 1.8)
	pt3dadd(118.35, 149.91, -17.18, 1.8)
	pt3dadd(125.24, 155.99, -19.05, 1.8)
	pt3dadd(130.27, 162.07, -20.34, 1.8)
	pt3dadd(133.71, 167.48, -20.34, 1.8)
	pt3dadd(138.49, 173.71, -20.34, 1.8)
	pt3dadd(143.26, 181.82, -22.07, 1.8)
	pt3dadd(148.03, 187.23, -23.58, 1.8)
	pt3dadd(153.69, 190.18, -23.58, 1.8)
	pt3dadd(157.39, 192.66, -23.58, 1.8)
	pt3dadd(162.69, 198.97, -25.38, 1.8)
	pt3dadd(167.19, 204.82, -25.38, 1.8)
	pt3dadd(170.63, 208.88, -25.38, 1.8)
	pt3dadd(178.94, 219.64, -28.24, 1.8)
	pt3dadd(183.7, 225.72, -28.24, 1.8)
	pt3dadd(188.47, 231.36, -28.24, 1.8)
	pt3dadd(192.7, 232.5, -26.97, 1.8)
  }
  dend[28] {pt3dclear()
	pt3dadd(68.23, 99.91, 2.07, 2.25)
	pt3dadd(78.92, 111.87, 0.86, 2.25)
	pt3dadd(85.8, 119.08, 1.32, 2.25)
	pt3dadd(90.23, 125.11, 1.32, 2.25)
	pt3dadd(95.79, 130.74, 4.74, 1.8)
	pt3dadd(102.41, 136.6, 4.74, 1.8)
	pt3dadd(111.15, 144.26, 4.74, 1.8)
	pt3dadd(119.54, 151.61, 6.78, 1.8)
  }
}
proc shape3d_3() {
  dend[28] {	pt3dadd(123.77, 154.54, 6.78, 1.8)
	pt3dadd(127.21, 156.79, 6.78, 1.8)
	pt3dadd(132.25, 159.72, 7.29, 1.8)
	pt3dadd(138.07, 164.68, 9.18, 1.8)
	pt3dadd(144.48, 171.59, 8.5, 1.8)
	pt3dadd(150.31, 176.34, 8.92, 1.8)
	pt3dadd(156.13, 180.17, 11.08, 1.8)
	pt3dadd(164.08, 186.7, 11.08, 1.8)
	pt3dadd(172.34, 192.66, 9.98, 1.8)
	pt3dadd(180.01, 197.39, 8.72, 1.8)
	pt3dadd(186.1, 201.45, 8.72, 1.8)
	pt3dadd(191.89, 206.33, 7.94, 1.8)
	pt3dadd(196.39, 213.54, 4.23, 1.8)
	pt3dadd(200.89, 216.7, 2.97, 1.8)
	pt3dadd(209.89, 218.5, -1.46, 1.8)
  }
  dend[29] {pt3dclear()
	pt3dadd(40.06, 67.29, -0.43, 2.25)
	pt3dadd(37.48, 72.56, -5.02, 1.8)
	pt3dadd(35.1, 78.19, -7.47, 1.8)
	pt3dadd(34.3, 83.82, -10.83, 1.8)
	pt3dadd(33.77, 90.13, -14.14, 1.8)
	pt3dadd(31.72, 97.43, -16.49, 1.8)
	pt3dadd(30.66, 103.97, -17.9, 1.8)
	pt3dadd(32.52, 109.82, -19.52, 1.8)
	pt3dadd(34.9, 114.78, -21.23, 1.8)
	pt3dadd(35.46, 118.61, -21.23, 1.8)
	pt3dadd(37.05, 123.36, -22.99, 1.8)
	pt3dadd(38.9, 132.82, -23.08, 1.8)
	pt3dadd(41.02, 138.68, -25.85, 1.8)
	pt3dadd(44.37, 145.36, -25.85, 1.8)
	pt3dadd(48.08, 155.72, -27.54, 1.8)
	pt3dadd(50.19, 164.51, -29.34, 1.8)
	pt3dadd(52.25, 174.97, -32.54, 1.8)
	pt3dadd(53.83, 184.43, -33.94, 1.8)
	pt3dadd(55.58, 193.89, -36.1, 1.8)
	pt3dadd(55.85, 202.22, -38.82, 1.8)
	pt3dadd(54.52, 209.43, -42.67, 1.8)
	pt3dadd(58.23, 218.39, -46.48, 1.8)
	pt3dadd(58.76, 226.95, -49.37, 1.8)
	pt3dadd(59.29, 235.06, -49.37, 1.8)
	pt3dadd(62.5, 241.31, -53.8, 1.8)
	pt3dadd(64.36, 247.39, -56.65, 1.8)
	pt3dadd(62.77, 255.05, -58.92, 1.8)
	pt3dadd(60.54, 263.59, -59.93, 1.8)
  }
  dend[30] {pt3dclear()
	pt3dadd(12.42, 42.19, 1.09, 2.25)
	pt3dadd(13.72, 46.63, -1.07, 1.8)
	pt3dadd(17.42, 51.37, -3.25, 1.8)
	pt3dadd(19.81, 57.67, -4.88, 1.8)
	pt3dadd(21.92, 64.43, -8.36, 1.8)
	pt3dadd(25.1, 69.56, -10.79, 1.8)
	pt3dadd(26.69, 74.74, -15.06, 1.8)
	pt3dadd(28.28, 78.34, -18.83, 1.8)
	pt3dadd(28.55, 82.85, -22.02, 1.8)
	pt3dadd(29.52, 86.83, -22.02, 1.8)
	pt3dadd(30.58, 95.84, -27.14, 1.8)
	pt3dadd(30.85, 102.83, -32.16, 1.8)
	pt3dadd(32.52, 108.86, -36.56, 1.8)
	pt3dadd(34.63, 115.17, -36.56, 1.8)
	pt3dadd(37.02, 119.9, -40.19, 1.8)
	pt3dadd(38.87, 124.63, -42.2, 1.8)
	pt3dadd(40.78, 129.33, -44.47, 1.8)
	pt3dadd(42.1, 135.42, -47.89, 1.8)
	pt3dadd(44.22, 142.4, -48.02, 1.8)
	pt3dadd(45.55, 149.16, -52.51, 1.8)
	pt3dadd(47.05, 159.57, -55.42, 1.8)
	pt3dadd(48.11, 165.65, -59.91, 1.8)
	pt3dadd(50.23, 173.76, -62.74, 1.8)
	pt3dadd(51.32, 179.89, -65.2, 1.8)
	pt3dadd(51.32, 182.59, -65.2, 1.8)
  }
  dend[31] {pt3dclear()
	pt3dadd(51.32, 182.59, -65.2, 1.8)
	pt3dadd(54.5, 190.25, -69.47, 1.8)
	pt3dadd(55.29, 194.98, -73.18, 1.8)
	pt3dadd(56.45, 200.66, -73.18, 1.8)
	pt3dadd(59.63, 206.97, -75.84, 1.8)
	pt3dadd(60.69, 210.57, -77.7, 1.8)
	pt3dadd(64.13, 213.5, -77.6, 1.8)
	pt3dadd(68.3, 217.93, -79.96, 1.8)
	pt3dadd(73.06, 223.57, -82.8, 1.8)
	pt3dadd(74.12, 225.59, -82.8, 1.8)
	pt3dadd(76.77, 229.2, -82.78, 1.8)
	pt3dadd(81.01, 231.67, -82.78, 1.8)
	pt3dadd(82.25, 231.58, -82.23, 1.8)
  }
  dend[32] {pt3dclear()
	pt3dadd(51.32, 182.59, -65.2, 1.8)
	pt3dadd(50.33, 189.74, -67.62, 1.8)
	pt3dadd(50.33, 195.59, -70.34, 1.8)
	pt3dadd(49.27, 202.58, -72.58, 1.8)
	pt3dadd(46.15, 210.69, -73.26, 1.8)
	pt3dadd(44.83, 218.57, -72.9, 1.8)
	pt3dadd(45.88, 224.88, -68.7, 1.8)
	pt3dadd(44.54, 235.42, -67, 1.8)
	pt3dadd(44.01, 244.43, -65.85, 1.8)
	pt3dadd(44.99, 252.29, -64.81, 1.8)
	pt3dadd(45.78, 260.17, -58.49, 1.8)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
}

proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	proc synapse() {
	
 
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(4, 5, 6, 7, 9,10,13,14,16,17,20,22,23,27,28,29,31,32) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.63641,0.72005,    0.5,    0.5,0.79497,0.79062,0.73496, 0.6258, 0.7713,0.71297,0.78849,0.60611,0.60016,0.78209,0.78048,0.85088,0.68895, 0.6463) 
for i= 0 , 17 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0  
pre_list.append(syn) // 
} 
 
 // //***** MC syn   
 
dend[0] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 18 
dend[1] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 19 
dend[2] syn = new Exp2Syn(0.29948) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 20 
dend[11] syn = new Exp2Syn(0.094066) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 21 
dend[18] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 22 
dend[19] syn = new Exp2Syn(0.17166) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 23 
dend[24] syn = new Exp2Syn(0.5) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 24 
dend[25] syn = new Exp2Syn(0.27937) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 25 
dend[30] syn = new Exp2Syn(0.064604) // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 26 
 
 // //***** HIPP   
 
dend[4] syn = new Exp2Syn(0.63641) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 27 
dend[5] syn = new Exp2Syn(0.72005) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 28 
dend[6] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 29 
dend[7] syn = new Exp2Syn(0.5) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 30 
dend[9] syn = new Exp2Syn(0.79497) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 31 
dend[10] syn = new Exp2Syn(0.79062) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 32 
dend[13] syn = new Exp2Syn(0.73496) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 33 
dend[14] syn = new Exp2Syn(0.6258) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 34 
dend[16] syn = new Exp2Syn(0.7713) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 35 
dend[17] syn = new Exp2Syn(0.71297) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 36 
dend[20] syn = new Exp2Syn(0.78849) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 37 
dend[22] syn = new Exp2Syn(0.60611) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 38 
dend[23] syn = new Exp2Syn(0.60016) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 39 
dend[27] syn = new Exp2Syn(0.78209) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 40 
dend[28] syn = new Exp2Syn(0.78048) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 41 
dend[29] syn = new Exp2Syn(0.85088) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 42 
dend[31] syn = new Exp2Syn(0.68895) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 43 
dend[32] syn = new Exp2Syn(0.6463) // HIPP 
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 44 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 45 
 
 // //***** Sprout   
 
dend[0] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 46 
dend[1] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 47 
dend[2] syn = new Exp2Syn(0.29948) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 48 
dend[11] syn = new Exp2Syn(0.094066) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 49 
dend[18] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 50 
dend[19] syn = new Exp2Syn(0.17166) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 51 
dend[24] syn = new Exp2Syn(0.5) //Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 52 
dend[25] syn = new Exp2Syn(0.27937) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 53 
dend[30] syn = new Exp2Syn(0.064604) // Sprout 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 54 

}
	func is_art() { return 0 }

	endtemplate GranuleCell70
//************************************************************************************************************