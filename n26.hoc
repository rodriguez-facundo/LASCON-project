/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell26


// Original name on neuroMorpho.org n26-r01-02-sl3.CNG.swc

ndend1=7

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 6 dend [i] all.append()
// 		

	gcldend  = new SectionList()
		dend [0] gcldend.append()
// 		

	pdend  = new SectionList()
		dend[1] pdend.append()


	mdend  = new SectionList()
		for i=2, 3 dend[i] mdend.append()

	ddend  = new SectionList()
		for i=4, 6 dend[i] ddend.append()

}



proc gctemp() {

// 	soma {nseg=1 L=16.8 diam=16.8} // changed L & diam
	
/*	dend [0] {nseg=1  L=27.5855 diam=2.3784}
	dend [1] {nseg=1  L=3.90655 diam=1.546}
	dend [2] {nseg=1  L=49.90057 diam=1.048}
	dend [3] {nseg=1  L=58.66612 diam=1.2018}
	dend [4] {nseg=1  L=77.90403 diam=0.8822}
	dend [5] {nseg=1  L=65.45236 diam=0.7149}
	dend [6] {nseg=1  L=39.08021 diam=0.8525}
	dend [7] {nseg=1  L=28.99695 diam=0.6966}
	dend [8] {nseg=1  L=34.99227 diam=0.6848}
	dend [9] {nseg=1  L=42.50559 diam=0.6237}
	dend [10] {nseg=1 L=59.65832 diam=0.5661}
	dend [11] {nseg=1 L=87.08064 diam=0.6372}
	dend [12] {nseg=1 L=11.72373 diam=0.7863}
	dend [13] {nseg=1 L=78.56052 diam=0.5773}
	dend [14] {nseg=1 L=65.70179 diam=0.6466}
	dend [15] {nseg=1 L=135.75229 diam=0.6171}
	dend [16] {nseg=1 L=23.22847 diam=0.5976}
	dend [17] {nseg=1 L=54.47258 diam=0.6512}
	dend [18] {nseg=1 L=38.29144 diam=0.6966}
	dend [19] {nseg=1 L=42.69891 diam=0.5877}*/
	
	
// 	dend [20] {nseg=1 L=53.60330 diam=0.5795}
// 	for i = 1, 20	dend [i] {nseg=1 L=150 diam=3}

// 	gcdend2 [0] {nseg=1 L=50 diam=3}
// 	for i = 1, 3	gcdend2 [i] {nseg=1 L=150 diam=3}	 	

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	connect dend[0](0), soma(1)
// 	connect gcdend2[0](0), soma(1)
// 	for i=1,3 {
// 	connect dend[i](0), dend[i-1](1)
// 	}
// 	for i=1,3 {
// 	connect gcdend2[i](0), gcdend2[i-1](1)
// 	}

  connect dend(0), soma(1)
  for i = 1, 2 connect dend[i](0), dend(1)
  for i = 3, 4 connect dend[i](0), dend[2](1)
  for i = 5, 6 connect dend[i](0), dend[3](1)
// 	  connect /*axon*/(1), soma(0)
	  basic_shape()

	forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90  el_ichan2 =-70  cao_ccanl=2 }  // make catau slower70e-3 	cao=2 cai=50.e-6 

// current injection
//for i=0,0 {
//stimdel[i]=500
//stimdur[i]=200
//stimamp[i]=0.2

//soma stim[i] = new IClamp(0.5)
//stim.del[i]=stimdel[i]
//stim.dur[i]=stimdur[i]
//stim.amp[i]=stimamp[i]
//}


		}
		

proc shape3d_1() {
//   axon {pt3dclear()
// 	pt3dadd(0.1938, -38, 0.01, 0.2)
// 	pt3dadd(0.1938, -18, 0.01, 10)
//   }
  soma {pt3dclear()
	pt3dadd(0.1938, -18, 0.01, 10)
	pt3dadd(0.1938, 0.5643, 0, 8.781)
  }
  dend {pt3dclear()
	pt3dadd(0.1938, 0.5643, 0, 8.781)
	pt3dadd(-0.74, -4.41, 0, 3.99)
	pt3dadd(-2.32, -5.79, 0, 3.8)
	pt3dadd(-2.41, -7.45, 1.31, 3.43)
	pt3dadd(-1.67, -8.92, 1.31, 2.97)
	pt3dadd(-1.11, -9.93, 1.23, 2.97)
	pt3dadd(-0.83, -10.85, 1.23, 3.34)
  }
//   dendrite {pt3dclear()
// 	pt3dadd(0.1938, 0.5643, 0, 8.781)
// 	pt3dadd(-0.98, 5.77, 0, 1.3)
// 	pt3dadd(-2.28, 6.11, -1.26, 1.3)
// 	pt3dadd(-3.48, 6.48, -1.25, 1.3)
// 	pt3dadd(-4.97, 6.48, -1.16, 1.3)
// 	pt3dadd(-5.8, 7.12, -0.73, 1.3)
// 	pt3dadd(-6.45, 8.59, 0.37, 1.21)
// 	pt3dadd(-7.47, 9.14, 1.3, 0.93)
// 	pt3dadd(-8.21, 9.79, 1.3, 0.93)
// 	pt3dadd(-9.42, 9.6, 0.26, 0.93)
// 	pt3dadd(-10.16, 9.97, -0.84, 0.93)
// 	pt3dadd(-10.81, 10.52, -0.84, 0.74)
// 	pt3dadd(-11.83, 11.07, -0.84, 0.74)
// 	pt3dadd(-11.83, 11.81, 0.42, 0.74)
// 	pt3dadd(-11.09, 12.55, 0.42, 0.74)
// 	pt3dadd(-12.11, 12.73, 0.58, 0.74)
// 	pt3dadd(-12.85, 12.91, -0.7, 0.74)
// 	pt3dadd(-13.41, 13.56, 1.05, 0.74)
// 	pt3dadd(-13.59, 14.57, 0.06, 0.74)
//   }
  dend[1] {pt3dclear()
	pt3dadd(-0.83, -10.85, 1.23, 3.34)
	pt3dadd(0.51, -11.14, 1.79, 1.48)
	pt3dadd(1.34, -11.97, 3.15, 1.48)
	pt3dadd(2.36, -12.52, 2.24, 1.48)
	pt3dadd(2.92, -13.81, 3.2, 1.48)
	pt3dadd(2.55, -14.91, 4.01, 1.21)
	pt3dadd(3.1, -16.1, 4.8, 1.21)
	pt3dadd(3.38, -16.75, 4.68, 1.21)
  }
  dend[2] {pt3dclear()
	pt3dadd(-0.83, -10.85, 1.23, 3.34)
	pt3dadd(-2.13, -12.13, 1.7, 2.41)
	pt3dadd(-2.97, -13.6, 1.14, 2.41)
	pt3dadd(-3.52, -15.35, 1.99, 2.13)
	pt3dadd(-3.71, -16.82, 1.99, 1.67)
	pt3dadd(-3.43, -18.2, 2.43, 1.67)
	pt3dadd(-3.71, -19.3, 2.43, 1.67)
	pt3dadd(-4.17, -20.13, 2.43, 1.67)
	pt3dadd(-3.95, -21.32, 1.92, 1.67)
	pt3dadd(-3.95, -22.7, 1.92, 1.39)
	pt3dadd(-4.04, -24.08, 2.79, 1.02)
	pt3dadd(-4.51, -25.64, 2.16, 1.02)
	pt3dadd(-5.06, -26.56, 2.16, 1.02)
	pt3dadd(-5.62, -27.57, 2.29, 1.02)
	pt3dadd(-6.08, -28.59, 1.83, 1.21)
	pt3dadd(-6.36, -30.52, 2.02, 1.21)
	pt3dadd(-6.36, -31.53, 1.93, 1.21)
	pt3dadd(-6.64, -33.18, 1.93, 1.21)
	pt3dadd(-6.64, -34.74, 1.58, 1.21)
	pt3dadd(-6.92, -36.31, 1.98, 1.21)
	pt3dadd(-6.92, -37.59, 2.16, 1.21)
	pt3dadd(-6.73, -38.24, 2.33, 1.02)
	pt3dadd(-7.29, -39.16, 2.33, 1.02)
	pt3dadd(-7.09, -39.78, 2.18, 1.02)
	pt3dadd(-7.18, -41.25, 2.18, 1.02)
	pt3dadd(-7.09, -42.81, 2.18, 1.02)
	pt3dadd(-6.9, -44.28, 1.53, 1.02)
	pt3dadd(-7.09, -45.84, 1.53, 1.02)
	pt3dadd(-7.27, -47.22, 2.04, 1.02)
	pt3dadd(-7.36, -48.42, 1.74, 1.02)
	pt3dadd(-7.46, -49.61, 2.28, 1.02)
	pt3dadd(-7.83, -50.99, 1.54, 1.02)
	pt3dadd(-7.92, -52.18, 1.26, 1.02)
	pt3dadd(-8.2, -53.2, 1.49, 1.02)
	pt3dadd(-8.38, -54.21, 1.64, 1.02)
	pt3dadd(-8.76, -55.49, 1.91, 0.83)
	pt3dadd(-8.89, -56.85, 1.43, 0.93)
	pt3dadd(-8.8, -58.23, 2.95, 0.93)
	pt3dadd(-9.26, -59.7, 1.74, 0.93)
	pt3dadd(-9.54, -61.35, 2.09, 0.93)
	pt3dadd(-9.82, -62.55, 1.74, 0.93)
	pt3dadd(-10.01, -63.56, 1.52, 0.93)
	pt3dadd(-10.66, -64.94, 2.11, 0.93)
	pt3dadd(-10.84, -66.32, 1.86, 0.93)
	pt3dadd(-11.4, -67.6, 1.86, 1.02)
	pt3dadd(-11.58, -69.35, 1.83, 1.02)
	pt3dadd(-11.58, -70.64, 1.83, 1.21)
	pt3dadd(-11.95, -71.74, 1.89, 1.39)
	pt3dadd(-12.33, -72.75, 2.1, 1.39)
	pt3dadd(-12.51, -73.03, 2.1, 1.58)
  }
  dend[3] {pt3dclear()
	pt3dadd(-12.51, -73.03, 2.1, 1.58)
	pt3dadd(-11.69, -74.24, 1.86, 1.02)
	pt3dadd(-11.51, -75.07, 1.86, 1.02)
	pt3dadd(-11.32, -76.45, 1.84, 0.65)
	pt3dadd(-11.51, -77.55, 2.1, 0.65)
	pt3dadd(-12.16, -78.84, 1.76, 0.56)
	pt3dadd(-12.25, -79.76, 1.76, 0.56)
	pt3dadd(-12.25, -81.14, 1.36, 0.56)
	pt3dadd(-11.88, -82.24, 1.79, 0.56)
	pt3dadd(-11.6, -83.71, 1.05, 0.56)
	pt3dadd(-11.69, -84.91, 1.39, 0.56)
	pt3dadd(-11.97, -85.73, 1.2, 0.65)
	pt3dadd(-12.62, -86.28, 1.2, 0.56)
	pt3dadd(-13.18, -87.02, 0.86, 0.65)
	pt3dadd(-13.36, -88.31, 0.29, 0.56)
	pt3dadd(-13.74, -89.78, 0.61, 0.56)
	pt3dadd(-13.74, -90.6, 0.61, 0.56)
	pt3dadd(-14.11, -91.34, 0.61, 0.56)
	pt3dadd(-14.18, -92.7, 1.06, 0.56)
	pt3dadd(-14.36, -93.99, 0.67, 0.56)
	pt3dadd(-14.83, -94.82, 0.38, 0.83)
	pt3dadd(-14.92, -95.55, 1.11, 0.74)
	pt3dadd(-15.01, -96.75, 0.51, 0.65)
	pt3dadd(-15.11, -97.57, 0.51, 0.65)
	pt3dadd(-15.66, -98.68, 1.5, 0.56)
	pt3dadd(-16.59, -99.05, 1.46, 0.56)
	pt3dadd(-17.05, -100.3, 0.6, 0.56)
	pt3dadd(-18.13, -101.2, 1.29, 0.65)
	pt3dadd(-18.32, -102.3, 1.29, 0.65)
	pt3dadd(-18.78, -103.4, 1.15, 0.65)
	pt3dadd(-19.34, -104.2, 0.75, 0.65)
	pt3dadd(-19.43, -104.9, 0.75, 0.65)
	pt3dadd(-19.89, -106.2, 0.16, 0.65)
	pt3dadd(-19.99, -107.7, 1.02, 0.65)
	pt3dadd(-20.26, -108.2, 0.8, 0.65)
  }
  dend[4] {pt3dclear()
	pt3dadd(-12.51, -73.03, 2.1, 1.58)
	pt3dadd(-13.81, -72.93, 1.99, 1.11)
	pt3dadd(-14.92, -73.12, 2.27, 1.02)
	pt3dadd(-16.31, -73.76, 2.02, 0.74)
	pt3dadd(-16.96, -74.4, 1.42, 0.74)
	pt3dadd(-17.52, -75.05, 1.42, 0.83)
	pt3dadd(-17.79, -75.86, 1.42, 0.83)
	pt3dadd(-18.62, -77.05, 1.84, 0.83)
	pt3dadd(-19.18, -78.07, 1.13, 0.83)
	pt3dadd(-20.2, -79.35, 1.01, 0.74)
	pt3dadd(-21.13, -80.27, 0.72, 0.74)
	pt3dadd(-22.05, -81.37, 0.86, 0.74)
	pt3dadd(-22.24, -82.48, 1.5, 0.74)
	pt3dadd(-22.52, -83.67, 1.5, 0.65)
	pt3dadd(-23.07, -84.59, 1.5, 0.65)
	pt3dadd(-23.63, -85.23, 1.83, 0.65)
	pt3dadd(-24.84, -86.34, 0.84, 0.65)
	pt3dadd(-25.49, -87.35, 1.46, 0.65)
	pt3dadd(-26.04, -88.54, 1.46, 0.65)
	pt3dadd(-27.06, -89.37, 0.93, 0.65)
	pt3dadd(-28.55, -89.92, 0.93, 0.65)
	pt3dadd(-29.75, -90.66, 0.93, 0.65)
	pt3dadd(-30.4, -91.58, 0.93, 0.65)
	pt3dadd(-31.14, -92.31, 1.05, 0.65)
	pt3dadd(-31.79, -93.14, 1.05, 0.65)
	pt3dadd(-32.26, -94.34, 1.05, 0.65)
	pt3dadd(-32.54, -95.71, 1.05, 0.65)
	pt3dadd(-33.56, -96.27, 1.73, 0.83)
	pt3dadd(-34.4, -96.73, 1.73, 0.83)
	pt3dadd(-34.86, -97.55, 1.27, 0.83)
	pt3dadd(-35.51, -98.38, 1.86, 0.65)
	pt3dadd(-36.53, -98.93, 1.21, 0.65)
	pt3dadd(-37.64, -99.48, 1.14, 0.65)
	pt3dadd(-38.11, -100.8, 2.19, 0.65)
	pt3dadd(-38.57, -101.6, 2.19, 0.65)
	pt3dadd(-39.41, -102.2, 2.19, 0.65)
	pt3dadd(-40.71, -103.3, 2.21, 0.65)
	pt3dadd(-41.36, -104.1, 1.97, 0.65)
	pt3dadd(-41.82, -105.2, 1.96, 0.65)
	pt3dadd(-42.38, -106.1, 1.96, 0.65)
	pt3dadd(-43.4, -106.9, 1.66, 0.46)
	pt3dadd(-44.23, -107.6, 1.66, 0.46)
	pt3dadd(-44.88, -107.9, 2.77, 0.93)
	pt3dadd(-45.53, -108.9, 2.16, 0.74)
	pt3dadd(-46.36, -109.3, 2.16, 0.74)
	pt3dadd(-46.83, -110.1, 3.17, 0.74)
	pt3dadd(-47.76, -110.7, 2.39, 0.74)
	pt3dadd(-48.03, -111.1, 2.39, 0.74)
	pt3dadd(-48.08, -112.1, 2.5, 0.74)
	pt3dadd(-49.01, -113, 3.15, 0.65)
	pt3dadd(-49.93, -114.2, 2.6, 0.65)
	pt3dadd(-51.51, -115.5, 3.15, 0.56)
	pt3dadd(-52.53, -116.5, 3.15, 0.56)
	pt3dadd(-53.09, -117.2, 2.64, 0.65)
	pt3dadd(-53.92, -117.9, 2.64, 0.65)
	pt3dadd(-54.57, -118.8, 3.31, 0.56)
	pt3dadd(-55.22, -119.7, 3.31, 0.56)
	pt3dadd(-56.15, -120.4, 2.66, 0.56)
	pt3dadd(-57.36, -121.5, 3.03, 0.56)
	pt3dadd(-58.56, -122.4, 2.85, 0.56)
	pt3dadd(-60.42, -123.5, 2.85, 0.56)
	pt3dadd(-61.81, -124.3, 2.85, 0.56)
	pt3dadd(-63.01, -125.3, 3.31, 0.56)
	pt3dadd(-64.13, -126.5, 3.72, 0.56)
	pt3dadd(-64.78, -127.7, 3.72, 0.56)
	pt3dadd(-64.87, -129.1, 2.93, 0.65)
	pt3dadd(-65.18, -130.3, 2.93, 0.65)
	pt3dadd(-65.83, -131.2, 3.59, 0.65)
	pt3dadd(-66.76, -132, 3.91, 0.65)
	pt3dadd(-67.41, -132.7, 2.8, 0.65)
	pt3dadd(-68.33, -133.4, 3.11, 0.65)
	pt3dadd(-69.08, -133.9, 3.16, 0.65)
	pt3dadd(-70.19, -134.1, 2.84, 0.65)
	pt3dadd(-71.3, -134.5, 3.95, 0.65)
	pt3dadd(-72.23, -135.5, 3.75, 0.93)
	pt3dadd(-72.97, -136.8, 3.47, 0.93)
	pt3dadd(-73.53, -137.8, 3.1, 0.93)
	pt3dadd(-73.99, -138.5, 3.97, 0.93)
	pt3dadd(-74.36, -138.8, 3.37, 0.93)
  }
}
proc shape3d_2() {
  dend[4] {	pt3dadd(-74.92, -139.3, 3.33, 0.74)
	pt3dadd(-76.22, -140.3, 3.55, 0.74)
	pt3dadd(-77.98, -141.1, 3.51, 0.65)
	pt3dadd(-78.72, -141.9, 4.5, 0.65)
	pt3dadd(-78.72, -142.8, 4.5, 0.65)
	pt3dadd(-79.09, -143.7, 4.79, 0.56)
	pt3dadd(-79.84, -144.4, 4.79, 0.56)
	pt3dadd(-80.3, -144.6, 4.06, 0.83)
	pt3dadd(-80.95, -145.4, 4.06, 0.83)
	pt3dadd(-81.13, -146.1, 4.06, 0.83)
	pt3dadd(-81.41, -147, 4.06, 0.65)
	pt3dadd(-82.23, -147.9, 4.06, 0.65)
	pt3dadd(-82.88, -149.1, 3.75, 0.56)
	pt3dadd(-83.06, -150, 3.75, 0.56)
	pt3dadd(-83.53, -150.8, 4.17, 0.56)
	pt3dadd(-84.08, -152, 4.17, 0.56)
	pt3dadd(-84.64, -153, 4, 0.56)
	pt3dadd(-85.01, -153.8, 4, 0.65)
	pt3dadd(-85.66, -154.6, 4, 0.65)
	pt3dadd(-85.94, -155.4, 4, 0.56)
	pt3dadd(-86.31, -156.5, 4.43, 0.56)
	pt3dadd(-86.68, -157.1, 4.27, 0.65)
	pt3dadd(-87.05, -157.9, 4.27, 0.65)
	pt3dadd(-87.52, -159.1, 3.42, 0.65)
	pt3dadd(-87.89, -160.4, 3.23, 0.56)
	pt3dadd(-87.98, -161.6, 3.12, 0.56)
	pt3dadd(-88.26, -163, 3.37, 0.56)
	pt3dadd(-88.44, -163.5, 3.57, 0.65)
	pt3dadd(-88.44, -164.2, 4.15, 0.65)
	pt3dadd(-88.63, -164.9, 4.23, 0.65)
	pt3dadd(-88.41, -165.2, 4.23, 0.83)
	pt3dadd(-88.59, -166.4, 3.6, 0.56)
	pt3dadd(-88.87, -167.4, 3.25, 0.56)
	pt3dadd(-89.34, -168.8, 3.6, 0.56)
	pt3dadd(-89.24, -169.7, 3.19, 0.56)
	pt3dadd(-89.34, -170.1, 3.19, 0.74)
	pt3dadd(-89.71, -171, 2.51, 0.56)
	pt3dadd(-90.08, -171.9, 2.51, 0.56)
	pt3dadd(-90.26, -173.1, 3.2, 0.56)
	pt3dadd(-90.73, -173.6, 2.18, 0.56)
	pt3dadd(-91.1, -174.5, 2.31, 0.56)
	pt3dadd(-91.38, -175.1, 2.31, 0.56)
  }
  dend[5] {pt3dclear()
	pt3dadd(-20.26, -108.2, 0.8, 0.65)
	pt3dadd(-20.76, -109.3, 1.72, 0.74)
	pt3dadd(-20.76, -110.7, 1.56, 0.74)
	pt3dadd(-20.94, -112.3, 0.76, 0.74)
	pt3dadd(-21.78, -113.8, 0.17, 0.74)
	pt3dadd(-22.24, -114.9, 0.24, 0.65)
	pt3dadd(-23.54, -115.4, -0.36, 0.65)
	pt3dadd(-24.84, -115.8, -0.36, 0.65)
	pt3dadd(-25.4, -116.7, -0.74, 0.65)
	pt3dadd(-25.95, -118.2, -0.74, 0.65)
	pt3dadd(-27.25, -118.9, -0.56, 0.56)
	pt3dadd(-27.9, -119.7, 0.33, 0.56)
	pt3dadd(-28.27, -120.6, 0.02, 0.56)
	pt3dadd(-28.64, -121.2, 0.02, 0.74)
	pt3dadd(-28.92, -121.9, -0.42, 0.83)
	pt3dadd(-29.57, -123, 0.25, 0.56)
	pt3dadd(-29.85, -123.4, 0.25, 0.56)
	pt3dadd(-30.59, -124, -0.29, 0.56)
	pt3dadd(-31.05, -124.7, -0.29, 0.56)
	pt3dadd(-31.42, -125.5, -0.34, 0.56)
	pt3dadd(-32.17, -126.3, -0.04, 0.56)
	pt3dadd(-32.53, -127.2, -0.04, 0.56)
	pt3dadd(-32.99, -128.1, -0.14, 0.56)
	pt3dadd(-33.46, -129.2, -0.3, 0.56)
  }
  dend[6] {pt3dclear()
	pt3dadd(-20.26, -108.2, 0.8, 0.65)
	pt3dadd(-19.89, -109.5, 1.2, 0.56)
	pt3dadd(-20.17, -111.1, -0.08, 0.56)
	pt3dadd(-19.89, -112.7, 0.28, 0.56)
	pt3dadd(-19.8, -114.4, -0.82, 0.74)
	pt3dadd(-19.62, -116.3, -0.82, 0.74)
	pt3dadd(-19.8, -117.7, -1.01, 0.74)
	pt3dadd(-19.99, -119.2, -1.01, 0.74)
	pt3dadd(-20.17, -120.4, -1.46, 0.56)
	pt3dadd(-20.64, -121.4, -1.61, 0.56)
	pt3dadd(-21.1, -122.1, -0.99, 0.56)
	pt3dadd(-21.38, -122.9, -0.99, 0.83)
	pt3dadd(-21.56, -124, -0.86, 0.65)
	pt3dadd(-21.38, -125.3, -0.66, 0.65)
	pt3dadd(-21.47, -126.6, -1.27, 0.46)
	pt3dadd(-21.84, -127.9, -1.27, 0.46)
	pt3dadd(-22.21, -128.7, -1.77, 0.46)
	pt3dadd(-22.4, -129.7, -1.77, 0.74)
	pt3dadd(-22.49, -130.5, -1.77, 0.74)
	pt3dadd(-22.96, -131.6, -1.8, 0.74)
	pt3dadd(-23.05, -132.4, -1.36, 0.74)
	pt3dadd(-23.33, -133.1, -0.81, 0.56)
	pt3dadd(-24.16, -134.2, -1.85, 0.56)
	pt3dadd(-24.72, -135.3, -1.47, 0.74)
	pt3dadd(-25, -136.2, -2.02, 0.56)
	pt3dadd(-25.28, -137.4, -2.34, 0.56)
	pt3dadd(-25.65, -138.6, -1.29, 0.56)
	pt3dadd(-26.11, -140.3, -2.25, 0.56)
	pt3dadd(-25.74, -141.6, -2.48, 0.74)
	pt3dadd(-25.65, -142.6, -2.48, 0.83)
	pt3dadd(-25.65, -143.8, -2.48, 0.83)
	pt3dadd(-25.65, -144.9, -2.48, 0.83)
	pt3dadd(-25.58, -146.1, -2.48, 0.83)
	pt3dadd(-25.3, -148, -2.53, 0.83)
	pt3dadd(-25.12, -148.8, -2.95, 0.65)
	pt3dadd(-24.47, -150.5, -2.63, 0.65)
	pt3dadd(-24.37, -151.5, -2.23, 0.65)
	pt3dadd(-24, -152.4, -2.64, 0.65)
	pt3dadd(-23.72, -153.6, -2.64, 0.65)
	pt3dadd(-23.91, -154.9, -2.35, 0.65)
	pt3dadd(-23.91, -156.3, -1.71, 0.65)
	pt3dadd(-24.19, -157.5, -1.48, 0.65)
	pt3dadd(-24, -158.8, -2.54, 0.56)
	pt3dadd(-24.09, -160.4, -1.99, 0.56)
	pt3dadd(-23.91, -161.6, -1.99, 0.56)
	pt3dadd(-24, -162.2, -2.24, 0.56)
	pt3dadd(-24.19, -163.1, -2.24, 0.56)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
}

		
		
	proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
	objref DistalSynapses 
	objref DistalSynapsePositions 
	objref ProximalSynapses 
	objref ProximalSynapsePositions 
	proc synapse() { 
  
 // //***** PP syn   
 
DistalSynapses = new Vector(0,0) 
DistalSynapses .append(4) 
DistalSynapsePositions = new Vector(0,0) 
DistalSynapsePositions .append(0.96925) 
for i= 0 , 0 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // PP syn based on Greg and Staley 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0  
pre_list.append(syn) // # 0  
} 
 
 // //***** MC syn   
 
ProximalSynapses = new Vector(0,0) 
ProximalSynapses .append(0 , 1 , 2) 
ProximalSynapsePositions = new Vector(0,0) 
ProximalSynapsePositions .append(0.5    ,     0.5  ,   0.27408) 
for i= 0 , 2 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // #  
} 
 
 // //***** HIPP   
 
for i= 0 , 0 { 
dend[DistalSynapses .x[i]] syn = new Exp2Syn(DistalSynapsePositions .x[i]) // HIPP  
syn.tau1 = 0.5	syn.tau2 = 6	syn.e = -70 
pre_list.append(syn) // # 0 
} 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 1 
 
 // //***** Sprout   
 
for i= 0 , 2 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 1 
} 

}
	func is_art() { return 0 }

	endtemplate GranuleCell26