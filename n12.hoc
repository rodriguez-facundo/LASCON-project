/* Dentage Gyrus Granule Cell model associated with the papers: 

J. Tejada, G.M. Arisi, N. Garcia-Cairasco, A.C. Roque, Morphological alterations in newly born dentate gyrus granule cells that emerge after status epilepticus contribute to make them less excitable, PLoS ONE. 7 (2012) e40726. doi:10.1371/journal.pone.0040726.

J. Tejada, N. Garcia-Cairasco, A.C. Roque, Combined role of seizure-induced dendritic morphology alterations and spine loss in newborn granule cells with mossy fiber sprouting on the hyperexcitability of a computer model of the dentate gyrus, PLoS Comput. Biol. 10 (2014) e1003601. doi:10.1371/journal.pcbi.1003601.

julian.tejada@gmail.com - 2014  */

//Defining granule cell

	begintemplate GranuleCell12


// Original name on neuroMorpho.org n12-cont08-sl4.CNG.swc

ndend1=13

  
public  pre_list, connect_pre, subsets, is_art, is_connected
public  vbc2gc, vmc2gc, vhc2gc, vgc2bc, vbc2bc, vmc2bc, vhc2bc, vgc2mc, vbc2mc, vmc2mc, vhc2mc, vgc2hc, vmc2hc
public soma, dend
public all, gcldend, pdend, mdend, ddend

nst=10
	objectvar stim[nst]
double stimdur[nst], stimdel[nst], stimamp[nst]
public stim, stimdur, stimamp, stimdel
create soma, dend[ndend1]
objref syn, pre_list


proc init() {
	pre_list = new List()
	subsets()
	gctemp()
	synapse()
}
objref all, gcldend, pdend, mdend, ddend
proc subsets(){ local i
	objref all, gcldend, pdend, mdend, ddend
	all = new SectionList()
		soma all.append()
		for i=0, 12 dend[i] all.append()


	gcldend  = new SectionList()
		dend [0] gcldend.append()
// 		gcdend2 [0] gcldend.append()

	pdend  = new SectionList()
		for i=1,2  dend[i] pdend.append()
		dend [4] pdend.append()
		

	mdend  = new SectionList()
		dend[3] mdend.append()
		for i=5, 8 dend[i] mdend.append()
		dend[10] mdend.append()
		dend[12] mdend.append()
		
		
	ddend  = new SectionList()
		dend [9] ddend.append()
		dend [11] ddend.append()
}



proc gctemp() {

// 	soma {nseg=1 L=16.8 diam=16.8} // changed L & diam
	
/*	dend [0] {nseg=1  L=27.5855 diam=2.3784}
	dend [1] {nseg=1  L=3.90655 diam=1.546}
	dend [2] {nseg=1  L=49.90057 diam=1.048}
	dend [3] {nseg=1  L=58.66612 diam=1.2018}
	dend [4] {nseg=1  L=77.90403 diam=0.8822}
	dend [5] {nseg=1  L=65.45236 diam=0.7149}
	dend [6] {nseg=1  L=39.08021 diam=0.8525}
	dend [7] {nseg=1  L=28.99695 diam=0.6966}
	dend [8] {nseg=1  L=34.99227 diam=0.6848}
	dend [9] {nseg=1  L=42.50559 diam=0.6237}
	dend [10] {nseg=1 L=59.65832 diam=0.5661}
	dend [11] {nseg=1 L=87.08064 diam=0.6372}
	dend [12] {nseg=1 L=11.72373 diam=0.7863}
	dend [13] {nseg=1 L=78.56052 diam=0.5773}
	dend [14] {nseg=1 L=65.70179 diam=0.6466}
	dend [15] {nseg=1 L=135.75229 diam=0.6171}
	dend [16] {nseg=1 L=23.22847 diam=0.5976}
	dend [17] {nseg=1 L=54.47258 diam=0.6512}
	dend [18] {nseg=1 L=38.29144 diam=0.6966}
	dend [19] {nseg=1 L=42.69891 diam=0.5877}*/
	
	
// 	dend [20] {nseg=1 L=53.60330 diam=0.5795}
// 	for i = 1, 20	dend [i] {nseg=1 L=150 diam=3}

// 	gcdend2 [0] {nseg=1 L=50 diam=3}
// 	for i = 1, 3	gcdend2 [i] {nseg=1 L=150 diam=3}	 	

    
	forsec all {
		insert ccanl
	catau_ccanl = 10
	caiinf_ccanl = 0.000005
	Ra=210
	}

	soma {insert ichan2  //ildikos ichan
	gnatbar_ichan2=0.12  //original 0.030 to .055 
	gkfbar_ichan2=0.016  //original 0.015
	gksbar_ichan2=0.006
		insert borgka
	gkabar_borgka=0.012
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.002  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.005
		insert cat
	gcatbar_cat=0.000037
		insert gskch
	gskbar_gskch=0.001
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1

} 

		forsec gcldend {insert ichan2
	gnatbar_ichan2=0.018  //original 0.015
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.003  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.000075
		insert gskch
	gskbar_gskch=0.0004
		insert cagk
	gkbar_cagk=0.0006
	gl_ichan2 = 0.00004
	cm=1}
		
		forsec pdend {insert ichan2
	gnatbar_ichan2=0.013 
	gkfbar_ichan2=0.004
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0075
		insert cat
	gcatbar_cat=0.00025
		insert gskch
	gskbar_gskch=0.0002
		insert cagk
	gkbar_cagk=0.001
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05
	}
		
	 	forsec mdend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.006
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0005
		insert cat
	gcatbar_cat=0.0005
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063

	cm=1.0 
        insert pas 
      g_pas = 4e-05}

		forsec ddend {insert ichan2
	gnatbar_ichan2=0.008 
	gkfbar_ichan2=0.001
	gksbar_ichan2=0.008
		insert nca  // HAV-N- Ca channel
	gncabar_nca=0.001  // check to modify- original 0.004
		insert lca 
	glcabar_lca=0.0
		insert cat
	gcatbar_cat=0.001
		insert gskch
	gskbar_gskch=0.0
		insert cagk
	gkbar_cagk=0.0024
	gl_ichan2 = 0.000063
	cm=1.0 
        insert pas 
      g_pas = 4e-05}
		
	
// 	connect dend[0](0), soma(1)
// 	connect gcdend2[0](0), soma(1)
// 	for i=1,3 {
// 	connect dend[i](0), dend[i-1](1)
// 	}
// 	for i=1,3 {
// 	connect gcdend2[i](0), gcdend2[i-1](1)
// 	}

	 connect dend(0), soma(1)
	for i = 1, 2 connect dend[i](0), dend(1)
	for i = 3, 4 connect dend[i](0), dend[1](1)
	for i = 5, 6 connect dend[i](0), dend[3](1)
	for i = 7, 8 connect dend[i](0), dend[4](1)
	for i = 9, 10 connect dend[i](0), dend[5](1)
	for i = 11, 12 connect dend[i](0), dend[7](1)
// 	  connect /*axon*/(1), soma(0)
	  basic_shape()

	forsec all {enat = 45 ekf = -90 eks = -90  ek=-90  elca=130 etca=130	 esk=-90  el_ichan2 =-70  cao_ccanl=2 }  // make catau slower70e-3 	cao=2 cai=50.e-6 
}
proc shape3d_1() {
//   axon {pt3dclear()
// 	pt3dadd(0.7487, -38, 0.01, 0.2)
// 	pt3dadd(0.7487, -18, 0.01, 10)
//   }  
  soma {pt3dclear()
	pt3dadd(0.7487, -18, 0.01, 10)
	pt3dadd(0.7487, 0.1147, 0, 8.774)
  }
  dend {pt3dclear()
	pt3dadd(0.7487, 0.1147, 0, 8.774)
	pt3dadd(-2.04, -3.77, 0, 3.34)
	pt3dadd(-2.23, -5.7, -1.37, 2.97)
	pt3dadd(-2.5, -7.63, -1.27, 2.5)
	pt3dadd(-3.25, -9.56, -1.21, 1.95)
	pt3dadd(-3.99, -11.21, -1.34, 1.95)
	pt3dadd(-4.82, -12.41, -1.34, 1.95)
	pt3dadd(-6.03, -14.15, -1.98, 1.95)
	pt3dadd(-7.24, -15.63, -1.46, 1.76)
	pt3dadd(-8.44, -17.1, -1.67, 1.76)
	pt3dadd(-9.46, -18.02, -1.74, 1.95)
  }
//   dendrite {pt3dclear()
// 	pt3dadd(0.7487, 0.1147, 0, 8.774)
// 	pt3dadd(5.54, -1.65, -1.09, 0.56)
// 	pt3dadd(6.75, -2.29, -1.35, 0.56)
// 	pt3dadd(8.7, -2.75, -1.58, 0.46)
// 	pt3dadd(9.9, -3.4, -1.61, 0.46)
// 	pt3dadd(10.92, -3.67, -1.84, 0.46)
// 	pt3dadd(11.76, -4.59, -1.84, 0.46)
// 	pt3dadd(12.33, -5.28, -1.99, 0.46)
// 	pt3dadd(12.8, -6.02, -1.26, 0.46)
// 	pt3dadd(12.8, -6.75, -1.04, 0.46)
// 	pt3dadd(12.8, -7.86, -0.81, 0.46)
//   }
  dend[1] {pt3dclear()
	pt3dadd(-9.46, -18.02, -1.74, 1.95)
	pt3dadd(-9.24, -19.72, -1.75, 1.48)
	pt3dadd(-9.99, -20.73, -0.94, 1.3)
	pt3dadd(-11.66, -20.92, -1.54, 1.3)
	pt3dadd(-12.77, -21.29, -0.88, 1.39)
	pt3dadd(-14.16, -21.84, -1.26, 1.48)
	pt3dadd(-15.46, -22.85, -1.72, 1.48)
	pt3dadd(-16.02, -23.86, -1.72, 1.3)
	pt3dadd(-16.57, -24.78, -1.91, 1.3)
	pt3dadd(-17.96, -25.15, -1.92, 1.21)
	pt3dadd(-18.8, -25.61, -1.96, 1.11)
	pt3dadd(-20.28, -26.16, -1.83, 1.11)
	pt3dadd(-21.49, -26.8, -1.83, 1.3)
	pt3dadd(-22.7, -27.44, -1.94, 1.76)
  }
  dend[2] {pt3dclear()
	pt3dadd(-9.46, -18.02, -1.74, 1.95)
	pt3dadd(-10.85, -17.56, -2.07, 1.02)
	pt3dadd(-12.34, -17.37, -1.7, 0.83)
	pt3dadd(-13.36, -16.82, -2.43, 0.65)
	pt3dadd(-14.56, -16.18, -2.01, 0.65)
	pt3dadd(-15.68, -15.72, -2.01, 0.65)
	pt3dadd(-17.81, -13.88, -1.63, 0.65)
  }
  dend[3] {pt3dclear()
	pt3dadd(-22.7, -27.44, -1.94, 1.76)
	pt3dadd(-21.89, -29.11, -1.17, 0.93)
	pt3dadd(-21.61, -30.77, -1.65, 1.02)
	pt3dadd(-21.98, -32.14, -1.56, 1.02)
	pt3dadd(-23, -33.89, -1.42, 0.93)
	pt3dadd(-23.84, -34.99, -1.41, 0.93)
	pt3dadd(-23.93, -36.65, -1.41, 0.93)
	pt3dadd(-23.74, -38.03, -1.98, 0.93)
	pt3dadd(-24.21, -39.31, -2.4, 0.93)
	pt3dadd(-25.69, -40.78, -2.76, 0.83)
	pt3dadd(-27.08, -41.7, -2.99, 0.83)
	pt3dadd(-28.47, -43.08, -2.99, 0.83)
	pt3dadd(-30.33, -43.45, -2.75, 0.93)
	pt3dadd(-30.61, -44.46, -2.75, 0.83)
	pt3dadd(-30.79, -45.66, -2.64, 0.83)
	pt3dadd(-31.45, -46.47, -2.63, 0.93)
	pt3dadd(-32.56, -47.57, -3.02, 0.93)
	pt3dadd(-33.58, -48.58, -3.07, 0.83)
	pt3dadd(-34.42, -49.78, -3.37, 0.83)
	pt3dadd(-34.88, -50.88, -3.15, 1.02)
	pt3dadd(-34.6, -52.26, -3.26, 0.93)
	pt3dadd(-34.79, -53.64, -3.49, 0.83)
	pt3dadd(-34.51, -55.11, -3.01, 0.83)
	pt3dadd(-34.7, -55.93, -3.01, 0.83)
	pt3dadd(-35.35, -57.04, -3.12, 0.93)
	pt3dadd(-35.35, -57.96, -2.96, 0.93)
	pt3dadd(-34.6, -58.88, -4.04, 0.74)
	pt3dadd(-34.6, -59.98, -4.04, 0.74)
	pt3dadd(-35.62, -60.62, -3.56, 0.74)
	pt3dadd(-36, -61.63, -3.97, 0.74)
	pt3dadd(-36.55, -62.55, -3.51, 0.83)
	pt3dadd(-36.64, -63.56, -3.51, 1.02)
	pt3dadd(-36.54, -63.89, -2.86, 1.02)
  }
  dend[4] {pt3dclear()
	pt3dadd(-22.7, -27.44, -1.94, 1.76)
	pt3dadd(-24.37, -28.27, -1.38, 1.48)
	pt3dadd(-25.48, -29.56, -1.79, 1.3)
	pt3dadd(-27.06, -30.48, -1.79, 1.3)
	pt3dadd(-28.08, -30.94, -1.79, 1.86)
  }
  dend[5] {pt3dclear()
	pt3dadd(-36.54, -63.89, -2.86, 1.02)
	pt3dadd(-36.54, -65.09, -2.86, 0.74)
	pt3dadd(-36.82, -66.01, -2.86, 0.74)
	pt3dadd(-37.01, -66.93, -2.86, 0.83)
	pt3dadd(-37.47, -67.57, -2.86, 0.56)
	pt3dadd(-38.4, -67.29, -2.74, 0.56)
	pt3dadd(-38.49, -68.67, -3.36, 0.74)
	pt3dadd(-38.58, -69.96, -3.08, 0.74)
	pt3dadd(-38.4, -71.34, -2.96, 0.74)
  }
  dend[6] {pt3dclear()
	pt3dadd(-36.54, -63.89, -2.86, 1.02)
	pt3dadd(-37.75, -64.44, -2.94, 0.56)
	pt3dadd(-40.07, -65.27, -3.25, 0.56)
	pt3dadd(-40.9, -66.19, -3.25, 0.56)
	pt3dadd(-42.67, -66.19, -3.31, 0.56)
	pt3dadd(-43.5, -66.37, -3.31, 0.56)
	pt3dadd(-44.06, -67.2, -3.31, 0.56)
	pt3dadd(-45.08, -67.75, -3.26, 0.56)
	pt3dadd(-45.26, -68.67, -3.82, 0.56)
	pt3dadd(-45.73, -69.41, -3.33, 0.56)
	pt3dadd(-46.84, -70.14, -3.85, 0.56)
	pt3dadd(-46.56, -71.34, -3.72, 0.56)
	pt3dadd(-48.14, -71.52, -3.83, 0.56)
	pt3dadd(-49.34, -72.07, -4, 0.56)
	pt3dadd(-49.81, -72.9, -4.28, 0.56)
	pt3dadd(-50.64, -73.45, -4.77, 0.56)
	pt3dadd(-50.74, -75.2, -4.8, 0.56)
	pt3dadd(-51.48, -76.58, -4.95, 0.56)
	pt3dadd(-51.85, -77.86, -5.05, 0.56)
	pt3dadd(-52.41, -78.51, -4.72, 0.56)
  }
  dend[7] {pt3dclear()
	pt3dadd(-28.08, -30.94, -1.79, 1.86)
	pt3dadd(-28.39, -32.42, -0.63, 0.56)
	pt3dadd(-29.23, -32.97, -1.16, 0.56)
	pt3dadd(-31.55, -32.24, -0.76, 0.56)
	pt3dadd(-33.4, -33.25, -0.28, 0.56)
	pt3dadd(-34.14, -33.8, -0.42, 0.65)
	pt3dadd(-35.81, -34.35, -0.29, 0.65)
	pt3dadd(-37.48, -34.72, -0.38, 0.65)
	pt3dadd(-38.23, -35.08, -0.13, 0.74)
	pt3dadd(-39.71, -35.82, 0.07, 0.65)
	pt3dadd(-41.29, -35.82, 0.19, 0.65)
	pt3dadd(-42.96, -36.1, 0.03, 0.56)
	pt3dadd(-44.26, -36.74, 0.72, 0.56)
	pt3dadd(-45.93, -37.11, -0.08, 0.56)
	pt3dadd(-47.41, -38.21, 0.79, 0.56)
	pt3dadd(-48.52, -38.49, 0.35, 0.56)
  }
  dend[8] {pt3dclear()
	pt3dadd(-28.08, -30.94, -1.79, 1.86)
	pt3dadd(-29.65, -30.57, -2.01, 1.02)
	pt3dadd(-30.95, -30.2, -1.6, 0.65)
	pt3dadd(-33.18, -29.65, -0.76, 0.65)
	pt3dadd(-35.4, -28.55, -0.47, 0.65)
	pt3dadd(-38.19, -27.81, -1.41, 0.65)
	pt3dadd(-39.95, -28.09, -1.54, 0.65)
	pt3dadd(-42.18, -28.64, -0.88, 0.65)
	pt3dadd(-44.03, -29.19, -1.37, 0.65)
	pt3dadd(-44.73, -30.69, -2.04, 0.65)
	pt3dadd(-46.03, -31.34, -2.04, 0.65)
	pt3dadd(-48.81, -31.98, -2.16, 0.65)
	pt3dadd(-50.94, -32.53, -2.49, 0.65)
	pt3dadd(-53.26, -33.73, -2.97, 0.65)
	pt3dadd(-55.67, -34.19, -2.51, 0.65)
	pt3dadd(-57.99, -34.56, -2.45, 0.65)
	pt3dadd(-59.11, -35.66, -2.53, 0.65)
	pt3dadd(-60.87, -35.57, -3.49, 0.65)
	pt3dadd(-62.45, -36.03, -3.21, 0.65)
	pt3dadd(-63.28, -36.85, -3.44, 0.65)
	pt3dadd(-63.47, -37.96, -2.78, 0.65)
	pt3dadd(-63.84, -39.06, -2.73, 0.56)
  }
  dend[9] {pt3dclear()
	pt3dadd(-38.4, -71.34, -2.96, 0.74)
	pt3dadd(-38.68, -72.16, -2.62, 0.56)
	pt3dadd(-39.14, -72.9, -2.91, 0.56)
	pt3dadd(-39.7, -73.27, -2.39, 0.56)
	pt3dadd(-39.33, -74.28, -2.96, 0.56)
	pt3dadd(-39.23, -75.75, -2.44, 0.56)
	pt3dadd(-39.33, -76.58, -2.72, 0.65)
	pt3dadd(-38.95, -77.68, -3.05, 0.65)
	pt3dadd(-38.77, -78.87, -3.2, 0.65)
	pt3dadd(-38.58, -79.61, -3.28, 0.65)
	pt3dadd(-37.59, -80.33, -3, 0.37)
	pt3dadd(-37.96, -81.25, -2.64, 0.37)
	pt3dadd(-38.33, -82.54, -2.94, 0.37)
	pt3dadd(-38.14, -83.36, -3.14, 0.46)
	pt3dadd(-38.61, -84.37, -3.14, 0.93)
	pt3dadd(-38.51, -85.66, -3.33, 0.65)
	pt3dadd(-38.51, -86.76, -3.05, 0.65)
	pt3dadd(-38.79, -88.33, -3.56, 0.65)
	pt3dadd(-39.72, -89.06, -3.62, 0.56)
	pt3dadd(-40.65, -89.7, -4.1, 0.56)
	pt3dadd(-40.46, -90.72, -4.22, 0.56)
	pt3dadd(-40.18, -91.91, -4.28, 0.65)
	pt3dadd(-39.53, -92.46, -3.78, 0.56)
	pt3dadd(-38.88, -93.47, -3.68, 0.56)
	pt3dadd(-39.16, -94.39, -4.83, 0.56)
	pt3dadd(-38.98, -95.59, -4.49, 0.56)
	pt3dadd(-39.07, -97.06, -5.08, 0.56)
	pt3dadd(-38.88, -98.53, -5.27, 0.56)
	pt3dadd(-38.61, -99.63, -5.27, 0.56)
	pt3dadd(-38.18, -101, -5.56, 0.56)
	pt3dadd(-38.55, -102, -5.15, 0.56)
	pt3dadd(-37.9, -102.7, -5.74, 0.56)
	pt3dadd(-37.34, -103.6, -5.04, 0.65)
	pt3dadd(-37.07, -104.7, -4.78, 0.65)
	pt3dadd(-36.69, -105.9, -5.38, 0.56)
	pt3dadd(-36.42, -106.4, -5.38, 0.56)
	pt3dadd(-36.32, -107.5, -5.46, 0.56)
	pt3dadd(-36.51, -108.9, -4.85, 0.56)
	pt3dadd(-36.32, -110.1, -5.19, 0.56)
  }
  dend[10] {pt3dclear()
	pt3dadd(-38.4, -71.34, -2.96, 0.74)
	pt3dadd(-37.66, -72.35, -3.26, 0.65)
	pt3dadd(-38.49, -72.99, -3.68, 0.56)
	pt3dadd(-38.49, -74, -2.94, 0.65)
	pt3dadd(-38.03, -74.92, -3.54, 0.56)
	pt3dadd(-37.56, -76.02, -3.67, 0.56)
	pt3dadd(-37.01, -77.77, -3.3, 0.56)
	pt3dadd(-36.82, -78.87, -3.85, 0.56)
	pt3dadd(-36.64, -79.61, -3.52, 0.56)
	pt3dadd(-36.91, -80.34, -3.89, 0.56)
  }
  dend[11] {pt3dclear()
	pt3dadd(-48.52, -38.49, 0.35, 0.56)
  }
}
proc shape3d_2() {
  dend[11] {	pt3dadd(-49.21, -39.44, -0.51, 0.46)
	pt3dadd(-49.76, -40.81, -0.51, 0.46)
	pt3dadd(-49.86, -42.28, -0.49, 0.46)
	pt3dadd(-50.88, -43.66, 0.27, 0.46)
	pt3dadd(-51.53, -44.58, -0.17, 0.56)
	pt3dadd(-51.9, -46.42, -0.9, 0.46)
	pt3dadd(-51.9, -48.44, -0.44, 0.46)
	pt3dadd(-52.82, -49.36, -0.44, 0.46)
	pt3dadd(-53.38, -49.91, -0.26, 0.46)
	pt3dadd(-53.75, -51.66, -0.72, 0.46)
	pt3dadd(-55.79, -52.67, -0.47, 0.46)
	pt3dadd(-55.79, -54.14, -0.73, 0.46)
	pt3dadd(-56.26, -55.34, -0.21, 0.46)
	pt3dadd(-57.09, -56.9, -0.21, 0.46)
	pt3dadd(-57.55, -58.68, -0.02, 0.46)
	pt3dadd(-57.83, -59.78, 0.01, 0.46)
	pt3dadd(-57.83, -61.44, 0.05, 0.46)
	pt3dadd(-59.03, -62.26, -0.47, 0.46)
	pt3dadd(-60.43, -62.81, -0.18, 0.46)
	pt3dadd(-60.52, -64.56, -0.18, 0.46)
	pt3dadd(-61.35, -64.75, -0.12, 0.56)
	pt3dadd(-62.65, -65.2, -0.28, 0.46)
	pt3dadd(-64.04, -65.76, -0.4, 0.46)
	pt3dadd(-63.95, -67.23, -0.4, 0.46)
	pt3dadd(-64.6, -68.15, -0.37, 0.46)
	pt3dadd(-65.9, -68.42, -0.08, 0.46)
	pt3dadd(-65.9, -69.16, -0.08, 0.65)
	pt3dadd(-65.34, -70.08, 0.16, 0.56)
	pt3dadd(-65.25, -71.09, 0.15, 0.74)
	pt3dadd(-65.9, -72.01, -0.22, 0.74)
	pt3dadd(-67.57, -71.91, -0.25, 0.56)
	pt3dadd(-68.31, -72.37, -0.11, 0.56)
	pt3dadd(-69.42, -73.57, -0.48, 0.56)
	pt3dadd(-70.44, -74.12, -0.02, 0.56)
	pt3dadd(-72.21, -74.12, -0.02, 0.56)
	pt3dadd(-72.58, -75.13, -0.02, 0.56)
	pt3dadd(-72.76, -76.53, -0.75, 0.56)
	pt3dadd(-74.06, -76.71, -0.75, 0.56)
	pt3dadd(-74.25, -78.09, -0.33, 0.56)
	pt3dadd(-75.08, -79.19, -0.5, 0.65)
	pt3dadd(-75.64, -79.56, -1.26, 0.56)
	pt3dadd(-77.5, -81.49, -1.42, 0.56)
	pt3dadd(-78.33, -82.23, -1.42, 0.56)
	pt3dadd(-78.98, -83.42, -1.42, 0.56)
	pt3dadd(-80.28, -83.6, -1.5, 0.56)
	pt3dadd(-81.67, -84.8, -2.05, 0.56)
	pt3dadd(-83.25, -85.9, -2.54, 0.56)
	pt3dadd(-84.45, -86.91, -2.8, 0.56)
	pt3dadd(-85.66, -87.47, -3.18, 0.56)
	pt3dadd(-86.68, -88.94, -1.96, 0.56)
	pt3dadd(-87.98, -89.76, -2.61, 0.56)
	pt3dadd(-89.28, -90.68, -3.11, 0.56)
  }
  dend[12] {pt3dclear()
	pt3dadd(-48.52, -38.49, 0.35, 0.56)
	pt3dadd(-49.27, -37.75, 0.47, 0.46)
	pt3dadd(-50.75, -37.84, 1.02, 0.46)
	pt3dadd(-52.6, -38.21, 0.84, 0.37)
	pt3dadd(-54.27, -38.49, 1.09, 0.37)
	pt3dadd(-57.09, -38.7, 0.93, 0.37)
	pt3dadd(-60.34, -39.53, 1.31, 0.37)
	pt3dadd(-62.38, -39.71, 1.46, 0.37)
	pt3dadd(-65.16, -39.71, 1.46, 0.37)
	pt3dadd(-65.35, -41, 0.87, 0.37)
	pt3dadd(-66.74, -40.91, 1.39, 0.37)
	pt3dadd(-68.22, -40.91, 1.72, 0.37)
	pt3dadd(-69.06, -40.81, 1.67, 0.37)
	pt3dadd(-69.61, -42.1, 1.67, 0.37)
	pt3dadd(-70.45, -42.47, 1.65, 0.37)
	pt3dadd(-71.84, -42.65, 1.65, 0.37)
	pt3dadd(-72.86, -41.83, 1.65, 0.37)
	pt3dadd(-73.6, -43.02, 1.34, 0.37)
	pt3dadd(-74.53, -42.93, 1.34, 0.37)
	pt3dadd(-76.01, -43.48, 0.54, 0.37)
	pt3dadd(-77.41, -42.74, 0.54, 0.37)
	pt3dadd(-78.61, -42.93, 0.54, 0.37)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
}




		

		
		
		
		
	proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	soma $o2 = new NetCon (&v(1), $o1)
	//alternative statement		$o1.soma pre_list.append(new NetCon(soma.v(1),syn,0,Delsyn,0))
	}

	objref syn
// 	objref DistalSynapses 
// 	objref DistalSynapsePositions 
	objref ProximalSynapses 
	objref ProximalSynapsePositions 
	proc synapse() { 
  
 // //***** PP syn   
 
 
 // //***** MC syn   
 
ProximalSynapses = new Vector(0,0) 
ProximalSynapses .append(0 , 1 , 2 , 3 , 4 , 7 , 8) 
ProximalSynapsePositions = new Vector(0,0) 
ProximalSynapsePositions .append(0.5   ,      0.5   ,     0.5  ,   0.11329,         0.5  ,  0.074134 ,   0.043614) 
for i= 0 , 6 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // #  
} 
 
 // //***** HIPP   
 
 
 // //***** BC syn   
 
soma syn = new Exp2Syn(0.5) // BC  syn syn based on Bartos 
syn.tau1 = 0.26	syn.tau2 = 5.5	syn.e = -70 
pre_list.append(syn) // # 0 
 
 // //***** Sprout   
 
for i= 0 , 6 { 
dend[ProximalSynapses .x[i]] syn = new Exp2Syn(ProximalSynapsePositions .x[i]) // // MC syn *** Estimated 
syn.tau1 = 1.5	syn.tau2 = 5.5	syn.e = 0 
pre_list.append(syn) // # 0 
} 

}
	func is_art() { return 0 }

	endtemplate GranuleCell12